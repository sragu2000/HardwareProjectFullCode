
FullCode.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001af6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000074  00800060  00001af6  00001b8a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000010a  008000d4  008000d4  00001bfe  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001bfe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001c5c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000198  00000000  00000000  00001c98  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001eef  00000000  00000000  00001e30  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000996  00000000  00000000  00003d1f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001070  00000000  00000000  000046b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000420  00000000  00000000  00005728  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000075d  00000000  00000000  00005b48  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000013fa  00000000  00000000  000062a5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000168  00000000  00000000  0000769f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__ctors_end>
       4:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
       8:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
       c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      10:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      14:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      18:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      1c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      20:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      24:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      28:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      2c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      30:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      34:	0c 94 9d 02 	jmp	0x53a	; 0x53a <__vector_13>
      38:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      3c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      40:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      44:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      48:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      4c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      50:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	4e 41       	sbci	r20, 0x1E	; 30
      56:	4e 49       	Address 0x00000056 is out of bounds.
.word	0xffff	; ????

00000057 <pstr_inity>:
      57:	49 4e 49 54 59                                      INITY

0000005c <pstr_inf>:
      5c:	49 4e 46                                            INF

0000005f <pwr_m10>:
      5f:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
      6f:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000077 <pwr_p10>:
      77:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
      87:	ca 1b 0e 5a ae c5 9d 74 00 40 7a 10 f3 5a 00 a0     ...Z...t.@z..Z..
      97:	72 4e 18 09 00 10 a5 d4 e8 00 00 e8 76 48 17 00     rN..........vH..
      a7:	00 e4 0b 54 02 00 00 ca 9a 3b 00 00 00 e1 f5 05     ...T.....;......
      b7:	00 00 80 96 98 00 00 00 40 42 0f 00 00 00 a0 86     ........@B......
      c7:	01 00 00 00 10 27 00 00 00 00 e8 03 00 00 00 00     .....'..........
      d7:	64 00 00 00 00 00 0a 00 00 00 00 00 01 00 00 00     d...............
      e7:	00 00 2c 76 d8 88 dc 67 4f 08 23 df c1 df ae 59     ..,v...gO.#....Y
      f7:	e1 b1 b7 96 e5 e3 e4 53 c6 3a e6 51 99 76 96 e8     .......S.:.Q.v..
     107:	e6 c2 84 26 eb 89 8c 9b 62 ed 40 7c 6f fc ef bc     ...&....b.@|o...
     117:	9c 9f 40 f2 ba a5 6f a5 f4 90 05 5a 2a f7 5c 93     ..@...o....Z*.\.
     127:	6b 6c f9 67 6d c1 1b fc e0 e4 0d 47 fe f5 20 e6     kl.gm......G.. .
     137:	b5 00 d0 ed 90 2e 03 00 94 35 77 05 00 80 84 1e     .........5w.....
     147:	08 00 00 20 4e 0a 00 00 00 c8 0c 33 33 33 33 0f     ... N......3333.
     157:	98 6e 12 83 11 41 ef 8d 21 14 89 3b e6 55 16 cf     .n...A..!..;.U..
     167:	fe e6 db 18 d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb     ......K8..|.....
     177:	e4 24 20 32 84 72 5e 22 81 00 c9 f1 24 ec a1 e5     .$ 2.r^"....$...
     187:	3d 27 00                                            ='.

0000018a <__ctors_end>:
     18a:	11 24       	eor	r1, r1
     18c:	1f be       	out	0x3f, r1	; 63
     18e:	cf e5       	ldi	r28, 0x5F	; 95
     190:	d8 e0       	ldi	r29, 0x08	; 8
     192:	de bf       	out	0x3e, r29	; 62
     194:	cd bf       	out	0x3d, r28	; 61

00000196 <__do_copy_data>:
     196:	10 e0       	ldi	r17, 0x00	; 0
     198:	a0 e6       	ldi	r26, 0x60	; 96
     19a:	b0 e0       	ldi	r27, 0x00	; 0
     19c:	e6 ef       	ldi	r30, 0xF6	; 246
     19e:	fa e1       	ldi	r31, 0x1A	; 26
     1a0:	02 c0       	rjmp	.+4      	; 0x1a6 <__do_copy_data+0x10>
     1a2:	05 90       	lpm	r0, Z+
     1a4:	0d 92       	st	X+, r0
     1a6:	a4 3d       	cpi	r26, 0xD4	; 212
     1a8:	b1 07       	cpc	r27, r17
     1aa:	d9 f7       	brne	.-10     	; 0x1a2 <__do_copy_data+0xc>

000001ac <__do_clear_bss>:
     1ac:	21 e0       	ldi	r18, 0x01	; 1
     1ae:	a4 ed       	ldi	r26, 0xD4	; 212
     1b0:	b0 e0       	ldi	r27, 0x00	; 0
     1b2:	01 c0       	rjmp	.+2      	; 0x1b6 <.do_clear_bss_start>

000001b4 <.do_clear_bss_loop>:
     1b4:	1d 92       	st	X+, r1

000001b6 <.do_clear_bss_start>:
     1b6:	ae 3d       	cpi	r26, 0xDE	; 222
     1b8:	b2 07       	cpc	r27, r18
     1ba:	e1 f7       	brne	.-8      	; 0x1b4 <.do_clear_bss_loop>
     1bc:	0e 94 c8 05 	call	0xb90	; 0xb90 <main>
     1c0:	0c 94 79 0d 	jmp	0x1af2	; 0x1af2 <_exit>

000001c4 <__bad_interrupt>:
     1c4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001c8 <I2C_Init>:
	return 1;												/* If yes then return 1 to indicate ack received i.e. ready to accept data byte */
	if (status == 0x20)										/* Check weather SLA+W transmitted & nack received or not? */
	return 2;												/* If yes then return 2 to indicate nack received i.e. device is busy */
	else
	return 3;												/* Else return 3 to indicate SLA+W failed */
}
     1c8:	11 b8       	out	0x01, r1	; 1
     1ca:	80 e2       	ldi	r24, 0x20	; 32
     1cc:	80 b9       	out	0x00, r24	; 0
     1ce:	08 95       	ret

000001d0 <I2C_Repeated_Start>:

uint8_t I2C_Repeated_Start(char slave_read_address)			/* I2C repeated start function */
{
	uint8_t status;											/* Declare variable */
	TWCR = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);					/* Enable TWI, generate start condition and clear interrupt flag */
     1d0:	94 ea       	ldi	r25, 0xA4	; 164
     1d2:	96 bf       	out	0x36, r25	; 54
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (start condition) */
     1d4:	06 b6       	in	r0, 0x36	; 54
     1d6:	07 fe       	sbrs	r0, 7
     1d8:	fd cf       	rjmp	.-6      	; 0x1d4 <I2C_Repeated_Start+0x4>
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
     1da:	91 b1       	in	r25, 0x01	; 1
     1dc:	98 7f       	andi	r25, 0xF8	; 248
	if (status != 0x10)										/* Check weather repeated start condition transmitted successfully or not? */
     1de:	90 31       	cpi	r25, 0x10	; 16
     1e0:	71 f4       	brne	.+28     	; 0x1fe <I2C_Repeated_Start+0x2e>
	return 0;												/* If no then return 0 to indicate repeated start condition fail */
	TWDR = slave_read_address;								/* If yes then write SLA+R in TWI data register */
     1e2:	83 b9       	out	0x03, r24	; 3
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
     1e4:	84 e8       	ldi	r24, 0x84	; 132
     1e6:	86 bf       	out	0x36, r24	; 54
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
     1e8:	06 b6       	in	r0, 0x36	; 54
     1ea:	07 fe       	sbrs	r0, 7
     1ec:	fd cf       	rjmp	.-6      	; 0x1e8 <I2C_Repeated_Start+0x18>
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
     1ee:	81 b1       	in	r24, 0x01	; 1
     1f0:	88 7f       	andi	r24, 0xF8	; 248
	if (status == 0x40)										/* Check weather SLA+R transmitted & ack received or not? */
     1f2:	80 34       	cpi	r24, 0x40	; 64
     1f4:	31 f0       	breq	.+12     	; 0x202 <I2C_Repeated_Start+0x32>
	return 1;												/* If yes then return 1 to indicate ack received */ 
	if (status == 0x20)										/* Check weather SLA+R transmitted & nack received or not? */
     1f6:	80 32       	cpi	r24, 0x20	; 32
     1f8:	31 f4       	brne	.+12     	; 0x206 <I2C_Repeated_Start+0x36>
	return 2;												/* If yes then return 2 to indicate nack received i.e. device is busy */
     1fa:	82 e0       	ldi	r24, 0x02	; 2
     1fc:	08 95       	ret
	uint8_t status;											/* Declare variable */
	TWCR = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);					/* Enable TWI, generate start condition and clear interrupt flag */
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (start condition) */
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status != 0x10)										/* Check weather repeated start condition transmitted successfully or not? */
	return 0;												/* If no then return 0 to indicate repeated start condition fail */
     1fe:	80 e0       	ldi	r24, 0x00	; 0
     200:	08 95       	ret
	TWDR = slave_read_address;								/* If yes then write SLA+R in TWI data register */
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status == 0x40)										/* Check weather SLA+R transmitted & ack received or not? */
	return 1;												/* If yes then return 1 to indicate ack received */ 
     202:	81 e0       	ldi	r24, 0x01	; 1
     204:	08 95       	ret
	if (status == 0x20)										/* Check weather SLA+R transmitted & nack received or not? */
	return 2;												/* If yes then return 2 to indicate nack received i.e. device is busy */
	else
	return 3;												/* Else return 3 to indicate SLA+W failed */
     206:	83 e0       	ldi	r24, 0x03	; 3
}
     208:	08 95       	ret

0000020a <I2C_Stop>:

void I2C_Stop()												/* I2C stop function */
{
	TWCR=(1<<TWSTO)|(1<<TWINT)|(1<<TWEN);					/* Enable TWI, generate stop condition and clear interrupt flag */
     20a:	84 e9       	ldi	r24, 0x94	; 148
     20c:	86 bf       	out	0x36, r24	; 54
	while(TWCR & (1<<TWSTO));								/* Wait until stop condition execution */ 
     20e:	06 b6       	in	r0, 0x36	; 54
     210:	04 fc       	sbrc	r0, 4
     212:	fd cf       	rjmp	.-6      	; 0x20e <I2C_Stop+0x4>
}
     214:	08 95       	ret

00000216 <I2C_Start_Wait>:

void I2C_Start_Wait(char slave_write_address)				/* I2C start wait function */
{
     216:	cf 93       	push	r28
     218:	c8 2f       	mov	r28, r24
	uint8_t status;											/* Declare variable */
	while (1)
	{
		TWCR = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);				/* Enable TWI, generate start condition and clear interrupt flag */
     21a:	84 ea       	ldi	r24, 0xA4	; 164
     21c:	86 bf       	out	0x36, r24	; 54
		while (!(TWCR & (1<<TWINT)));						/* Wait until TWI finish its current job (start condition) */
     21e:	06 b6       	in	r0, 0x36	; 54
     220:	07 fe       	sbrs	r0, 7
     222:	fd cf       	rjmp	.-6      	; 0x21e <I2C_Start_Wait+0x8>
		status = TWSR & 0xF8;								/* Read TWI status register with masking lower three bits */
     224:	81 b1       	in	r24, 0x01	; 1
     226:	88 7f       	andi	r24, 0xF8	; 248
		if (status != 0x08)									/* Check weather start condition transmitted successfully or not? */
     228:	88 30       	cpi	r24, 0x08	; 8
     22a:	b9 f7       	brne	.-18     	; 0x21a <I2C_Start_Wait+0x4>
		continue;											/* If no then continue with start loop again */
		TWDR = slave_write_address;							/* If yes then write SLA+W in TWI data register */
     22c:	c3 b9       	out	0x03, r28	; 3
		TWCR = (1<<TWEN)|(1<<TWINT);						/* Enable TWI and clear interrupt flag */
     22e:	84 e8       	ldi	r24, 0x84	; 132
     230:	86 bf       	out	0x36, r24	; 54
		while (!(TWCR & (1<<TWINT)));						/* Wait until TWI finish its current job (Write operation) */
     232:	06 b6       	in	r0, 0x36	; 54
     234:	07 fe       	sbrs	r0, 7
     236:	fd cf       	rjmp	.-6      	; 0x232 <I2C_Start_Wait+0x1c>
		status = TWSR & 0xF8;								/* Read TWI status register with masking lower three bits */
     238:	81 b1       	in	r24, 0x01	; 1
     23a:	88 7f       	andi	r24, 0xF8	; 248
		if (status != 0x18 )								/* Check weather SLA+W transmitted & ack received or not? */
     23c:	88 31       	cpi	r24, 0x18	; 24
     23e:	19 f0       	breq	.+6      	; 0x246 <I2C_Start_Wait+0x30>
		{
			I2C_Stop();										/* If not then generate stop condition */
     240:	0e 94 05 01 	call	0x20a	; 0x20a <I2C_Stop>
			continue;										/* continue with start loop again */
     244:	ea cf       	rjmp	.-44     	; 0x21a <I2C_Start_Wait+0x4>
		}
		break;												/* If yes then break loop */
	}
}
     246:	cf 91       	pop	r28
     248:	08 95       	ret

0000024a <I2C_Write>:

uint8_t I2C_Write(char data)								/* I2C write function */
{
	uint8_t status;											/* Declare variable */
	TWDR = data;											/* Copy data in TWI data register */
     24a:	83 b9       	out	0x03, r24	; 3
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
     24c:	84 e8       	ldi	r24, 0x84	; 132
     24e:	86 bf       	out	0x36, r24	; 54
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
     250:	06 b6       	in	r0, 0x36	; 54
     252:	07 fe       	sbrs	r0, 7
     254:	fd cf       	rjmp	.-6      	; 0x250 <I2C_Write+0x6>
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
     256:	81 b1       	in	r24, 0x01	; 1
     258:	88 7f       	andi	r24, 0xF8	; 248
	if (status == 0x28)										/* Check weather data transmitted & ack received or not? */
     25a:	88 32       	cpi	r24, 0x28	; 40
     25c:	21 f0       	breq	.+8      	; 0x266 <I2C_Write+0x1c>
	return 0;												/* If yes then return 0 to indicate ack received */
	if (status == 0x30)										/* Check weather data transmitted & nack received or not? */
     25e:	80 33       	cpi	r24, 0x30	; 48
     260:	21 f4       	brne	.+8      	; 0x26a <I2C_Write+0x20>
	return 1;												/* If yes then return 1 to indicate nack received */
     262:	81 e0       	ldi	r24, 0x01	; 1
     264:	08 95       	ret
	TWDR = data;											/* Copy data in TWI data register */
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status == 0x28)										/* Check weather data transmitted & ack received or not? */
	return 0;												/* If yes then return 0 to indicate ack received */
     266:	80 e0       	ldi	r24, 0x00	; 0
     268:	08 95       	ret
	if (status == 0x30)										/* Check weather data transmitted & nack received or not? */
	return 1;												/* If yes then return 1 to indicate nack received */
	else
	return 2;												/* Else return 2 to indicate data transmission failed */
     26a:	82 e0       	ldi	r24, 0x02	; 2
}
     26c:	08 95       	ret

0000026e <I2C_Read_Ack>:

char I2C_Read_Ack()										/* I2C read ack function */
{
	TWCR=(1<<TWEN)|(1<<TWINT)|(1<<TWEA);					/* Enable TWI, generation of ack and clear interrupt flag */
     26e:	84 ec       	ldi	r24, 0xC4	; 196
     270:	86 bf       	out	0x36, r24	; 54
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (read operation) */
     272:	06 b6       	in	r0, 0x36	; 54
     274:	07 fe       	sbrs	r0, 7
     276:	fd cf       	rjmp	.-6      	; 0x272 <I2C_Read_Ack+0x4>
	return TWDR;											/* Return received data */
     278:	83 b1       	in	r24, 0x03	; 3
}	
     27a:	08 95       	ret

0000027c <I2C_Read_Nack>:

char I2C_Read_Nack()										/* I2C read nack function */
{
	TWCR=(1<<TWEN)|(1<<TWINT);								/* Enable TWI and clear interrupt flag */
     27c:	84 e8       	ldi	r24, 0x84	; 132
     27e:	86 bf       	out	0x36, r24	; 54
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (read operation) */
     280:	06 b6       	in	r0, 0x36	; 54
     282:	07 fe       	sbrs	r0, 7
     284:	fd cf       	rjmp	.-6      	; 0x280 <I2C_Read_Nack+0x4>
	return TWDR;											/* Return received data */
     286:	83 b1       	in	r24, 0x03	; 3
}	
     288:	08 95       	ret

0000028a <LCD_Command>:
	while (*str!='\0')
	{
		USART_transmit(*str);
		str++;
	}
}
     28a:	88 bb       	out	0x18, r24	; 24
     28c:	85 b3       	in	r24, 0x15	; 21
     28e:	8c 7f       	andi	r24, 0xFC	; 252
     290:	85 bb       	out	0x15, r24	; 21
     292:	85 b3       	in	r24, 0x15	; 21
     294:	84 60       	ori	r24, 0x04	; 4
     296:	85 bb       	out	0x15, r24	; 21
     298:	82 e0       	ldi	r24, 0x02	; 2
     29a:	8a 95       	dec	r24
     29c:	f1 f7       	brne	.-4      	; 0x29a <LCD_Command+0x10>
     29e:	00 c0       	rjmp	.+0      	; 0x2a0 <LCD_Command+0x16>
     2a0:	85 b3       	in	r24, 0x15	; 21
     2a2:	8b 7f       	andi	r24, 0xFB	; 251
     2a4:	85 bb       	out	0x15, r24	; 21
     2a6:	8f e9       	ldi	r24, 0x9F	; 159
     2a8:	9f e0       	ldi	r25, 0x0F	; 15
     2aa:	01 97       	sbiw	r24, 0x01	; 1
     2ac:	f1 f7       	brne	.-4      	; 0x2aa <LCD_Command+0x20>
     2ae:	00 c0       	rjmp	.+0      	; 0x2b0 <LCD_Command+0x26>
     2b0:	00 00       	nop
     2b2:	08 95       	ret

000002b4 <LCD_Char>:
     2b4:	88 bb       	out	0x18, r24	; 24
     2b6:	85 b3       	in	r24, 0x15	; 21
     2b8:	8d 7f       	andi	r24, 0xFD	; 253
     2ba:	85 bb       	out	0x15, r24	; 21
     2bc:	85 b3       	in	r24, 0x15	; 21
     2be:	85 60       	ori	r24, 0x05	; 5
     2c0:	85 bb       	out	0x15, r24	; 21
     2c2:	82 e0       	ldi	r24, 0x02	; 2
     2c4:	8a 95       	dec	r24
     2c6:	f1 f7       	brne	.-4      	; 0x2c4 <LCD_Char+0x10>
     2c8:	00 c0       	rjmp	.+0      	; 0x2ca <LCD_Char+0x16>
     2ca:	85 b3       	in	r24, 0x15	; 21
     2cc:	8b 7f       	andi	r24, 0xFB	; 251
     2ce:	85 bb       	out	0x15, r24	; 21
     2d0:	8f ec       	ldi	r24, 0xCF	; 207
     2d2:	97 e0       	ldi	r25, 0x07	; 7
     2d4:	01 97       	sbiw	r24, 0x01	; 1
     2d6:	f1 f7       	brne	.-4      	; 0x2d4 <LCD_Char+0x20>
     2d8:	00 c0       	rjmp	.+0      	; 0x2da <LCD_Char+0x26>
     2da:	00 00       	nop
     2dc:	08 95       	ret

000002de <LCD_Init>:
     2de:	84 b3       	in	r24, 0x14	; 20
     2e0:	87 60       	ori	r24, 0x07	; 7
     2e2:	84 bb       	out	0x14, r24	; 20
     2e4:	8f ef       	ldi	r24, 0xFF	; 255
     2e6:	87 bb       	out	0x17, r24	; 23
     2e8:	8f e9       	ldi	r24, 0x9F	; 159
     2ea:	9c e8       	ldi	r25, 0x8C	; 140
     2ec:	01 97       	sbiw	r24, 0x01	; 1
     2ee:	f1 f7       	brne	.-4      	; 0x2ec <LCD_Init+0xe>
     2f0:	00 c0       	rjmp	.+0      	; 0x2f2 <LCD_Init+0x14>
     2f2:	00 00       	nop
     2f4:	88 e3       	ldi	r24, 0x38	; 56
     2f6:	0e 94 45 01 	call	0x28a	; 0x28a <LCD_Command>
     2fa:	8c e0       	ldi	r24, 0x0C	; 12
     2fc:	0e 94 45 01 	call	0x28a	; 0x28a <LCD_Command>
     300:	86 e0       	ldi	r24, 0x06	; 6
     302:	0e 94 45 01 	call	0x28a	; 0x28a <LCD_Command>
     306:	81 e0       	ldi	r24, 0x01	; 1
     308:	0e 94 45 01 	call	0x28a	; 0x28a <LCD_Command>
     30c:	80 e8       	ldi	r24, 0x80	; 128
     30e:	0e 94 45 01 	call	0x28a	; 0x28a <LCD_Command>
     312:	08 95       	ret

00000314 <LCD_String>:
     314:	0f 93       	push	r16
     316:	1f 93       	push	r17
     318:	cf 93       	push	r28
     31a:	df 93       	push	r29
     31c:	8c 01       	movw	r16, r24
     31e:	c0 e0       	ldi	r28, 0x00	; 0
     320:	d0 e0       	ldi	r29, 0x00	; 0
     322:	03 c0       	rjmp	.+6      	; 0x32a <LCD_String+0x16>
     324:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <LCD_Char>
     328:	21 96       	adiw	r28, 0x01	; 1
     32a:	f8 01       	movw	r30, r16
     32c:	ec 0f       	add	r30, r28
     32e:	fd 1f       	adc	r31, r29
     330:	80 81       	ld	r24, Z
     332:	81 11       	cpse	r24, r1
     334:	f7 cf       	rjmp	.-18     	; 0x324 <LCD_String+0x10>
     336:	df 91       	pop	r29
     338:	cf 91       	pop	r28
     33a:	1f 91       	pop	r17
     33c:	0f 91       	pop	r16
     33e:	08 95       	ret

00000340 <LCD_String_xy>:
     340:	cf 93       	push	r28
     342:	df 93       	push	r29
     344:	ea 01       	movw	r28, r20
     346:	81 30       	cpi	r24, 0x01	; 1
     348:	31 f4       	brne	.+12     	; 0x356 <LCD_String_xy+0x16>
     34a:	86 2f       	mov	r24, r22
     34c:	8f 70       	andi	r24, 0x0F	; 15
     34e:	80 68       	ori	r24, 0x80	; 128
     350:	0e 94 45 01 	call	0x28a	; 0x28a <LCD_Command>
     354:	07 c0       	rjmp	.+14     	; 0x364 <LCD_String_xy+0x24>
     356:	82 30       	cpi	r24, 0x02	; 2
     358:	29 f4       	brne	.+10     	; 0x364 <LCD_String_xy+0x24>
     35a:	86 2f       	mov	r24, r22
     35c:	8f 70       	andi	r24, 0x0F	; 15
     35e:	80 6c       	ori	r24, 0xC0	; 192
     360:	0e 94 45 01 	call	0x28a	; 0x28a <LCD_Command>
     364:	ce 01       	movw	r24, r28
     366:	0e 94 8a 01 	call	0x314	; 0x314 <LCD_String>
     36a:	df 91       	pop	r29
     36c:	cf 91       	pop	r28
     36e:	08 95       	ret

00000370 <LCD_Clear>:
     370:	81 e0       	ldi	r24, 0x01	; 1
     372:	0e 94 45 01 	call	0x28a	; 0x28a <LCD_Command>
     376:	08 95       	ret

00000378 <ADC_Init>:
     378:	8f ef       	ldi	r24, 0xFF	; 255
     37a:	87 bb       	out	0x17, r24	; 23
     37c:	1a ba       	out	0x1a, r1	; 26
     37e:	87 e8       	ldi	r24, 0x87	; 135
     380:	86 b9       	out	0x06, r24	; 6
     382:	80 ec       	ldi	r24, 0xC0	; 192
     384:	87 b9       	out	0x07, r24	; 7
     386:	08 95       	ret

00000388 <ADC_Read>:
     388:	86 b1       	in	r24, 0x06	; 6
     38a:	80 64       	ori	r24, 0x40	; 64
     38c:	86 b9       	out	0x06, r24	; 6
     38e:	34 9b       	sbis	0x06, 4	; 6
     390:	fe cf       	rjmp	.-4      	; 0x38e <ADC_Read+0x6>
     392:	8a e1       	ldi	r24, 0x1A	; 26
     394:	8a 95       	dec	r24
     396:	f1 f7       	brne	.-4      	; 0x394 <ADC_Read+0xc>
     398:	00 c0       	rjmp	.+0      	; 0x39a <ADC_Read+0x12>
     39a:	24 b1       	in	r18, 0x04	; 4
     39c:	85 b1       	in	r24, 0x05	; 5
     39e:	90 e0       	ldi	r25, 0x00	; 0
     3a0:	98 2f       	mov	r25, r24
     3a2:	88 27       	eor	r24, r24
     3a4:	82 0f       	add	r24, r18
     3a6:	91 1d       	adc	r25, r1
     3a8:	08 95       	ret

000003aa <get_altitude>:
     3aa:	f8 94       	cli
     3ac:	8f 5f       	subi	r24, 0xFF	; 255
     3ae:	90 e0       	ldi	r25, 0x00	; 0
     3b0:	07 c0       	rjmp	.+14     	; 0x3c0 <get_altitude+0x16>
     3b2:	e9 2f       	mov	r30, r25
     3b4:	f0 e0       	ldi	r31, 0x00	; 0
     3b6:	ec 52       	subi	r30, 0x2C	; 44
     3b8:	fe 4f       	sbci	r31, 0xFE	; 254
     3ba:	20 83       	st	Z, r18
     3bc:	9f 5f       	subi	r25, 0xFF	; 255
     3be:	8f 5f       	subi	r24, 0xFF	; 255
     3c0:	48 2f       	mov	r20, r24
     3c2:	50 e0       	ldi	r21, 0x00	; 0
     3c4:	fa 01       	movw	r30, r20
     3c6:	e7 52       	subi	r30, 0x27	; 39
     3c8:	ff 4f       	sbci	r31, 0xFF	; 255
     3ca:	20 81       	ld	r18, Z
     3cc:	2c 32       	cpi	r18, 0x2C	; 44
     3ce:	89 f7       	brne	.-30     	; 0x3b2 <get_altitude+0x8>
     3d0:	e9 2f       	mov	r30, r25
     3d2:	f0 e0       	ldi	r31, 0x00	; 0
     3d4:	da 01       	movw	r26, r20
     3d6:	a6 52       	subi	r26, 0x26	; 38
     3d8:	bf 4f       	sbci	r27, 0xFF	; 255
     3da:	8c 91       	ld	r24, X
     3dc:	ec 52       	subi	r30, 0x2C	; 44
     3de:	fe 4f       	sbci	r31, 0xFE	; 254
     3e0:	80 83       	st	Z, r24
     3e2:	78 94       	sei
     3e4:	08 95       	ret

000003e6 <convert_to_degrees>:
     3e6:	8f 92       	push	r8
     3e8:	9f 92       	push	r9
     3ea:	af 92       	push	r10
     3ec:	bf 92       	push	r11
     3ee:	cf 92       	push	r12
     3f0:	df 92       	push	r13
     3f2:	ef 92       	push	r14
     3f4:	ff 92       	push	r15
     3f6:	0f 93       	push	r16
     3f8:	1f 93       	push	r17
     3fa:	0e 94 4b 09 	call	0x1296	; 0x1296 <atof>
     3fe:	20 e0       	ldi	r18, 0x00	; 0
     400:	30 e0       	ldi	r19, 0x00	; 0
     402:	48 ec       	ldi	r20, 0xC8	; 200
     404:	52 e4       	ldi	r21, 0x42	; 66
     406:	0e 94 5f 07 	call	0xebe	; 0xebe <__divsf3>
     40a:	6b 01       	movw	r12, r22
     40c:	7c 01       	movw	r14, r24
     40e:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <__fixsfsi>
     412:	07 2e       	mov	r0, r23
     414:	00 0c       	add	r0, r0
     416:	88 0b       	sbc	r24, r24
     418:	99 0b       	sbc	r25, r25
     41a:	0e 94 09 08 	call	0x1012	; 0x1012 <__floatsisf>
     41e:	4b 01       	movw	r8, r22
     420:	5c 01       	movw	r10, r24
     422:	9b 01       	movw	r18, r22
     424:	ac 01       	movw	r20, r24
     426:	c7 01       	movw	r24, r14
     428:	b6 01       	movw	r22, r12
     42a:	0e 94 ed 06 	call	0xdda	; 0xdda <__subsf3>
     42e:	2a e9       	ldi	r18, 0x9A	; 154
     430:	39 e9       	ldi	r19, 0x99	; 153
     432:	49 e1       	ldi	r20, 0x19	; 25
     434:	5f e3       	ldi	r21, 0x3F	; 63
     436:	0e 94 5f 07 	call	0xebe	; 0xebe <__divsf3>
     43a:	9b 01       	movw	r18, r22
     43c:	ac 01       	movw	r20, r24
     43e:	c5 01       	movw	r24, r10
     440:	b4 01       	movw	r22, r8
     442:	0e 94 ee 06 	call	0xddc	; 0xddc <__addsf3>
     446:	0b e7       	ldi	r16, 0x7B	; 123
     448:	11 e0       	ldi	r17, 0x01	; 1
     44a:	24 e0       	ldi	r18, 0x04	; 4
     44c:	46 e0       	ldi	r20, 0x06	; 6
     44e:	0e 94 2b 09 	call	0x1256	; 0x1256 <dtostrf>
     452:	1f 91       	pop	r17
     454:	0f 91       	pop	r16
     456:	ff 90       	pop	r15
     458:	ef 90       	pop	r14
     45a:	df 90       	pop	r13
     45c:	cf 90       	pop	r12
     45e:	bf 90       	pop	r11
     460:	af 90       	pop	r10
     462:	9f 90       	pop	r9
     464:	8f 90       	pop	r8
     466:	08 95       	ret

00000468 <get_latitude>:
     468:	f8 94       	cli
     46a:	8f 5f       	subi	r24, 0xFF	; 255
     46c:	90 e0       	ldi	r25, 0x00	; 0
     46e:	07 c0       	rjmp	.+14     	; 0x47e <get_latitude+0x16>
     470:	e9 2f       	mov	r30, r25
     472:	f0 e0       	ldi	r31, 0x00	; 0
     474:	e3 55       	subi	r30, 0x53	; 83
     476:	fe 4f       	sbci	r31, 0xFE	; 254
     478:	20 83       	st	Z, r18
     47a:	9f 5f       	subi	r25, 0xFF	; 255
     47c:	8f 5f       	subi	r24, 0xFF	; 255
     47e:	e8 2f       	mov	r30, r24
     480:	f0 e0       	ldi	r31, 0x00	; 0
     482:	e7 52       	subi	r30, 0x27	; 39
     484:	ff 4f       	sbci	r31, 0xFF	; 255
     486:	20 81       	ld	r18, Z
     488:	2c 32       	cpi	r18, 0x2C	; 44
     48a:	91 f7       	brne	.-28     	; 0x470 <get_latitude+0x8>
     48c:	31 e0       	ldi	r19, 0x01	; 1
     48e:	39 0f       	add	r19, r25
     490:	e9 2f       	mov	r30, r25
     492:	f0 e0       	ldi	r31, 0x00	; 0
     494:	8f 5f       	subi	r24, 0xFF	; 255
     496:	e3 55       	subi	r30, 0x53	; 83
     498:	fe 4f       	sbci	r31, 0xFE	; 254
     49a:	20 83       	st	Z, r18
     49c:	23 2f       	mov	r18, r19
     49e:	30 e0       	ldi	r19, 0x00	; 0
     4a0:	e8 2f       	mov	r30, r24
     4a2:	f0 e0       	ldi	r31, 0x00	; 0
     4a4:	e7 52       	subi	r30, 0x27	; 39
     4a6:	ff 4f       	sbci	r31, 0xFF	; 255
     4a8:	80 81       	ld	r24, Z
     4aa:	f9 01       	movw	r30, r18
     4ac:	e3 55       	subi	r30, 0x53	; 83
     4ae:	fe 4f       	sbci	r31, 0xFE	; 254
     4b0:	80 83       	st	Z, r24
     4b2:	8d ea       	ldi	r24, 0xAD	; 173
     4b4:	91 e0       	ldi	r25, 0x01	; 1
     4b6:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <convert_to_degrees>
     4ba:	78 94       	sei
     4bc:	08 95       	ret

000004be <get_longitude>:
     4be:	f8 94       	cli
     4c0:	8f 5f       	subi	r24, 0xFF	; 255
     4c2:	90 e0       	ldi	r25, 0x00	; 0
     4c4:	07 c0       	rjmp	.+14     	; 0x4d4 <get_longitude+0x16>
     4c6:	e9 2f       	mov	r30, r25
     4c8:	f0 e0       	ldi	r31, 0x00	; 0
     4ca:	e1 57       	subi	r30, 0x71	; 113
     4cc:	fe 4f       	sbci	r31, 0xFE	; 254
     4ce:	20 83       	st	Z, r18
     4d0:	9f 5f       	subi	r25, 0xFF	; 255
     4d2:	8f 5f       	subi	r24, 0xFF	; 255
     4d4:	e8 2f       	mov	r30, r24
     4d6:	f0 e0       	ldi	r31, 0x00	; 0
     4d8:	e7 52       	subi	r30, 0x27	; 39
     4da:	ff 4f       	sbci	r31, 0xFF	; 255
     4dc:	20 81       	ld	r18, Z
     4de:	2c 32       	cpi	r18, 0x2C	; 44
     4e0:	91 f7       	brne	.-28     	; 0x4c6 <get_longitude+0x8>
     4e2:	31 e0       	ldi	r19, 0x01	; 1
     4e4:	39 0f       	add	r19, r25
     4e6:	e9 2f       	mov	r30, r25
     4e8:	f0 e0       	ldi	r31, 0x00	; 0
     4ea:	8f 5f       	subi	r24, 0xFF	; 255
     4ec:	e1 57       	subi	r30, 0x71	; 113
     4ee:	fe 4f       	sbci	r31, 0xFE	; 254
     4f0:	20 83       	st	Z, r18
     4f2:	23 2f       	mov	r18, r19
     4f4:	30 e0       	ldi	r19, 0x00	; 0
     4f6:	e8 2f       	mov	r30, r24
     4f8:	f0 e0       	ldi	r31, 0x00	; 0
     4fa:	e7 52       	subi	r30, 0x27	; 39
     4fc:	ff 4f       	sbci	r31, 0xFF	; 255
     4fe:	80 81       	ld	r24, Z
     500:	f9 01       	movw	r30, r18
     502:	e1 57       	subi	r30, 0x71	; 113
     504:	fe 4f       	sbci	r31, 0xFE	; 254
     506:	80 83       	st	Z, r24
     508:	8f e8       	ldi	r24, 0x8F	; 143
     50a:	91 e0       	ldi	r25, 0x01	; 1
     50c:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <convert_to_degrees>
     510:	78 94       	sei
     512:	08 95       	ret

00000514 <getAllValuesGps>:
     514:	cf 93       	push	r28
     516:	df 93       	push	r29
     518:	c0 ec       	ldi	r28, 0xC0	; 192
     51a:	d1 e0       	ldi	r29, 0x01	; 1
     51c:	8f 81       	ldd	r24, Y+7	; 0x07
     51e:	90 e0       	ldi	r25, 0x00	; 0
     520:	0e 94 d5 01 	call	0x3aa	; 0x3aa <get_altitude>
     524:	8a 81       	ldd	r24, Y+2	; 0x02
     526:	90 e0       	ldi	r25, 0x00	; 0
     528:	0e 94 5f 02 	call	0x4be	; 0x4be <get_longitude>
     52c:	88 81       	ld	r24, Y
     52e:	90 e0       	ldi	r25, 0x00	; 0
     530:	0e 94 34 02 	call	0x468	; 0x468 <get_latitude>
     534:	df 91       	pop	r29
     536:	cf 91       	pop	r28
     538:	08 95       	ret

0000053a <__vector_13>:
     53a:	1f 92       	push	r1
     53c:	0f 92       	push	r0
     53e:	0f b6       	in	r0, 0x3f	; 63
     540:	0f 92       	push	r0
     542:	11 24       	eor	r1, r1
     544:	2f 93       	push	r18
     546:	3f 93       	push	r19
     548:	4f 93       	push	r20
     54a:	5f 93       	push	r21
     54c:	8f 93       	push	r24
     54e:	9f 93       	push	r25
     550:	ef 93       	push	r30
     552:	ff 93       	push	r31
     554:	9f b7       	in	r25, 0x3f	; 63
     556:	f8 94       	cli
     558:	8c b1       	in	r24, 0x0c	; 12
     55a:	84 32       	cpi	r24, 0x24	; 36
     55c:	59 f4       	brne	.+22     	; 0x574 <__vector_13+0x3a>
     55e:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <GGA_Index+0x1>
     562:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <GGA_Index>
     566:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <CommaCounter+0x1>
     56a:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <CommaCounter>
     56e:	10 92 d4 00 	sts	0x00D4, r1	; 0x8000d4 <__data_end>
     572:	45 c0       	rjmp	.+138    	; 0x5fe <__vector_13+0xc4>
     574:	20 91 d4 00 	lds	r18, 0x00D4	; 0x8000d4 <__data_end>
     578:	22 23       	and	r18, r18
     57a:	29 f1       	breq	.+74     	; 0x5c6 <__vector_13+0x8c>
     57c:	8c 32       	cpi	r24, 0x2C	; 44
     57e:	99 f4       	brne	.+38     	; 0x5a6 <__vector_13+0x6c>
     580:	20 91 a6 01 	lds	r18, 0x01A6	; 0x8001a6 <CommaCounter>
     584:	30 91 a7 01 	lds	r19, 0x01A7	; 0x8001a7 <CommaCounter+0x1>
     588:	a9 01       	movw	r20, r18
     58a:	4f 5f       	subi	r20, 0xFF	; 255
     58c:	5f 4f       	sbci	r21, 0xFF	; 255
     58e:	50 93 a7 01 	sts	0x01A7, r21	; 0x8001a7 <CommaCounter+0x1>
     592:	40 93 a6 01 	sts	0x01A6, r20	; 0x8001a6 <CommaCounter>
     596:	40 91 a8 01 	lds	r20, 0x01A8	; 0x8001a8 <GGA_Index>
     59a:	50 91 a9 01 	lds	r21, 0x01A9	; 0x8001a9 <GGA_Index+0x1>
     59e:	f9 01       	movw	r30, r18
     5a0:	e0 54       	subi	r30, 0x40	; 64
     5a2:	fe 4f       	sbci	r31, 0xFE	; 254
     5a4:	40 83       	st	Z, r20
     5a6:	20 91 a8 01 	lds	r18, 0x01A8	; 0x8001a8 <GGA_Index>
     5aa:	30 91 a9 01 	lds	r19, 0x01A9	; 0x8001a9 <GGA_Index+0x1>
     5ae:	a9 01       	movw	r20, r18
     5b0:	4f 5f       	subi	r20, 0xFF	; 255
     5b2:	5f 4f       	sbci	r21, 0xFF	; 255
     5b4:	50 93 a9 01 	sts	0x01A9, r21	; 0x8001a9 <GGA_Index+0x1>
     5b8:	40 93 a8 01 	sts	0x01A8, r20	; 0x8001a8 <GGA_Index>
     5bc:	f9 01       	movw	r30, r18
     5be:	e7 52       	subi	r30, 0x27	; 39
     5c0:	ff 4f       	sbci	r31, 0xFF	; 255
     5c2:	80 83       	st	Z, r24
     5c4:	1c c0       	rjmp	.+56     	; 0x5fe <__vector_13+0xc4>
     5c6:	20 91 aa 01 	lds	r18, 0x01AA	; 0x8001aa <GGA_CODE>
     5ca:	27 34       	cpi	r18, 0x47	; 71
     5cc:	89 f4       	brne	.+34     	; 0x5f0 <__vector_13+0xb6>
     5ce:	20 91 ab 01 	lds	r18, 0x01AB	; 0x8001ab <GGA_CODE+0x1>
     5d2:	27 34       	cpi	r18, 0x47	; 71
     5d4:	69 f4       	brne	.+26     	; 0x5f0 <__vector_13+0xb6>
     5d6:	20 91 ac 01 	lds	r18, 0x01AC	; 0x8001ac <GGA_CODE+0x2>
     5da:	21 34       	cpi	r18, 0x41	; 65
     5dc:	49 f4       	brne	.+18     	; 0x5f0 <__vector_13+0xb6>
     5de:	81 e0       	ldi	r24, 0x01	; 1
     5e0:	80 93 d4 00 	sts	0x00D4, r24	; 0x8000d4 <__data_end>
     5e4:	ea ea       	ldi	r30, 0xAA	; 170
     5e6:	f1 e0       	ldi	r31, 0x01	; 1
     5e8:	10 82       	st	Z, r1
     5ea:	11 82       	std	Z+1, r1	; 0x01
     5ec:	12 82       	std	Z+2, r1	; 0x02
     5ee:	07 c0       	rjmp	.+14     	; 0x5fe <__vector_13+0xc4>
     5f0:	ea ea       	ldi	r30, 0xAA	; 170
     5f2:	f1 e0       	ldi	r31, 0x01	; 1
     5f4:	21 81       	ldd	r18, Z+1	; 0x01
     5f6:	20 83       	st	Z, r18
     5f8:	22 81       	ldd	r18, Z+2	; 0x02
     5fa:	21 83       	std	Z+1, r18	; 0x01
     5fc:	82 83       	std	Z+2, r24	; 0x02
     5fe:	9f bf       	out	0x3f, r25	; 63
     600:	ff 91       	pop	r31
     602:	ef 91       	pop	r30
     604:	9f 91       	pop	r25
     606:	8f 91       	pop	r24
     608:	5f 91       	pop	r21
     60a:	4f 91       	pop	r20
     60c:	3f 91       	pop	r19
     60e:	2f 91       	pop	r18
     610:	0f 90       	pop	r0
     612:	0f be       	out	0x3f, r0	; 63
     614:	0f 90       	pop	r0
     616:	1f 90       	pop	r1
     618:	18 95       	reti

0000061a <MPU6050_Init>:
     61a:	2f e7       	ldi	r18, 0x7F	; 127
     61c:	89 ea       	ldi	r24, 0xA9	; 169
     61e:	93 e0       	ldi	r25, 0x03	; 3
     620:	21 50       	subi	r18, 0x01	; 1
     622:	80 40       	sbci	r24, 0x00	; 0
     624:	90 40       	sbci	r25, 0x00	; 0
     626:	e1 f7       	brne	.-8      	; 0x620 <MPU6050_Init+0x6>
     628:	00 c0       	rjmp	.+0      	; 0x62a <MPU6050_Init+0x10>
     62a:	00 00       	nop
     62c:	80 ed       	ldi	r24, 0xD0	; 208
     62e:	0e 94 0b 01 	call	0x216	; 0x216 <I2C_Start_Wait>
     632:	89 e1       	ldi	r24, 0x19	; 25
     634:	0e 94 25 01 	call	0x24a	; 0x24a <I2C_Write>
     638:	87 e0       	ldi	r24, 0x07	; 7
     63a:	0e 94 25 01 	call	0x24a	; 0x24a <I2C_Write>
     63e:	0e 94 05 01 	call	0x20a	; 0x20a <I2C_Stop>
     642:	80 ed       	ldi	r24, 0xD0	; 208
     644:	0e 94 0b 01 	call	0x216	; 0x216 <I2C_Start_Wait>
     648:	8b e6       	ldi	r24, 0x6B	; 107
     64a:	0e 94 25 01 	call	0x24a	; 0x24a <I2C_Write>
     64e:	81 e0       	ldi	r24, 0x01	; 1
     650:	0e 94 25 01 	call	0x24a	; 0x24a <I2C_Write>
     654:	0e 94 05 01 	call	0x20a	; 0x20a <I2C_Stop>
     658:	80 ed       	ldi	r24, 0xD0	; 208
     65a:	0e 94 0b 01 	call	0x216	; 0x216 <I2C_Start_Wait>
     65e:	8a e1       	ldi	r24, 0x1A	; 26
     660:	0e 94 25 01 	call	0x24a	; 0x24a <I2C_Write>
     664:	80 e0       	ldi	r24, 0x00	; 0
     666:	0e 94 25 01 	call	0x24a	; 0x24a <I2C_Write>
     66a:	0e 94 05 01 	call	0x20a	; 0x20a <I2C_Stop>
     66e:	80 ed       	ldi	r24, 0xD0	; 208
     670:	0e 94 0b 01 	call	0x216	; 0x216 <I2C_Start_Wait>
     674:	8b e1       	ldi	r24, 0x1B	; 27
     676:	0e 94 25 01 	call	0x24a	; 0x24a <I2C_Write>
     67a:	88 e1       	ldi	r24, 0x18	; 24
     67c:	0e 94 25 01 	call	0x24a	; 0x24a <I2C_Write>
     680:	0e 94 05 01 	call	0x20a	; 0x20a <I2C_Stop>
     684:	80 ed       	ldi	r24, 0xD0	; 208
     686:	0e 94 0b 01 	call	0x216	; 0x216 <I2C_Start_Wait>
     68a:	88 e3       	ldi	r24, 0x38	; 56
     68c:	0e 94 25 01 	call	0x24a	; 0x24a <I2C_Write>
     690:	81 e0       	ldi	r24, 0x01	; 1
     692:	0e 94 25 01 	call	0x24a	; 0x24a <I2C_Write>
     696:	0e 94 05 01 	call	0x20a	; 0x20a <I2C_Stop>
     69a:	08 95       	ret

0000069c <MPU_Start_Loc>:
     69c:	80 ed       	ldi	r24, 0xD0	; 208
     69e:	0e 94 0b 01 	call	0x216	; 0x216 <I2C_Start_Wait>
     6a2:	8b e3       	ldi	r24, 0x3B	; 59
     6a4:	0e 94 25 01 	call	0x24a	; 0x24a <I2C_Write>
     6a8:	81 ed       	ldi	r24, 0xD1	; 209
     6aa:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <I2C_Repeated_Start>
     6ae:	08 95       	ret

000006b0 <Read_RawValue>:
     6b0:	cf 93       	push	r28
     6b2:	df 93       	push	r29
     6b4:	0e 94 4e 03 	call	0x69c	; 0x69c <MPU_Start_Loc>
     6b8:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Read_Ack>
     6bc:	c8 2f       	mov	r28, r24
     6be:	d0 e0       	ldi	r29, 0x00	; 0
     6c0:	dc 2f       	mov	r29, r28
     6c2:	cc 27       	eor	r28, r28
     6c4:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Read_Ack>
     6c8:	be 01       	movw	r22, r28
     6ca:	68 2b       	or	r22, r24
     6cc:	07 2e       	mov	r0, r23
     6ce:	00 0c       	add	r0, r0
     6d0:	88 0b       	sbc	r24, r24
     6d2:	99 0b       	sbc	r25, r25
     6d4:	0e 94 09 08 	call	0x1012	; 0x1012 <__floatsisf>
     6d8:	60 93 a2 01 	sts	0x01A2, r22	; 0x8001a2 <Acc_x>
     6dc:	70 93 a3 01 	sts	0x01A3, r23	; 0x8001a3 <Acc_x+0x1>
     6e0:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <Acc_x+0x2>
     6e4:	90 93 a5 01 	sts	0x01A5, r25	; 0x8001a5 <Acc_x+0x3>
     6e8:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Read_Ack>
     6ec:	c8 2f       	mov	r28, r24
     6ee:	d0 e0       	ldi	r29, 0x00	; 0
     6f0:	dc 2f       	mov	r29, r28
     6f2:	cc 27       	eor	r28, r28
     6f4:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Read_Ack>
     6f8:	be 01       	movw	r22, r28
     6fa:	68 2b       	or	r22, r24
     6fc:	07 2e       	mov	r0, r23
     6fe:	00 0c       	add	r0, r0
     700:	88 0b       	sbc	r24, r24
     702:	99 0b       	sbc	r25, r25
     704:	0e 94 09 08 	call	0x1012	; 0x1012 <__floatsisf>
     708:	60 93 77 01 	sts	0x0177, r22	; 0x800177 <Acc_y>
     70c:	70 93 78 01 	sts	0x0178, r23	; 0x800178 <Acc_y+0x1>
     710:	80 93 79 01 	sts	0x0179, r24	; 0x800179 <Acc_y+0x2>
     714:	90 93 7a 01 	sts	0x017A, r25	; 0x80017a <Acc_y+0x3>
     718:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Read_Ack>
     71c:	c8 2f       	mov	r28, r24
     71e:	d0 e0       	ldi	r29, 0x00	; 0
     720:	dc 2f       	mov	r29, r28
     722:	cc 27       	eor	r28, r28
     724:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Read_Ack>
     728:	be 01       	movw	r22, r28
     72a:	68 2b       	or	r22, r24
     72c:	07 2e       	mov	r0, r23
     72e:	00 0c       	add	r0, r0
     730:	88 0b       	sbc	r24, r24
     732:	99 0b       	sbc	r25, r25
     734:	0e 94 09 08 	call	0x1012	; 0x1012 <__floatsisf>
     738:	60 93 d5 00 	sts	0x00D5, r22	; 0x8000d5 <Acc_z>
     73c:	70 93 d6 00 	sts	0x00D6, r23	; 0x8000d6 <Acc_z+0x1>
     740:	80 93 d7 00 	sts	0x00D7, r24	; 0x8000d7 <Acc_z+0x2>
     744:	90 93 d8 00 	sts	0x00D8, r25	; 0x8000d8 <Acc_z+0x3>
     748:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Read_Ack>
     74c:	c8 2f       	mov	r28, r24
     74e:	d0 e0       	ldi	r29, 0x00	; 0
     750:	dc 2f       	mov	r29, r28
     752:	cc 27       	eor	r28, r28
     754:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Read_Ack>
     758:	be 01       	movw	r22, r28
     75a:	68 2b       	or	r22, r24
     75c:	07 2e       	mov	r0, r23
     75e:	00 0c       	add	r0, r0
     760:	88 0b       	sbc	r24, r24
     762:	99 0b       	sbc	r25, r25
     764:	0e 94 09 08 	call	0x1012	; 0x1012 <__floatsisf>
     768:	60 93 73 01 	sts	0x0173, r22	; 0x800173 <Temperature>
     76c:	70 93 74 01 	sts	0x0174, r23	; 0x800174 <Temperature+0x1>
     770:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <Temperature+0x2>
     774:	90 93 76 01 	sts	0x0176, r25	; 0x800176 <Temperature+0x3>
     778:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Read_Ack>
     77c:	c8 2f       	mov	r28, r24
     77e:	d0 e0       	ldi	r29, 0x00	; 0
     780:	dc 2f       	mov	r29, r28
     782:	cc 27       	eor	r28, r28
     784:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Read_Ack>
     788:	be 01       	movw	r22, r28
     78a:	68 2b       	or	r22, r24
     78c:	07 2e       	mov	r0, r23
     78e:	00 0c       	add	r0, r0
     790:	88 0b       	sbc	r24, r24
     792:	99 0b       	sbc	r25, r25
     794:	0e 94 09 08 	call	0x1012	; 0x1012 <__floatsisf>
     798:	60 93 6f 01 	sts	0x016F, r22	; 0x80016f <Gyro_x>
     79c:	70 93 70 01 	sts	0x0170, r23	; 0x800170 <Gyro_x+0x1>
     7a0:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <Gyro_x+0x2>
     7a4:	90 93 72 01 	sts	0x0172, r25	; 0x800172 <Gyro_x+0x3>
     7a8:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Read_Ack>
     7ac:	c8 2f       	mov	r28, r24
     7ae:	d0 e0       	ldi	r29, 0x00	; 0
     7b0:	dc 2f       	mov	r29, r28
     7b2:	cc 27       	eor	r28, r28
     7b4:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Read_Ack>
     7b8:	be 01       	movw	r22, r28
     7ba:	68 2b       	or	r22, r24
     7bc:	07 2e       	mov	r0, r23
     7be:	00 0c       	add	r0, r0
     7c0:	88 0b       	sbc	r24, r24
     7c2:	99 0b       	sbc	r25, r25
     7c4:	0e 94 09 08 	call	0x1012	; 0x1012 <__floatsisf>
     7c8:	60 93 bc 01 	sts	0x01BC, r22	; 0x8001bc <Gyro_y>
     7cc:	70 93 bd 01 	sts	0x01BD, r23	; 0x8001bd <Gyro_y+0x1>
     7d0:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <Gyro_y+0x2>
     7d4:	90 93 bf 01 	sts	0x01BF, r25	; 0x8001bf <Gyro_y+0x3>
     7d8:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Read_Ack>
     7dc:	c8 2f       	mov	r28, r24
     7de:	d0 e0       	ldi	r29, 0x00	; 0
     7e0:	dc 2f       	mov	r29, r28
     7e2:	cc 27       	eor	r28, r28
     7e4:	0e 94 3e 01 	call	0x27c	; 0x27c <I2C_Read_Nack>
     7e8:	be 01       	movw	r22, r28
     7ea:	68 2b       	or	r22, r24
     7ec:	07 2e       	mov	r0, r23
     7ee:	00 0c       	add	r0, r0
     7f0:	88 0b       	sbc	r24, r24
     7f2:	99 0b       	sbc	r25, r25
     7f4:	0e 94 09 08 	call	0x1012	; 0x1012 <__floatsisf>
     7f8:	60 93 9e 01 	sts	0x019E, r22	; 0x80019e <Gyro_z>
     7fc:	70 93 9f 01 	sts	0x019F, r23	; 0x80019f <Gyro_z+0x1>
     800:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <Gyro_z+0x2>
     804:	90 93 a1 01 	sts	0x01A1, r25	; 0x8001a1 <Gyro_z+0x3>
     808:	0e 94 05 01 	call	0x20a	; 0x20a <I2C_Stop>
     80c:	df 91       	pop	r29
     80e:	cf 91       	pop	r28
     810:	08 95       	ret

00000812 <isDriverSleepingGyro>:
     812:	4f 92       	push	r4
     814:	5f 92       	push	r5
     816:	6f 92       	push	r6
     818:	7f 92       	push	r7
     81a:	8f 92       	push	r8
     81c:	9f 92       	push	r9
     81e:	af 92       	push	r10
     820:	bf 92       	push	r11
     822:	cf 92       	push	r12
     824:	df 92       	push	r13
     826:	ef 92       	push	r14
     828:	ff 92       	push	r15
     82a:	0f 93       	push	r16
     82c:	1f 93       	push	r17
     82e:	4b 01       	movw	r8, r22
     830:	5c 01       	movw	r10, r24
     832:	29 01       	movw	r4, r18
     834:	3a 01       	movw	r6, r20
     836:	67 01       	movw	r12, r14
     838:	78 01       	movw	r14, r16
     83a:	20 e0       	ldi	r18, 0x00	; 0
     83c:	30 e0       	ldi	r19, 0x00	; 0
     83e:	40 e0       	ldi	r20, 0x00	; 0
     840:	50 ec       	ldi	r21, 0xC0	; 192
     842:	c7 01       	movw	r24, r14
     844:	b6 01       	movw	r22, r12
     846:	0e 94 b9 08 	call	0x1172	; 0x1172 <__gesf2>
     84a:	18 16       	cp	r1, r24
     84c:	ac f5       	brge	.+106    	; 0x8b8 <__stack+0x59>
     84e:	20 e0       	ldi	r18, 0x00	; 0
     850:	30 e0       	ldi	r19, 0x00	; 0
     852:	40 e0       	ldi	r20, 0x00	; 0
     854:	50 e4       	ldi	r21, 0x40	; 64
     856:	c7 01       	movw	r24, r14
     858:	b6 01       	movw	r22, r12
     85a:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <__cmpsf2>
     85e:	88 23       	and	r24, r24
     860:	74 f5       	brge	.+92     	; 0x8be <__stack+0x5f>
     862:	20 e0       	ldi	r18, 0x00	; 0
     864:	30 e0       	ldi	r19, 0x00	; 0
     866:	40 e4       	ldi	r20, 0x40	; 64
     868:	50 ec       	ldi	r21, 0xC0	; 192
     86a:	c5 01       	movw	r24, r10
     86c:	b4 01       	movw	r22, r8
     86e:	0e 94 b9 08 	call	0x1172	; 0x1172 <__gesf2>
     872:	18 16       	cp	r1, r24
     874:	3c f5       	brge	.+78     	; 0x8c4 <__stack+0x65>
     876:	20 e0       	ldi	r18, 0x00	; 0
     878:	30 e0       	ldi	r19, 0x00	; 0
     87a:	40 e4       	ldi	r20, 0x40	; 64
     87c:	50 e4       	ldi	r21, 0x40	; 64
     87e:	c5 01       	movw	r24, r10
     880:	b4 01       	movw	r22, r8
     882:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <__cmpsf2>
     886:	88 23       	and	r24, r24
     888:	04 f5       	brge	.+64     	; 0x8ca <__stack+0x6b>
     88a:	20 e0       	ldi	r18, 0x00	; 0
     88c:	30 e0       	ldi	r19, 0x00	; 0
     88e:	40 e0       	ldi	r20, 0x00	; 0
     890:	51 e4       	ldi	r21, 0x41	; 65
     892:	c3 01       	movw	r24, r6
     894:	b2 01       	movw	r22, r4
     896:	0e 94 b9 08 	call	0x1172	; 0x1172 <__gesf2>
     89a:	88 23       	and	r24, r24
     89c:	cc f0       	brlt	.+50     	; 0x8d0 <__stack+0x71>
     89e:	20 e0       	ldi	r18, 0x00	; 0
     8a0:	30 e0       	ldi	r19, 0x00	; 0
     8a2:	40 e1       	ldi	r20, 0x10	; 16
     8a4:	51 e4       	ldi	r21, 0x41	; 65
     8a6:	c3 01       	movw	r24, r6
     8a8:	b2 01       	movw	r22, r4
     8aa:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <__cmpsf2>
     8ae:	18 16       	cp	r1, r24
     8b0:	94 f4       	brge	.+36     	; 0x8d6 <__stack+0x77>
     8b2:	81 e0       	ldi	r24, 0x01	; 1
     8b4:	90 e0       	ldi	r25, 0x00	; 0
     8b6:	11 c0       	rjmp	.+34     	; 0x8da <__stack+0x7b>
     8b8:	81 e0       	ldi	r24, 0x01	; 1
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	0e c0       	rjmp	.+28     	; 0x8da <__stack+0x7b>
     8be:	81 e0       	ldi	r24, 0x01	; 1
     8c0:	90 e0       	ldi	r25, 0x00	; 0
     8c2:	0b c0       	rjmp	.+22     	; 0x8da <__stack+0x7b>
     8c4:	81 e0       	ldi	r24, 0x01	; 1
     8c6:	90 e0       	ldi	r25, 0x00	; 0
     8c8:	08 c0       	rjmp	.+16     	; 0x8da <__stack+0x7b>
     8ca:	81 e0       	ldi	r24, 0x01	; 1
     8cc:	90 e0       	ldi	r25, 0x00	; 0
     8ce:	05 c0       	rjmp	.+10     	; 0x8da <__stack+0x7b>
     8d0:	81 e0       	ldi	r24, 0x01	; 1
     8d2:	90 e0       	ldi	r25, 0x00	; 0
     8d4:	02 c0       	rjmp	.+4      	; 0x8da <__stack+0x7b>
     8d6:	80 e0       	ldi	r24, 0x00	; 0
     8d8:	90 e0       	ldi	r25, 0x00	; 0
     8da:	1f 91       	pop	r17
     8dc:	0f 91       	pop	r16
     8de:	ff 90       	pop	r15
     8e0:	ef 90       	pop	r14
     8e2:	df 90       	pop	r13
     8e4:	cf 90       	pop	r12
     8e6:	bf 90       	pop	r11
     8e8:	af 90       	pop	r10
     8ea:	9f 90       	pop	r9
     8ec:	8f 90       	pop	r8
     8ee:	7f 90       	pop	r7
     8f0:	6f 90       	pop	r6
     8f2:	5f 90       	pop	r5
     8f4:	4f 90       	pop	r4
     8f6:	08 95       	ret

000008f8 <USART_initialize>:
     8f8:	8a b1       	in	r24, 0x0a	; 10
     8fa:	88 61       	ori	r24, 0x18	; 24
     8fc:	8a b9       	out	0x0a, r24	; 10
     8fe:	80 b5       	in	r24, 0x20	; 32
     900:	86 68       	ori	r24, 0x86	; 134
     902:	80 bd       	out	0x20, r24	; 32
     904:	83 e3       	ldi	r24, 0x33	; 51
     906:	89 b9       	out	0x09, r24	; 9
     908:	10 bc       	out	0x20, r1	; 32
     90a:	08 95       	ret

0000090c <USART_transmit>:
     90c:	5d 9b       	sbis	0x0b, 5	; 11
     90e:	fe cf       	rjmp	.-4      	; 0x90c <USART_transmit>
     910:	8c b9       	out	0x0c, r24	; 12
     912:	08 95       	ret

00000914 <sendMessage>:
void sendMessage(char *msg)
{
     914:	ef 92       	push	r14
     916:	ff 92       	push	r15
     918:	0f 93       	push	r16
     91a:	1f 93       	push	r17
     91c:	cf 93       	push	r28
     91e:	df 93       	push	r29
     920:	cd b7       	in	r28, 0x3d	; 61
     922:	de b7       	in	r29, 0x3e	; 62
     924:	a3 97       	sbiw	r28, 0x23	; 35
     926:	0f b6       	in	r0, 0x3f	; 63
     928:	f8 94       	cli
     92a:	de bf       	out	0x3e, r29	; 62
     92c:	0f be       	out	0x3f, r0	; 63
     92e:	cd bf       	out	0x3d, r28	; 61
     930:	7c 01       	movw	r14, r24
	unsigned char cmd_1[4]="AT";
     932:	81 e4       	ldi	r24, 0x41	; 65
     934:	94 e5       	ldi	r25, 0x54	; 84
     936:	9a 83       	std	Y+2, r25	; 0x02
     938:	89 83       	std	Y+1, r24	; 0x01
     93a:	1c 82       	std	Y+4, r1	; 0x04
     93c:	1b 82       	std	Y+3, r1	; 0x03
	unsigned char cmd_2[10]="AT+CMGF=1";
     93e:	8a e0       	ldi	r24, 0x0A	; 10
     940:	eb e8       	ldi	r30, 0x8B	; 139
     942:	f0 e0       	ldi	r31, 0x00	; 0
     944:	de 01       	movw	r26, r28
     946:	15 96       	adiw	r26, 0x05	; 5
     948:	01 90       	ld	r0, Z+
     94a:	0d 92       	st	X+, r0
     94c:	8a 95       	dec	r24
     94e:	e1 f7       	brne	.-8      	; 0x948 <sendMessage+0x34>
	unsigned char cmd_3[10]="AT+CMGS=";
     950:	89 e0       	ldi	r24, 0x09	; 9
     952:	e0 e6       	ldi	r30, 0x60	; 96
     954:	f0 e0       	ldi	r31, 0x00	; 0
     956:	de 01       	movw	r26, r28
     958:	1f 96       	adiw	r26, 0x0f	; 15
     95a:	01 90       	ld	r0, Z+
     95c:	0d 92       	st	X+, r0
     95e:	8a 95       	dec	r24
     960:	e1 f7       	brne	.-8      	; 0x95a <sendMessage+0x46>
     962:	18 8e       	std	Y+24, r1	; 0x18
	 char *cmd_4 = msg;
	unsigned char num[11] = "0771234567";
     964:	8b e0       	ldi	r24, 0x0B	; 11
     966:	e5 e9       	ldi	r30, 0x95	; 149
     968:	f0 e0       	ldi	r31, 0x00	; 0
     96a:	de 01       	movw	r26, r28
     96c:	59 96       	adiw	r26, 0x19	; 25
     96e:	01 90       	ld	r0, Z+
     970:	0d 92       	st	X+, r0
     972:	8a 95       	dec	r24
     974:	e1 f7       	brne	.-8      	; 0x96e <sendMessage+0x5a>
	LCD_Clear();
     976:	0e 94 b8 01 	call	0x370	; 0x370 <LCD_Clear>
	LCD_String_xy(1,0,"Message:");
     97a:	4a e6       	ldi	r20, 0x6A	; 106
     97c:	50 e0       	ldi	r21, 0x00	; 0
     97e:	60 e0       	ldi	r22, 0x00	; 0
     980:	81 e0       	ldi	r24, 0x01	; 1
     982:	0e 94 a0 01 	call	0x340	; 0x340 <LCD_String_xy>
	LCD_String_xy(2,3,"Forwarding");
     986:	43 e7       	ldi	r20, 0x73	; 115
     988:	50 e0       	ldi	r21, 0x00	; 0
     98a:	63 e0       	ldi	r22, 0x03	; 3
     98c:	82 e0       	ldi	r24, 0x02	; 2
     98e:	0e 94 a0 01 	call	0x340	; 0x340 <LCD_String_xy>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     992:	2f ef       	ldi	r18, 0xFF	; 255
     994:	80 e7       	ldi	r24, 0x70	; 112
     996:	92 e0       	ldi	r25, 0x02	; 2
     998:	21 50       	subi	r18, 0x01	; 1
     99a:	80 40       	sbci	r24, 0x00	; 0
     99c:	90 40       	sbci	r25, 0x00	; 0
     99e:	e1 f7       	brne	.-8      	; 0x998 <sendMessage+0x84>
     9a0:	00 c0       	rjmp	.+0      	; 0x9a2 <sendMessage+0x8e>
     9a2:	00 00       	nop
	
	_delay_ms(100);
	
	for (int i=0;cmd_1[i]!='\0';i++) /*checking communication*/
     9a4:	00 e0       	ldi	r16, 0x00	; 0
     9a6:	10 e0       	ldi	r17, 0x00	; 0
     9a8:	0d c0       	rjmp	.+26     	; 0x9c4 <sendMessage+0xb0>
	{
		USART_transmit(cmd_1[i]);
     9aa:	0e 94 86 04 	call	0x90c	; 0x90c <USART_transmit>
     9ae:	2f ef       	ldi	r18, 0xFF	; 255
     9b0:	80 e7       	ldi	r24, 0x70	; 112
     9b2:	92 e0       	ldi	r25, 0x02	; 2
     9b4:	21 50       	subi	r18, 0x01	; 1
     9b6:	80 40       	sbci	r24, 0x00	; 0
     9b8:	90 40       	sbci	r25, 0x00	; 0
     9ba:	e1 f7       	brne	.-8      	; 0x9b4 <sendMessage+0xa0>
     9bc:	00 c0       	rjmp	.+0      	; 0x9be <sendMessage+0xaa>
     9be:	00 00       	nop
	LCD_String_xy(1,0,"Message:");
	LCD_String_xy(2,3,"Forwarding");
	
	_delay_ms(100);
	
	for (int i=0;cmd_1[i]!='\0';i++) /*checking communication*/
     9c0:	0f 5f       	subi	r16, 0xFF	; 255
     9c2:	1f 4f       	sbci	r17, 0xFF	; 255
     9c4:	e1 e0       	ldi	r30, 0x01	; 1
     9c6:	f0 e0       	ldi	r31, 0x00	; 0
     9c8:	ec 0f       	add	r30, r28
     9ca:	fd 1f       	adc	r31, r29
     9cc:	e0 0f       	add	r30, r16
     9ce:	f1 1f       	adc	r31, r17
     9d0:	80 81       	ld	r24, Z
     9d2:	81 11       	cpse	r24, r1
     9d4:	ea cf       	rjmp	.-44     	; 0x9aa <sendMessage+0x96>
	{
		USART_transmit(cmd_1[i]);
		_delay_ms(100);
	}
	USART_transmit('\r'); /*carriage return ---> begining from the first line without going to next line*/
     9d6:	8d e0       	ldi	r24, 0x0D	; 13
     9d8:	0e 94 86 04 	call	0x90c	; 0x90c <USART_transmit>
     9dc:	2f ef       	ldi	r18, 0xFF	; 255
     9de:	81 ee       	ldi	r24, 0xE1	; 225
     9e0:	94 e0       	ldi	r25, 0x04	; 4
     9e2:	21 50       	subi	r18, 0x01	; 1
     9e4:	80 40       	sbci	r24, 0x00	; 0
     9e6:	90 40       	sbci	r25, 0x00	; 0
     9e8:	e1 f7       	brne	.-8      	; 0x9e2 <sendMessage+0xce>
     9ea:	00 c0       	rjmp	.+0      	; 0x9ec <sendMessage+0xd8>
     9ec:	00 00       	nop
	_delay_ms(200);
	
	for (int i=0;cmd_2[i]!='\0';i++) /* set the operating mode to SMS text mode*/
     9ee:	00 e0       	ldi	r16, 0x00	; 0
     9f0:	10 e0       	ldi	r17, 0x00	; 0
     9f2:	0d c0       	rjmp	.+26     	; 0xa0e <sendMessage+0xfa>
	{
		USART_transmit(cmd_2[i]);
     9f4:	0e 94 86 04 	call	0x90c	; 0x90c <USART_transmit>
     9f8:	2f ef       	ldi	r18, 0xFF	; 255
     9fa:	80 e7       	ldi	r24, 0x70	; 112
     9fc:	92 e0       	ldi	r25, 0x02	; 2
     9fe:	21 50       	subi	r18, 0x01	; 1
     a00:	80 40       	sbci	r24, 0x00	; 0
     a02:	90 40       	sbci	r25, 0x00	; 0
     a04:	e1 f7       	brne	.-8      	; 0x9fe <sendMessage+0xea>
     a06:	00 c0       	rjmp	.+0      	; 0xa08 <sendMessage+0xf4>
     a08:	00 00       	nop
		_delay_ms(100);
	}
	USART_transmit('\r'); /*carriage return ---> begining from the first line without going to next line*/
	_delay_ms(200);
	
	for (int i=0;cmd_2[i]!='\0';i++) /* set the operating mode to SMS text mode*/
     a0a:	0f 5f       	subi	r16, 0xFF	; 255
     a0c:	1f 4f       	sbci	r17, 0xFF	; 255
     a0e:	e5 e0       	ldi	r30, 0x05	; 5
     a10:	f0 e0       	ldi	r31, 0x00	; 0
     a12:	ec 0f       	add	r30, r28
     a14:	fd 1f       	adc	r31, r29
     a16:	e0 0f       	add	r30, r16
     a18:	f1 1f       	adc	r31, r17
     a1a:	80 81       	ld	r24, Z
     a1c:	81 11       	cpse	r24, r1
     a1e:	ea cf       	rjmp	.-44     	; 0x9f4 <sendMessage+0xe0>
	{
		USART_transmit(cmd_2[i]);
		_delay_ms(100);
	}
	USART_transmit('\r');
     a20:	8d e0       	ldi	r24, 0x0D	; 13
     a22:	0e 94 86 04 	call	0x90c	; 0x90c <USART_transmit>
     a26:	2f ef       	ldi	r18, 0xFF	; 255
     a28:	81 ee       	ldi	r24, 0xE1	; 225
     a2a:	94 e0       	ldi	r25, 0x04	; 4
     a2c:	21 50       	subi	r18, 0x01	; 1
     a2e:	80 40       	sbci	r24, 0x00	; 0
     a30:	90 40       	sbci	r25, 0x00	; 0
     a32:	e1 f7       	brne	.-8      	; 0xa2c <sendMessage+0x118>
     a34:	00 c0       	rjmp	.+0      	; 0xa36 <sendMessage+0x122>
     a36:	00 00       	nop
	_delay_ms(200);
	
	for (int i=0;cmd_3[i]!='\0';i++) /* send SMS*/
     a38:	00 e0       	ldi	r16, 0x00	; 0
     a3a:	10 e0       	ldi	r17, 0x00	; 0
     a3c:	0d c0       	rjmp	.+26     	; 0xa58 <sendMessage+0x144>
	{
		USART_transmit(cmd_3[i]);
     a3e:	0e 94 86 04 	call	0x90c	; 0x90c <USART_transmit>
     a42:	2f ef       	ldi	r18, 0xFF	; 255
     a44:	80 e7       	ldi	r24, 0x70	; 112
     a46:	92 e0       	ldi	r25, 0x02	; 2
     a48:	21 50       	subi	r18, 0x01	; 1
     a4a:	80 40       	sbci	r24, 0x00	; 0
     a4c:	90 40       	sbci	r25, 0x00	; 0
     a4e:	e1 f7       	brne	.-8      	; 0xa48 <sendMessage+0x134>
     a50:	00 c0       	rjmp	.+0      	; 0xa52 <sendMessage+0x13e>
     a52:	00 00       	nop
		_delay_ms(100);
	}
	USART_transmit('\r');
	_delay_ms(200);
	
	for (int i=0;cmd_3[i]!='\0';i++) /* send SMS*/
     a54:	0f 5f       	subi	r16, 0xFF	; 255
     a56:	1f 4f       	sbci	r17, 0xFF	; 255
     a58:	ef e0       	ldi	r30, 0x0F	; 15
     a5a:	f0 e0       	ldi	r31, 0x00	; 0
     a5c:	ec 0f       	add	r30, r28
     a5e:	fd 1f       	adc	r31, r29
     a60:	e0 0f       	add	r30, r16
     a62:	f1 1f       	adc	r31, r17
     a64:	80 81       	ld	r24, Z
     a66:	81 11       	cpse	r24, r1
     a68:	ea cf       	rjmp	.-44     	; 0xa3e <sendMessage+0x12a>
	{
		USART_transmit(cmd_3[i]);
		_delay_ms(100);
	}
	UDR='"';
     a6a:	82 e2       	ldi	r24, 0x22	; 34
     a6c:	8c b9       	out	0x0c, r24	; 12
     a6e:	2f ef       	ldi	r18, 0xFF	; 255
     a70:	80 e7       	ldi	r24, 0x70	; 112
     a72:	92 e0       	ldi	r25, 0x02	; 2
     a74:	21 50       	subi	r18, 0x01	; 1
     a76:	80 40       	sbci	r24, 0x00	; 0
     a78:	90 40       	sbci	r25, 0x00	; 0
     a7a:	e1 f7       	brne	.-8      	; 0xa74 <sendMessage+0x160>
     a7c:	00 c0       	rjmp	.+0      	; 0xa7e <sendMessage+0x16a>
     a7e:	00 00       	nop
	_delay_ms(100);
	for (int i=0;num[i]!='\0';i++) /* SMS to be sent */
     a80:	00 e0       	ldi	r16, 0x00	; 0
     a82:	10 e0       	ldi	r17, 0x00	; 0
     a84:	0d c0       	rjmp	.+26     	; 0xaa0 <sendMessage+0x18c>
	{
		USART_transmit(num[i]);
     a86:	0e 94 86 04 	call	0x90c	; 0x90c <USART_transmit>
     a8a:	2f ef       	ldi	r18, 0xFF	; 255
     a8c:	80 e7       	ldi	r24, 0x70	; 112
     a8e:	92 e0       	ldi	r25, 0x02	; 2
     a90:	21 50       	subi	r18, 0x01	; 1
     a92:	80 40       	sbci	r24, 0x00	; 0
     a94:	90 40       	sbci	r25, 0x00	; 0
     a96:	e1 f7       	brne	.-8      	; 0xa90 <sendMessage+0x17c>
     a98:	00 c0       	rjmp	.+0      	; 0xa9a <sendMessage+0x186>
     a9a:	00 00       	nop
		USART_transmit(cmd_3[i]);
		_delay_ms(100);
	}
	UDR='"';
	_delay_ms(100);
	for (int i=0;num[i]!='\0';i++) /* SMS to be sent */
     a9c:	0f 5f       	subi	r16, 0xFF	; 255
     a9e:	1f 4f       	sbci	r17, 0xFF	; 255
     aa0:	e9 e1       	ldi	r30, 0x19	; 25
     aa2:	f0 e0       	ldi	r31, 0x00	; 0
     aa4:	ec 0f       	add	r30, r28
     aa6:	fd 1f       	adc	r31, r29
     aa8:	e0 0f       	add	r30, r16
     aaa:	f1 1f       	adc	r31, r17
     aac:	80 81       	ld	r24, Z
     aae:	81 11       	cpse	r24, r1
     ab0:	ea cf       	rjmp	.-44     	; 0xa86 <sendMessage+0x172>
	{
		USART_transmit(num[i]);
		_delay_ms(100);
	}
	UDR='"';
     ab2:	82 e2       	ldi	r24, 0x22	; 34
     ab4:	8c b9       	out	0x0c, r24	; 12
     ab6:	2f ef       	ldi	r18, 0xFF	; 255
     ab8:	80 e7       	ldi	r24, 0x70	; 112
     aba:	92 e0       	ldi	r25, 0x02	; 2
     abc:	21 50       	subi	r18, 0x01	; 1
     abe:	80 40       	sbci	r24, 0x00	; 0
     ac0:	90 40       	sbci	r25, 0x00	; 0
     ac2:	e1 f7       	brne	.-8      	; 0xabc <sendMessage+0x1a8>
     ac4:	00 c0       	rjmp	.+0      	; 0xac6 <sendMessage+0x1b2>
     ac6:	00 00       	nop
	_delay_ms(100);
	UDR='\r';
     ac8:	8d e0       	ldi	r24, 0x0D	; 13
     aca:	8c b9       	out	0x0c, r24	; 12
     acc:	2f ef       	ldi	r18, 0xFF	; 255
     ace:	81 ee       	ldi	r24, 0xE1	; 225
     ad0:	94 e0       	ldi	r25, 0x04	; 4
     ad2:	21 50       	subi	r18, 0x01	; 1
     ad4:	80 40       	sbci	r24, 0x00	; 0
     ad6:	90 40       	sbci	r25, 0x00	; 0
     ad8:	e1 f7       	brne	.-8      	; 0xad2 <sendMessage+0x1be>
     ada:	00 c0       	rjmp	.+0      	; 0xadc <sendMessage+0x1c8>
     adc:	00 00       	nop
	_delay_ms(200);

	for (int i=0;cmd_4[i]!='\0';i++) /* sample mobile number */
     ade:	00 e0       	ldi	r16, 0x00	; 0
     ae0:	10 e0       	ldi	r17, 0x00	; 0
     ae2:	0d c0       	rjmp	.+26     	; 0xafe <sendMessage+0x1ea>
	{
		USART_transmit(cmd_4[i]);
     ae4:	0e 94 86 04 	call	0x90c	; 0x90c <USART_transmit>
     ae8:	2f ef       	ldi	r18, 0xFF	; 255
     aea:	80 e7       	ldi	r24, 0x70	; 112
     aec:	92 e0       	ldi	r25, 0x02	; 2
     aee:	21 50       	subi	r18, 0x01	; 1
     af0:	80 40       	sbci	r24, 0x00	; 0
     af2:	90 40       	sbci	r25, 0x00	; 0
     af4:	e1 f7       	brne	.-8      	; 0xaee <sendMessage+0x1da>
     af6:	00 c0       	rjmp	.+0      	; 0xaf8 <sendMessage+0x1e4>
     af8:	00 00       	nop
	UDR='"';
	_delay_ms(100);
	UDR='\r';
	_delay_ms(200);

	for (int i=0;cmd_4[i]!='\0';i++) /* sample mobile number */
     afa:	0f 5f       	subi	r16, 0xFF	; 255
     afc:	1f 4f       	sbci	r17, 0xFF	; 255
     afe:	f7 01       	movw	r30, r14
     b00:	e0 0f       	add	r30, r16
     b02:	f1 1f       	adc	r31, r17
     b04:	80 81       	ld	r24, Z
     b06:	81 11       	cpse	r24, r1
     b08:	ed cf       	rjmp	.-38     	; 0xae4 <sendMessage+0x1d0>
     b0a:	2f ef       	ldi	r18, 0xFF	; 255
     b0c:	81 ee       	ldi	r24, 0xE1	; 225
     b0e:	94 e0       	ldi	r25, 0x04	; 4
     b10:	21 50       	subi	r18, 0x01	; 1
     b12:	80 40       	sbci	r24, 0x00	; 0
     b14:	90 40       	sbci	r25, 0x00	; 0
     b16:	e1 f7       	brne	.-8      	; 0xb10 <sendMessage+0x1fc>
     b18:	00 c0       	rjmp	.+0      	; 0xb1a <sendMessage+0x206>
     b1a:	00 00       	nop
	{
		USART_transmit(cmd_4[i]);
		_delay_ms(100);
	}
	_delay_ms(200);
	LCD_Clear();
     b1c:	0e 94 b8 01 	call	0x370	; 0x370 <LCD_Clear>
	LCD_String_xy(1,0,"Message sent");
     b20:	4e e7       	ldi	r20, 0x7E	; 126
     b22:	50 e0       	ldi	r21, 0x00	; 0
     b24:	60 e0       	ldi	r22, 0x00	; 0
     b26:	81 e0       	ldi	r24, 0x01	; 1
     b28:	0e 94 a0 01 	call	0x340	; 0x340 <LCD_String_xy>
     b2c:	2f ef       	ldi	r18, 0xFF	; 255
     b2e:	8d e3       	ldi	r24, 0x3D	; 61
     b30:	99 e4       	ldi	r25, 0x49	; 73
     b32:	21 50       	subi	r18, 0x01	; 1
     b34:	80 40       	sbci	r24, 0x00	; 0
     b36:	90 40       	sbci	r25, 0x00	; 0
     b38:	e1 f7       	brne	.-8      	; 0xb32 <sendMessage+0x21e>
     b3a:	00 c0       	rjmp	.+0      	; 0xb3c <sendMessage+0x228>
     b3c:	00 00       	nop
	_delay_ms(3000);
	LCD_Clear();
     b3e:	0e 94 b8 01 	call	0x370	; 0x370 <LCD_Clear>
     b42:	a3 96       	adiw	r28, 0x23	; 35
     b44:	0f b6       	in	r0, 0x3f	; 63
     b46:	f8 94       	cli
     b48:	de bf       	out	0x3e, r29	; 62
     b4a:	0f be       	out	0x3f, r0	; 63
     b4c:	cd bf       	out	0x3d, r28	; 61
     b4e:	df 91       	pop	r29
     b50:	cf 91       	pop	r28
     b52:	1f 91       	pop	r17
     b54:	0f 91       	pop	r16
     b56:	ff 90       	pop	r15
     b58:	ef 90       	pop	r14
     b5a:	08 95       	ret

00000b5c <ringAlarm>:
		}
	}//while end
}//main end

void ringAlarm(){
	portHigh(PORTD,buzzer);//buzzer
     b5c:	82 b3       	in	r24, 0x12	; 18
     b5e:	80 68       	ori	r24, 0x80	; 128
     b60:	82 bb       	out	0x12, r24	; 18
     b62:	08 95       	ret

00000b64 <stopAlarm>:
}
void stopAlarm(){
	portLow(PORTD,buzzer);
     b64:	82 b3       	in	r24, 0x12	; 18
     b66:	8f 77       	andi	r24, 0x7F	; 127
     b68:	82 bb       	out	0x12, r24	; 18
     b6a:	08 95       	ret

00000b6c <onHazardLight>:
}
void onHazardLight(){
	portHigh(PORTC,led);
     b6c:	85 b3       	in	r24, 0x15	; 21
     b6e:	81 60       	ori	r24, 0x01	; 1
     b70:	85 bb       	out	0x15, r24	; 21
     b72:	08 95       	ret

00000b74 <offHazardLight>:
}
void offHazardLight(){
	portLow(PORTC,led);
     b74:	85 b3       	in	r24, 0x15	; 21
     b76:	8e 7f       	andi	r24, 0xFE	; 254
     b78:	85 bb       	out	0x15, r24	; 21
     b7a:	08 95       	ret

00000b7c <playRadio>:
}
void playRadio(){
	portHigh(PORTD,musicSystem);
     b7c:	82 b3       	in	r24, 0x12	; 18
     b7e:	80 62       	ori	r24, 0x20	; 32
     b80:	82 bb       	out	0x12, r24	; 18
     b82:	08 95       	ret

00000b84 <PWM_init>:
}
void PWM_init(){
	/*set fast PWM mode with non-inverted output*/
	TCCR0 = (1<<WGM00) | (1<<WGM01) | (1<<COM01) | (1<<CS00);
     b84:	89 e6       	ldi	r24, 0x69	; 105
     b86:	83 bf       	out	0x33, r24	; 51
	DDRB|=(1<<PB3);  /*set OC0 pin as output*/
     b88:	87 b3       	in	r24, 0x17	; 23
     b8a:	88 60       	ori	r24, 0x08	; 8
     b8c:	87 bb       	out	0x17, r24	; 23
     b8e:	08 95       	ret

00000b90 <main>:
void stopAlarm();
void onHazardLight();
void playRadio();
void PWM_init();
void offHazardLight();
int main(void){
     b90:	cf 93       	push	r28
     b92:	df 93       	push	r29
     b94:	00 d0       	rcall	.+0      	; 0xb96 <main+0x6>
     b96:	00 d0       	rcall	.+0      	; 0xb98 <main+0x8>
     b98:	1f 92       	push	r1
     b9a:	cd b7       	in	r28, 0x3d	; 61
     b9c:	de b7       	in	r29, 0x3e	; 62
	start:
	GGA_Index=0;
     b9e:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <GGA_Index+0x1>
     ba2:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <GGA_Index>
	setOutput(DDRC,led);
     ba6:	84 b3       	in	r24, 0x14	; 20
     ba8:	81 60       	ori	r24, 0x01	; 1
     baa:	84 bb       	out	0x14, r24	; 20
	setOutput(DDRD,buzzer);
     bac:	81 b3       	in	r24, 0x11	; 17
     bae:	80 68       	ori	r24, 0x80	; 128
     bb0:	81 bb       	out	0x11, r24	; 17
	setOutput(DDRD,musicSystem);
     bb2:	81 b3       	in	r24, 0x11	; 17
     bb4:	80 62       	ori	r24, 0x20	; 32
     bb6:	81 bb       	out	0x11, r24	; 17
	LCD_Init();
     bb8:	0e 94 6f 01 	call	0x2de	; 0x2de <LCD_Init>
     bbc:	2f ef       	ldi	r18, 0xFF	; 255
     bbe:	3d e3       	ldi	r19, 0x3D	; 61
     bc0:	49 e4       	ldi	r20, 0x49	; 73
     bc2:	21 50       	subi	r18, 0x01	; 1
     bc4:	30 40       	sbci	r19, 0x00	; 0
     bc6:	40 40       	sbci	r20, 0x00	; 0
     bc8:	e1 f7       	brne	.-8      	; 0xbc2 <main+0x32>
     bca:	00 c0       	rjmp	.+0      	; 0xbcc <main+0x3c>
     bcc:	00 00       	nop
	_delay_ms(3000);/* wait for GPS receiver to initialize */
	USART_initialize(9600); /* GSM */
     bce:	60 e8       	ldi	r22, 0x80	; 128
     bd0:	75 e2       	ldi	r23, 0x25	; 37
     bd2:	80 e0       	ldi	r24, 0x00	; 0
     bd4:	90 e0       	ldi	r25, 0x00	; 0
     bd6:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <USART_initialize>
	USART_Init(9600);/* GPS */
     bda:	60 e8       	ldi	r22, 0x80	; 128
     bdc:	75 e2       	ldi	r23, 0x25	; 37
     bde:	80 e0       	ldi	r24, 0x00	; 0
     be0:	90 e0       	ldi	r25, 0x00	; 0
     be2:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <USART_Init>
	ADC_Init();
     be6:	0e 94 bc 01 	call	0x378	; 0x378 <ADC_Init>
	sei();
     bea:	78 94       	sei
	I2C_Init();
     bec:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <I2C_Init>
	PWM_init();
     bf0:	0e 94 c2 05 	call	0xb84	; 0xb84 <PWM_init>
	MPU6050_Init();
     bf4:	0e 94 0d 03 	call	0x61a	; 0x61a <MPU6050_Init>
	LCD_Clear();
     bf8:	0e 94 b8 01 	call	0x370	; 0x370 <LCD_Clear>
	float Xa,Ya,Za;
	while (1){
		//flame detection
		if(pinRead(PINC,flame)==0x10){
     bfc:	9c 9b       	sbis	0x13, 4	; 19
     bfe:	24 c0       	rjmp	.+72     	; 0xc48 <main+0xb8>
			ringAlarm();onHazardLight();
     c00:	0e 94 ae 05 	call	0xb5c	; 0xb5c <ringAlarm>
     c04:	0e 94 b6 05 	call	0xb6c	; 0xb6c <onHazardLight>
     c08:	8f ef       	ldi	r24, 0xFF	; 255
     c0a:	99 e6       	ldi	r25, 0x69	; 105
     c0c:	28 e1       	ldi	r18, 0x18	; 24
     c0e:	81 50       	subi	r24, 0x01	; 1
     c10:	90 40       	sbci	r25, 0x00	; 0
     c12:	20 40       	sbci	r18, 0x00	; 0
     c14:	e1 f7       	brne	.-8      	; 0xc0e <main+0x7e>
     c16:	00 c0       	rjmp	.+0      	; 0xc18 <main+0x88>
     c18:	00 00       	nop
			_delay_ms(1000);
			stopAlarm();offHazardLight();
     c1a:	0e 94 b2 05 	call	0xb64	; 0xb64 <stopAlarm>
     c1e:	0e 94 ba 05 	call	0xb74	; 0xb74 <offHazardLight>
			LCD_String("Flame Detected !");
     c22:	80 ea       	ldi	r24, 0xA0	; 160
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	0e 94 8a 01 	call	0x314	; 0x314 <LCD_String>
			getAllValuesGps();
     c2a:	0e 94 8a 02 	call	0x514	; 0x514 <getAllValuesGps>
			LCD_String(Altitude_Buffer);
     c2e:	84 ed       	ldi	r24, 0xD4	; 212
     c30:	91 e0       	ldi	r25, 0x01	; 1
     c32:	0e 94 8a 01 	call	0x314	; 0x314 <LCD_String>
			LCD_String(degrees_buffer);
     c36:	8b e7       	ldi	r24, 0x7B	; 123
     c38:	91 e0       	ldi	r25, 0x01	; 1
     c3a:	0e 94 8a 01 	call	0x314	; 0x314 <LCD_String>
			sendMessage("Flame Detected");
     c3e:	81 eb       	ldi	r24, 0xB1	; 177
     c40:	90 e0       	ldi	r25, 0x00	; 0
     c42:	0e 94 8a 04 	call	0x914	; 0x914 <sendMessage>
     c46:	da cf       	rjmp	.-76     	; 0xbfc <main+0x6c>
		}//if end
		else{
			//set wheel speed vehicle
			int val=ADC_Read(0);
     c48:	80 e0       	ldi	r24, 0x00	; 0
     c4a:	0e 94 c4 01 	call	0x388	; 0x388 <ADC_Read>
			float speed=(val/1024.0)*255.0;
     c4e:	bc 01       	movw	r22, r24
     c50:	99 0f       	add	r25, r25
     c52:	88 0b       	sbc	r24, r24
     c54:	99 0b       	sbc	r25, r25
     c56:	0e 94 09 08 	call	0x1012	; 0x1012 <__floatsisf>
     c5a:	20 e0       	ldi	r18, 0x00	; 0
     c5c:	30 e0       	ldi	r19, 0x00	; 0
     c5e:	40 e8       	ldi	r20, 0x80	; 128
     c60:	5a e3       	ldi	r21, 0x3A	; 58
     c62:	0e 94 be 08 	call	0x117c	; 0x117c <__mulsf3>
     c66:	20 e0       	ldi	r18, 0x00	; 0
     c68:	30 e0       	ldi	r19, 0x00	; 0
     c6a:	4f e7       	ldi	r20, 0x7F	; 127
     c6c:	53 e4       	ldi	r21, 0x43	; 67
     c6e:	0e 94 be 08 	call	0x117c	; 0x117c <__mulsf3>
			OCR0=(int)speed;
     c72:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <__fixsfsi>
     c76:	86 2f       	mov	r24, r22
     c78:	97 2f       	mov	r25, r23
     c7a:	6c 01       	movw	r12, r24
     c7c:	6c bf       	out	0x3c, r22	; 60
			//get pressure
			int value = ADC_Read(1);
     c7e:	81 e0       	ldi	r24, 0x01	; 1
     c80:	0e 94 c4 01 	call	0x388	; 0x388 <ADC_Read>
			if (value > 107){// if value gt 107 vehicle is moving
     c84:	8c 36       	cpi	r24, 0x6C	; 108
     c86:	91 05       	cpc	r25, r1
     c88:	0c f4       	brge	.+2      	; 0xc8c <main+0xfc>
     c8a:	b8 cf       	rjmp	.-144    	; 0xbfc <main+0x6c>
				//get gyroscope values;
				Read_RawValue();
     c8c:	0e 94 58 03 	call	0x6b0	; 0x6b0 <Read_RawValue>
				Xa = (Acc_x/16384.0)*9.8066;
     c90:	20 e0       	ldi	r18, 0x00	; 0
     c92:	30 e0       	ldi	r19, 0x00	; 0
     c94:	40 e8       	ldi	r20, 0x80	; 128
     c96:	58 e3       	ldi	r21, 0x38	; 56
     c98:	60 91 a2 01 	lds	r22, 0x01A2	; 0x8001a2 <Acc_x>
     c9c:	70 91 a3 01 	lds	r23, 0x01A3	; 0x8001a3 <Acc_x+0x1>
     ca0:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <Acc_x+0x2>
     ca4:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <Acc_x+0x3>
     ca8:	0e 94 be 08 	call	0x117c	; 0x117c <__mulsf3>
     cac:	25 ed       	ldi	r18, 0xD5	; 213
     cae:	37 ee       	ldi	r19, 0xE7	; 231
     cb0:	4c e1       	ldi	r20, 0x1C	; 28
     cb2:	51 e4       	ldi	r21, 0x41	; 65
     cb4:	0e 94 be 08 	call	0x117c	; 0x117c <__mulsf3>
     cb8:	4b 01       	movw	r8, r22
     cba:	5c 01       	movw	r10, r24
				Ya = (Acc_y/16384.0)*9.8066;
     cbc:	20 e0       	ldi	r18, 0x00	; 0
     cbe:	30 e0       	ldi	r19, 0x00	; 0
     cc0:	40 e8       	ldi	r20, 0x80	; 128
     cc2:	58 e3       	ldi	r21, 0x38	; 56
     cc4:	60 91 77 01 	lds	r22, 0x0177	; 0x800177 <Acc_y>
     cc8:	70 91 78 01 	lds	r23, 0x0178	; 0x800178 <Acc_y+0x1>
     ccc:	80 91 79 01 	lds	r24, 0x0179	; 0x800179 <Acc_y+0x2>
     cd0:	90 91 7a 01 	lds	r25, 0x017A	; 0x80017a <Acc_y+0x3>
     cd4:	0e 94 be 08 	call	0x117c	; 0x117c <__mulsf3>
     cd8:	25 ed       	ldi	r18, 0xD5	; 213
     cda:	37 ee       	ldi	r19, 0xE7	; 231
     cdc:	4c e1       	ldi	r20, 0x1C	; 28
     cde:	51 e4       	ldi	r21, 0x41	; 65
     ce0:	0e 94 be 08 	call	0x117c	; 0x117c <__mulsf3>
     ce4:	2b 01       	movw	r4, r22
     ce6:	3c 01       	movw	r6, r24
				Za = (Acc_z/16384.0)*9.8066;
     ce8:	20 e0       	ldi	r18, 0x00	; 0
     cea:	30 e0       	ldi	r19, 0x00	; 0
     cec:	40 e8       	ldi	r20, 0x80	; 128
     cee:	58 e3       	ldi	r21, 0x38	; 56
     cf0:	60 91 d5 00 	lds	r22, 0x00D5	; 0x8000d5 <Acc_z>
     cf4:	70 91 d6 00 	lds	r23, 0x00D6	; 0x8000d6 <Acc_z+0x1>
     cf8:	80 91 d7 00 	lds	r24, 0x00D7	; 0x8000d7 <Acc_z+0x2>
     cfc:	90 91 d8 00 	lds	r25, 0x00D8	; 0x8000d8 <Acc_z+0x3>
     d00:	0e 94 be 08 	call	0x117c	; 0x117c <__mulsf3>
     d04:	25 ed       	ldi	r18, 0xD5	; 213
     d06:	37 ee       	ldi	r19, 0xE7	; 231
     d08:	4c e1       	ldi	r20, 0x1C	; 28
     d0a:	51 e4       	ldi	r21, 0x41	; 65
     d0c:	0e 94 be 08 	call	0x117c	; 0x117c <__mulsf3>
				if(pinRead(PINC,alcohol)==0x20){//alcohol detection
     d10:	23 b3       	in	r18, 0x13	; 19
					getAllValuesGps();
					LCD_String(Altitude_Buffer);
					LCD_String(degrees_buffer);
					sendMessage("Alcohol Detected");
				}//if end
				else if(1 && isDriverSleepingGyro(Xa,Ya,Za)){//alcohol not detected  //1 ==> IR Detection                     
     d12:	7b 01       	movw	r14, r22
     d14:	8c 01       	movw	r16, r24
     d16:	a3 01       	movw	r20, r6
     d18:	92 01       	movw	r18, r4
     d1a:	c5 01       	movw	r24, r10
     d1c:	b4 01       	movw	r22, r8
     d1e:	0e 94 09 04 	call	0x812	; 0x812 <isDriverSleepingGyro>
     d22:	89 2b       	or	r24, r25
     d24:	09 f4       	brne	.+2      	; 0xd28 <main+0x198>
     d26:	6a cf       	rjmp	.-300    	; 0xbfc <main+0x6c>
						ringAlarm();onHazardLight();
     d28:	0e 94 ae 05 	call	0xb5c	; 0xb5c <ringAlarm>
     d2c:	0e 94 b6 05 	call	0xb6c	; 0xb6c <onHazardLight>
						for(int i=1;i<=5;i++){
     d30:	81 e0       	ldi	r24, 0x01	; 1
     d32:	90 e0       	ldi	r25, 0x00	; 0
     d34:	11 c0       	rjmp	.+34     	; 0xd58 <main+0x1c8>
							if(pinRead(PINC,3)==0x08){//if button not pressed
     d36:	9b 9b       	sbis	0x13, 3	; 19
     d38:	05 c0       	rjmp	.+10     	; 0xd44 <main+0x1b4>
								stopAlarm();offHazardLight();
     d3a:	0e 94 b2 05 	call	0xb64	; 0xb64 <stopAlarm>
     d3e:	0e 94 ba 05 	call	0xb74	; 0xb74 <offHazardLight>
								goto start;
     d42:	2d cf       	rjmp	.-422    	; 0xb9e <main+0xe>
     d44:	3f ef       	ldi	r19, 0xFF	; 255
     d46:	49 e6       	ldi	r20, 0x69	; 105
     d48:	28 e1       	ldi	r18, 0x18	; 24
     d4a:	31 50       	subi	r19, 0x01	; 1
     d4c:	40 40       	sbci	r20, 0x00	; 0
     d4e:	20 40       	sbci	r18, 0x00	; 0
     d50:	e1 f7       	brne	.-8      	; 0xd4a <main+0x1ba>
     d52:	00 c0       	rjmp	.+0      	; 0xd54 <main+0x1c4>
     d54:	00 00       	nop
					LCD_String(degrees_buffer);
					sendMessage("Alcohol Detected");
				}//if end
				else if(1 && isDriverSleepingGyro(Xa,Ya,Za)){//alcohol not detected  //1 ==> IR Detection                     
						ringAlarm();onHazardLight();
						for(int i=1;i<=5;i++){
     d56:	01 96       	adiw	r24, 0x01	; 1
     d58:	86 30       	cpi	r24, 0x06	; 6
     d5a:	91 05       	cpc	r25, r1
     d5c:	64 f3       	brlt	.-40     	; 0xd36 <main+0x1a6>
								stopAlarm();offHazardLight();
								goto start;
							}//button if end
							_delay_ms(1000);
						}//for loop end
						LCD_String("Sleeping");
     d5e:	8a ec       	ldi	r24, 0xCA	; 202
     d60:	90 e0       	ldi	r25, 0x00	; 0
     d62:	0e 94 8a 01 	call	0x314	; 0x314 <LCD_String>
						getAllValuesGps();
     d66:	0e 94 8a 02 	call	0x514	; 0x514 <getAllValuesGps>
						LCD_String(Altitude_Buffer);
     d6a:	84 ed       	ldi	r24, 0xD4	; 212
     d6c:	91 e0       	ldi	r25, 0x01	; 1
     d6e:	0e 94 8a 01 	call	0x314	; 0x314 <LCD_String>
						LCD_String(degrees_buffer);
     d72:	8b e7       	ldi	r24, 0x7B	; 123
     d74:	91 e0       	ldi	r25, 0x01	; 1
     d76:	0e 94 8a 01 	call	0x314	; 0x314 <LCD_String>
						sendMessage("Driver is Sleeping");
     d7a:	80 ec       	ldi	r24, 0xC0	; 192
     d7c:	90 e0       	ldi	r25, 0x00	; 0
     d7e:	0e 94 8a 04 	call	0x914	; 0x914 <sendMessage>
						playRadio();
     d82:	0e 94 be 05 	call	0xb7c	; 0xb7c <playRadio>
						//reduce speed of the vehicle
						for(int i=(int)speed;i>=20;i--){
     d86:	1a c0       	rjmp	.+52     	; 0xdbc <main+0x22c>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     d88:	4a e0       	ldi	r20, 0x0A	; 10
     d8a:	be 01       	movw	r22, r28
     d8c:	6f 5f       	subi	r22, 0xFF	; 255
     d8e:	7f 4f       	sbci	r23, 0xFF	; 255
     d90:	c6 01       	movw	r24, r12
     d92:	0e 94 4f 09 	call	0x129e	; 0x129e <__itoa_ncheck>
							char c[5];
							itoa(i,c,10);
							LCD_String(c);
     d96:	ce 01       	movw	r24, r28
     d98:	01 96       	adiw	r24, 0x01	; 1
     d9a:	0e 94 8a 01 	call	0x314	; 0x314 <LCD_String>
							OCR0=i;
     d9e:	cc be       	out	0x3c, r12	; 60
     da0:	3f ef       	ldi	r19, 0xFF	; 255
     da2:	40 e7       	ldi	r20, 0x70	; 112
     da4:	82 e0       	ldi	r24, 0x02	; 2
     da6:	31 50       	subi	r19, 0x01	; 1
     da8:	40 40       	sbci	r20, 0x00	; 0
     daa:	80 40       	sbci	r24, 0x00	; 0
     dac:	e1 f7       	brne	.-8      	; 0xda6 <main+0x216>
     dae:	00 c0       	rjmp	.+0      	; 0xdb0 <main+0x220>
     db0:	00 00       	nop
							_delay_ms(100);
							LCD_Clear();
     db2:	0e 94 b8 01 	call	0x370	; 0x370 <LCD_Clear>
						LCD_String(Altitude_Buffer);
						LCD_String(degrees_buffer);
						sendMessage("Driver is Sleeping");
						playRadio();
						//reduce speed of the vehicle
						for(int i=(int)speed;i>=20;i--){
     db6:	91 e0       	ldi	r25, 0x01	; 1
     db8:	c9 1a       	sub	r12, r25
     dba:	d1 08       	sbc	r13, r1
     dbc:	24 e1       	ldi	r18, 0x14	; 20
     dbe:	c2 16       	cp	r12, r18
     dc0:	d1 04       	cpc	r13, r1
     dc2:	14 f7       	brge	.-60     	; 0xd88 <main+0x1f8>
     dc4:	ff cf       	rjmp	.-2      	; 0xdc4 <main+0x234>

00000dc6 <USART_Init>:

#include "USART_Interrupt.h"

void USART_Init(unsigned long BAUDRATE)				/* USART initialize function */
{
	UCSRB |= (1 << RXEN) | (1 << TXEN) | (1 << RXCIE);				/* Enable USART transmitter and receiver */
     dc6:	8a b1       	in	r24, 0x0a	; 10
     dc8:	88 69       	ori	r24, 0x98	; 152
     dca:	8a b9       	out	0x0a, r24	; 10
	UCSRC |= (1 << URSEL)| (1 << UCSZ0) | (1 << UCSZ1);	/* Write USCRC for 8 bit data and 1 stop bit */
     dcc:	80 b5       	in	r24, 0x20	; 32
     dce:	86 68       	ori	r24, 0x86	; 134
     dd0:	80 bd       	out	0x20, r24	; 32
	UBRRL = BAUD_PRESCALE;							/* Load UBRRL with lower 8 bit of prescale value */
     dd2:	83 e3       	ldi	r24, 0x33	; 51
     dd4:	89 b9       	out	0x09, r24	; 9
	UBRRH = (BAUD_PRESCALE >> 8);					/* Load UBRRH with upper 8 bit of prescale value */
     dd6:	10 bc       	out	0x20, r1	; 32
     dd8:	08 95       	ret

00000dda <__subsf3>:
     dda:	50 58       	subi	r21, 0x80	; 128

00000ddc <__addsf3>:
     ddc:	bb 27       	eor	r27, r27
     dde:	aa 27       	eor	r26, r26
     de0:	0e 94 05 07 	call	0xe0a	; 0xe0a <__addsf3x>
     de4:	0c 94 7f 08 	jmp	0x10fe	; 0x10fe <__fp_round>
     de8:	0e 94 71 08 	call	0x10e2	; 0x10e2 <__fp_pscA>
     dec:	38 f0       	brcs	.+14     	; 0xdfc <__addsf3+0x20>
     dee:	0e 94 78 08 	call	0x10f0	; 0x10f0 <__fp_pscB>
     df2:	20 f0       	brcs	.+8      	; 0xdfc <__addsf3+0x20>
     df4:	39 f4       	brne	.+14     	; 0xe04 <__addsf3+0x28>
     df6:	9f 3f       	cpi	r25, 0xFF	; 255
     df8:	19 f4       	brne	.+6      	; 0xe00 <__addsf3+0x24>
     dfa:	26 f4       	brtc	.+8      	; 0xe04 <__addsf3+0x28>
     dfc:	0c 94 6e 08 	jmp	0x10dc	; 0x10dc <__fp_nan>
     e00:	0e f4       	brtc	.+2      	; 0xe04 <__addsf3+0x28>
     e02:	e0 95       	com	r30
     e04:	e7 fb       	bst	r30, 7
     e06:	0c 94 68 08 	jmp	0x10d0	; 0x10d0 <__fp_inf>

00000e0a <__addsf3x>:
     e0a:	e9 2f       	mov	r30, r25
     e0c:	0e 94 90 08 	call	0x1120	; 0x1120 <__fp_split3>
     e10:	58 f3       	brcs	.-42     	; 0xde8 <__addsf3+0xc>
     e12:	ba 17       	cp	r27, r26
     e14:	62 07       	cpc	r22, r18
     e16:	73 07       	cpc	r23, r19
     e18:	84 07       	cpc	r24, r20
     e1a:	95 07       	cpc	r25, r21
     e1c:	20 f0       	brcs	.+8      	; 0xe26 <__addsf3x+0x1c>
     e1e:	79 f4       	brne	.+30     	; 0xe3e <__addsf3x+0x34>
     e20:	a6 f5       	brtc	.+104    	; 0xe8a <__addsf3x+0x80>
     e22:	0c 94 b2 08 	jmp	0x1164	; 0x1164 <__fp_zero>
     e26:	0e f4       	brtc	.+2      	; 0xe2a <__addsf3x+0x20>
     e28:	e0 95       	com	r30
     e2a:	0b 2e       	mov	r0, r27
     e2c:	ba 2f       	mov	r27, r26
     e2e:	a0 2d       	mov	r26, r0
     e30:	0b 01       	movw	r0, r22
     e32:	b9 01       	movw	r22, r18
     e34:	90 01       	movw	r18, r0
     e36:	0c 01       	movw	r0, r24
     e38:	ca 01       	movw	r24, r20
     e3a:	a0 01       	movw	r20, r0
     e3c:	11 24       	eor	r1, r1
     e3e:	ff 27       	eor	r31, r31
     e40:	59 1b       	sub	r21, r25
     e42:	99 f0       	breq	.+38     	; 0xe6a <__addsf3x+0x60>
     e44:	59 3f       	cpi	r21, 0xF9	; 249
     e46:	50 f4       	brcc	.+20     	; 0xe5c <__addsf3x+0x52>
     e48:	50 3e       	cpi	r21, 0xE0	; 224
     e4a:	68 f1       	brcs	.+90     	; 0xea6 <__addsf3x+0x9c>
     e4c:	1a 16       	cp	r1, r26
     e4e:	f0 40       	sbci	r31, 0x00	; 0
     e50:	a2 2f       	mov	r26, r18
     e52:	23 2f       	mov	r18, r19
     e54:	34 2f       	mov	r19, r20
     e56:	44 27       	eor	r20, r20
     e58:	58 5f       	subi	r21, 0xF8	; 248
     e5a:	f3 cf       	rjmp	.-26     	; 0xe42 <__addsf3x+0x38>
     e5c:	46 95       	lsr	r20
     e5e:	37 95       	ror	r19
     e60:	27 95       	ror	r18
     e62:	a7 95       	ror	r26
     e64:	f0 40       	sbci	r31, 0x00	; 0
     e66:	53 95       	inc	r21
     e68:	c9 f7       	brne	.-14     	; 0xe5c <__addsf3x+0x52>
     e6a:	7e f4       	brtc	.+30     	; 0xe8a <__addsf3x+0x80>
     e6c:	1f 16       	cp	r1, r31
     e6e:	ba 0b       	sbc	r27, r26
     e70:	62 0b       	sbc	r22, r18
     e72:	73 0b       	sbc	r23, r19
     e74:	84 0b       	sbc	r24, r20
     e76:	ba f0       	brmi	.+46     	; 0xea6 <__addsf3x+0x9c>
     e78:	91 50       	subi	r25, 0x01	; 1
     e7a:	a1 f0       	breq	.+40     	; 0xea4 <__addsf3x+0x9a>
     e7c:	ff 0f       	add	r31, r31
     e7e:	bb 1f       	adc	r27, r27
     e80:	66 1f       	adc	r22, r22
     e82:	77 1f       	adc	r23, r23
     e84:	88 1f       	adc	r24, r24
     e86:	c2 f7       	brpl	.-16     	; 0xe78 <__addsf3x+0x6e>
     e88:	0e c0       	rjmp	.+28     	; 0xea6 <__addsf3x+0x9c>
     e8a:	ba 0f       	add	r27, r26
     e8c:	62 1f       	adc	r22, r18
     e8e:	73 1f       	adc	r23, r19
     e90:	84 1f       	adc	r24, r20
     e92:	48 f4       	brcc	.+18     	; 0xea6 <__addsf3x+0x9c>
     e94:	87 95       	ror	r24
     e96:	77 95       	ror	r23
     e98:	67 95       	ror	r22
     e9a:	b7 95       	ror	r27
     e9c:	f7 95       	ror	r31
     e9e:	9e 3f       	cpi	r25, 0xFE	; 254
     ea0:	08 f0       	brcs	.+2      	; 0xea4 <__addsf3x+0x9a>
     ea2:	b0 cf       	rjmp	.-160    	; 0xe04 <__addsf3+0x28>
     ea4:	93 95       	inc	r25
     ea6:	88 0f       	add	r24, r24
     ea8:	08 f0       	brcs	.+2      	; 0xeac <__addsf3x+0xa2>
     eaa:	99 27       	eor	r25, r25
     eac:	ee 0f       	add	r30, r30
     eae:	97 95       	ror	r25
     eb0:	87 95       	ror	r24
     eb2:	08 95       	ret

00000eb4 <__cmpsf2>:
     eb4:	0e 94 44 08 	call	0x1088	; 0x1088 <__fp_cmp>
     eb8:	08 f4       	brcc	.+2      	; 0xebc <__cmpsf2+0x8>
     eba:	81 e0       	ldi	r24, 0x01	; 1
     ebc:	08 95       	ret

00000ebe <__divsf3>:
     ebe:	0e 94 73 07 	call	0xee6	; 0xee6 <__divsf3x>
     ec2:	0c 94 7f 08 	jmp	0x10fe	; 0x10fe <__fp_round>
     ec6:	0e 94 78 08 	call	0x10f0	; 0x10f0 <__fp_pscB>
     eca:	58 f0       	brcs	.+22     	; 0xee2 <__divsf3+0x24>
     ecc:	0e 94 71 08 	call	0x10e2	; 0x10e2 <__fp_pscA>
     ed0:	40 f0       	brcs	.+16     	; 0xee2 <__divsf3+0x24>
     ed2:	29 f4       	brne	.+10     	; 0xede <__divsf3+0x20>
     ed4:	5f 3f       	cpi	r21, 0xFF	; 255
     ed6:	29 f0       	breq	.+10     	; 0xee2 <__divsf3+0x24>
     ed8:	0c 94 68 08 	jmp	0x10d0	; 0x10d0 <__fp_inf>
     edc:	51 11       	cpse	r21, r1
     ede:	0c 94 b3 08 	jmp	0x1166	; 0x1166 <__fp_szero>
     ee2:	0c 94 6e 08 	jmp	0x10dc	; 0x10dc <__fp_nan>

00000ee6 <__divsf3x>:
     ee6:	0e 94 90 08 	call	0x1120	; 0x1120 <__fp_split3>
     eea:	68 f3       	brcs	.-38     	; 0xec6 <__divsf3+0x8>

00000eec <__divsf3_pse>:
     eec:	99 23       	and	r25, r25
     eee:	b1 f3       	breq	.-20     	; 0xedc <__divsf3+0x1e>
     ef0:	55 23       	and	r21, r21
     ef2:	91 f3       	breq	.-28     	; 0xed8 <__divsf3+0x1a>
     ef4:	95 1b       	sub	r25, r21
     ef6:	55 0b       	sbc	r21, r21
     ef8:	bb 27       	eor	r27, r27
     efa:	aa 27       	eor	r26, r26
     efc:	62 17       	cp	r22, r18
     efe:	73 07       	cpc	r23, r19
     f00:	84 07       	cpc	r24, r20
     f02:	38 f0       	brcs	.+14     	; 0xf12 <__divsf3_pse+0x26>
     f04:	9f 5f       	subi	r25, 0xFF	; 255
     f06:	5f 4f       	sbci	r21, 0xFF	; 255
     f08:	22 0f       	add	r18, r18
     f0a:	33 1f       	adc	r19, r19
     f0c:	44 1f       	adc	r20, r20
     f0e:	aa 1f       	adc	r26, r26
     f10:	a9 f3       	breq	.-22     	; 0xefc <__divsf3_pse+0x10>
     f12:	35 d0       	rcall	.+106    	; 0xf7e <__divsf3_pse+0x92>
     f14:	0e 2e       	mov	r0, r30
     f16:	3a f0       	brmi	.+14     	; 0xf26 <__divsf3_pse+0x3a>
     f18:	e0 e8       	ldi	r30, 0x80	; 128
     f1a:	32 d0       	rcall	.+100    	; 0xf80 <__divsf3_pse+0x94>
     f1c:	91 50       	subi	r25, 0x01	; 1
     f1e:	50 40       	sbci	r21, 0x00	; 0
     f20:	e6 95       	lsr	r30
     f22:	00 1c       	adc	r0, r0
     f24:	ca f7       	brpl	.-14     	; 0xf18 <__divsf3_pse+0x2c>
     f26:	2b d0       	rcall	.+86     	; 0xf7e <__divsf3_pse+0x92>
     f28:	fe 2f       	mov	r31, r30
     f2a:	29 d0       	rcall	.+82     	; 0xf7e <__divsf3_pse+0x92>
     f2c:	66 0f       	add	r22, r22
     f2e:	77 1f       	adc	r23, r23
     f30:	88 1f       	adc	r24, r24
     f32:	bb 1f       	adc	r27, r27
     f34:	26 17       	cp	r18, r22
     f36:	37 07       	cpc	r19, r23
     f38:	48 07       	cpc	r20, r24
     f3a:	ab 07       	cpc	r26, r27
     f3c:	b0 e8       	ldi	r27, 0x80	; 128
     f3e:	09 f0       	breq	.+2      	; 0xf42 <__divsf3_pse+0x56>
     f40:	bb 0b       	sbc	r27, r27
     f42:	80 2d       	mov	r24, r0
     f44:	bf 01       	movw	r22, r30
     f46:	ff 27       	eor	r31, r31
     f48:	93 58       	subi	r25, 0x83	; 131
     f4a:	5f 4f       	sbci	r21, 0xFF	; 255
     f4c:	3a f0       	brmi	.+14     	; 0xf5c <__divsf3_pse+0x70>
     f4e:	9e 3f       	cpi	r25, 0xFE	; 254
     f50:	51 05       	cpc	r21, r1
     f52:	78 f0       	brcs	.+30     	; 0xf72 <__divsf3_pse+0x86>
     f54:	0c 94 68 08 	jmp	0x10d0	; 0x10d0 <__fp_inf>
     f58:	0c 94 b3 08 	jmp	0x1166	; 0x1166 <__fp_szero>
     f5c:	5f 3f       	cpi	r21, 0xFF	; 255
     f5e:	e4 f3       	brlt	.-8      	; 0xf58 <__divsf3_pse+0x6c>
     f60:	98 3e       	cpi	r25, 0xE8	; 232
     f62:	d4 f3       	brlt	.-12     	; 0xf58 <__divsf3_pse+0x6c>
     f64:	86 95       	lsr	r24
     f66:	77 95       	ror	r23
     f68:	67 95       	ror	r22
     f6a:	b7 95       	ror	r27
     f6c:	f7 95       	ror	r31
     f6e:	9f 5f       	subi	r25, 0xFF	; 255
     f70:	c9 f7       	brne	.-14     	; 0xf64 <__divsf3_pse+0x78>
     f72:	88 0f       	add	r24, r24
     f74:	91 1d       	adc	r25, r1
     f76:	96 95       	lsr	r25
     f78:	87 95       	ror	r24
     f7a:	97 f9       	bld	r25, 7
     f7c:	08 95       	ret
     f7e:	e1 e0       	ldi	r30, 0x01	; 1
     f80:	66 0f       	add	r22, r22
     f82:	77 1f       	adc	r23, r23
     f84:	88 1f       	adc	r24, r24
     f86:	bb 1f       	adc	r27, r27
     f88:	62 17       	cp	r22, r18
     f8a:	73 07       	cpc	r23, r19
     f8c:	84 07       	cpc	r24, r20
     f8e:	ba 07       	cpc	r27, r26
     f90:	20 f0       	brcs	.+8      	; 0xf9a <__divsf3_pse+0xae>
     f92:	62 1b       	sub	r22, r18
     f94:	73 0b       	sbc	r23, r19
     f96:	84 0b       	sbc	r24, r20
     f98:	ba 0b       	sbc	r27, r26
     f9a:	ee 1f       	adc	r30, r30
     f9c:	88 f7       	brcc	.-30     	; 0xf80 <__divsf3_pse+0x94>
     f9e:	e0 95       	com	r30
     fa0:	08 95       	ret

00000fa2 <__fixsfsi>:
     fa2:	0e 94 d8 07 	call	0xfb0	; 0xfb0 <__fixunssfsi>
     fa6:	68 94       	set
     fa8:	b1 11       	cpse	r27, r1
     faa:	0c 94 b3 08 	jmp	0x1166	; 0x1166 <__fp_szero>
     fae:	08 95       	ret

00000fb0 <__fixunssfsi>:
     fb0:	0e 94 98 08 	call	0x1130	; 0x1130 <__fp_splitA>
     fb4:	88 f0       	brcs	.+34     	; 0xfd8 <__fixunssfsi+0x28>
     fb6:	9f 57       	subi	r25, 0x7F	; 127
     fb8:	98 f0       	brcs	.+38     	; 0xfe0 <__fixunssfsi+0x30>
     fba:	b9 2f       	mov	r27, r25
     fbc:	99 27       	eor	r25, r25
     fbe:	b7 51       	subi	r27, 0x17	; 23
     fc0:	b0 f0       	brcs	.+44     	; 0xfee <__fixunssfsi+0x3e>
     fc2:	e1 f0       	breq	.+56     	; 0xffc <__fixunssfsi+0x4c>
     fc4:	66 0f       	add	r22, r22
     fc6:	77 1f       	adc	r23, r23
     fc8:	88 1f       	adc	r24, r24
     fca:	99 1f       	adc	r25, r25
     fcc:	1a f0       	brmi	.+6      	; 0xfd4 <__fixunssfsi+0x24>
     fce:	ba 95       	dec	r27
     fd0:	c9 f7       	brne	.-14     	; 0xfc4 <__fixunssfsi+0x14>
     fd2:	14 c0       	rjmp	.+40     	; 0xffc <__fixunssfsi+0x4c>
     fd4:	b1 30       	cpi	r27, 0x01	; 1
     fd6:	91 f0       	breq	.+36     	; 0xffc <__fixunssfsi+0x4c>
     fd8:	0e 94 b2 08 	call	0x1164	; 0x1164 <__fp_zero>
     fdc:	b1 e0       	ldi	r27, 0x01	; 1
     fde:	08 95       	ret
     fe0:	0c 94 b2 08 	jmp	0x1164	; 0x1164 <__fp_zero>
     fe4:	67 2f       	mov	r22, r23
     fe6:	78 2f       	mov	r23, r24
     fe8:	88 27       	eor	r24, r24
     fea:	b8 5f       	subi	r27, 0xF8	; 248
     fec:	39 f0       	breq	.+14     	; 0xffc <__fixunssfsi+0x4c>
     fee:	b9 3f       	cpi	r27, 0xF9	; 249
     ff0:	cc f3       	brlt	.-14     	; 0xfe4 <__fixunssfsi+0x34>
     ff2:	86 95       	lsr	r24
     ff4:	77 95       	ror	r23
     ff6:	67 95       	ror	r22
     ff8:	b3 95       	inc	r27
     ffa:	d9 f7       	brne	.-10     	; 0xff2 <__fixunssfsi+0x42>
     ffc:	3e f4       	brtc	.+14     	; 0x100c <__fixunssfsi+0x5c>
     ffe:	90 95       	com	r25
    1000:	80 95       	com	r24
    1002:	70 95       	com	r23
    1004:	61 95       	neg	r22
    1006:	7f 4f       	sbci	r23, 0xFF	; 255
    1008:	8f 4f       	sbci	r24, 0xFF	; 255
    100a:	9f 4f       	sbci	r25, 0xFF	; 255
    100c:	08 95       	ret

0000100e <__floatunsisf>:
    100e:	e8 94       	clt
    1010:	09 c0       	rjmp	.+18     	; 0x1024 <__floatsisf+0x12>

00001012 <__floatsisf>:
    1012:	97 fb       	bst	r25, 7
    1014:	3e f4       	brtc	.+14     	; 0x1024 <__floatsisf+0x12>
    1016:	90 95       	com	r25
    1018:	80 95       	com	r24
    101a:	70 95       	com	r23
    101c:	61 95       	neg	r22
    101e:	7f 4f       	sbci	r23, 0xFF	; 255
    1020:	8f 4f       	sbci	r24, 0xFF	; 255
    1022:	9f 4f       	sbci	r25, 0xFF	; 255
    1024:	99 23       	and	r25, r25
    1026:	a9 f0       	breq	.+42     	; 0x1052 <__floatsisf+0x40>
    1028:	f9 2f       	mov	r31, r25
    102a:	96 e9       	ldi	r25, 0x96	; 150
    102c:	bb 27       	eor	r27, r27
    102e:	93 95       	inc	r25
    1030:	f6 95       	lsr	r31
    1032:	87 95       	ror	r24
    1034:	77 95       	ror	r23
    1036:	67 95       	ror	r22
    1038:	b7 95       	ror	r27
    103a:	f1 11       	cpse	r31, r1
    103c:	f8 cf       	rjmp	.-16     	; 0x102e <__floatsisf+0x1c>
    103e:	fa f4       	brpl	.+62     	; 0x107e <__floatsisf+0x6c>
    1040:	bb 0f       	add	r27, r27
    1042:	11 f4       	brne	.+4      	; 0x1048 <__floatsisf+0x36>
    1044:	60 ff       	sbrs	r22, 0
    1046:	1b c0       	rjmp	.+54     	; 0x107e <__floatsisf+0x6c>
    1048:	6f 5f       	subi	r22, 0xFF	; 255
    104a:	7f 4f       	sbci	r23, 0xFF	; 255
    104c:	8f 4f       	sbci	r24, 0xFF	; 255
    104e:	9f 4f       	sbci	r25, 0xFF	; 255
    1050:	16 c0       	rjmp	.+44     	; 0x107e <__floatsisf+0x6c>
    1052:	88 23       	and	r24, r24
    1054:	11 f0       	breq	.+4      	; 0x105a <__floatsisf+0x48>
    1056:	96 e9       	ldi	r25, 0x96	; 150
    1058:	11 c0       	rjmp	.+34     	; 0x107c <__floatsisf+0x6a>
    105a:	77 23       	and	r23, r23
    105c:	21 f0       	breq	.+8      	; 0x1066 <__floatsisf+0x54>
    105e:	9e e8       	ldi	r25, 0x8E	; 142
    1060:	87 2f       	mov	r24, r23
    1062:	76 2f       	mov	r23, r22
    1064:	05 c0       	rjmp	.+10     	; 0x1070 <__floatsisf+0x5e>
    1066:	66 23       	and	r22, r22
    1068:	71 f0       	breq	.+28     	; 0x1086 <__floatsisf+0x74>
    106a:	96 e8       	ldi	r25, 0x86	; 134
    106c:	86 2f       	mov	r24, r22
    106e:	70 e0       	ldi	r23, 0x00	; 0
    1070:	60 e0       	ldi	r22, 0x00	; 0
    1072:	2a f0       	brmi	.+10     	; 0x107e <__floatsisf+0x6c>
    1074:	9a 95       	dec	r25
    1076:	66 0f       	add	r22, r22
    1078:	77 1f       	adc	r23, r23
    107a:	88 1f       	adc	r24, r24
    107c:	da f7       	brpl	.-10     	; 0x1074 <__floatsisf+0x62>
    107e:	88 0f       	add	r24, r24
    1080:	96 95       	lsr	r25
    1082:	87 95       	ror	r24
    1084:	97 f9       	bld	r25, 7
    1086:	08 95       	ret

00001088 <__fp_cmp>:
    1088:	99 0f       	add	r25, r25
    108a:	00 08       	sbc	r0, r0
    108c:	55 0f       	add	r21, r21
    108e:	aa 0b       	sbc	r26, r26
    1090:	e0 e8       	ldi	r30, 0x80	; 128
    1092:	fe ef       	ldi	r31, 0xFE	; 254
    1094:	16 16       	cp	r1, r22
    1096:	17 06       	cpc	r1, r23
    1098:	e8 07       	cpc	r30, r24
    109a:	f9 07       	cpc	r31, r25
    109c:	c0 f0       	brcs	.+48     	; 0x10ce <__fp_cmp+0x46>
    109e:	12 16       	cp	r1, r18
    10a0:	13 06       	cpc	r1, r19
    10a2:	e4 07       	cpc	r30, r20
    10a4:	f5 07       	cpc	r31, r21
    10a6:	98 f0       	brcs	.+38     	; 0x10ce <__fp_cmp+0x46>
    10a8:	62 1b       	sub	r22, r18
    10aa:	73 0b       	sbc	r23, r19
    10ac:	84 0b       	sbc	r24, r20
    10ae:	95 0b       	sbc	r25, r21
    10b0:	39 f4       	brne	.+14     	; 0x10c0 <__fp_cmp+0x38>
    10b2:	0a 26       	eor	r0, r26
    10b4:	61 f0       	breq	.+24     	; 0x10ce <__fp_cmp+0x46>
    10b6:	23 2b       	or	r18, r19
    10b8:	24 2b       	or	r18, r20
    10ba:	25 2b       	or	r18, r21
    10bc:	21 f4       	brne	.+8      	; 0x10c6 <__fp_cmp+0x3e>
    10be:	08 95       	ret
    10c0:	0a 26       	eor	r0, r26
    10c2:	09 f4       	brne	.+2      	; 0x10c6 <__fp_cmp+0x3e>
    10c4:	a1 40       	sbci	r26, 0x01	; 1
    10c6:	a6 95       	lsr	r26
    10c8:	8f ef       	ldi	r24, 0xFF	; 255
    10ca:	81 1d       	adc	r24, r1
    10cc:	81 1d       	adc	r24, r1
    10ce:	08 95       	ret

000010d0 <__fp_inf>:
    10d0:	97 f9       	bld	r25, 7
    10d2:	9f 67       	ori	r25, 0x7F	; 127
    10d4:	80 e8       	ldi	r24, 0x80	; 128
    10d6:	70 e0       	ldi	r23, 0x00	; 0
    10d8:	60 e0       	ldi	r22, 0x00	; 0
    10da:	08 95       	ret

000010dc <__fp_nan>:
    10dc:	9f ef       	ldi	r25, 0xFF	; 255
    10de:	80 ec       	ldi	r24, 0xC0	; 192
    10e0:	08 95       	ret

000010e2 <__fp_pscA>:
    10e2:	00 24       	eor	r0, r0
    10e4:	0a 94       	dec	r0
    10e6:	16 16       	cp	r1, r22
    10e8:	17 06       	cpc	r1, r23
    10ea:	18 06       	cpc	r1, r24
    10ec:	09 06       	cpc	r0, r25
    10ee:	08 95       	ret

000010f0 <__fp_pscB>:
    10f0:	00 24       	eor	r0, r0
    10f2:	0a 94       	dec	r0
    10f4:	12 16       	cp	r1, r18
    10f6:	13 06       	cpc	r1, r19
    10f8:	14 06       	cpc	r1, r20
    10fa:	05 06       	cpc	r0, r21
    10fc:	08 95       	ret

000010fe <__fp_round>:
    10fe:	09 2e       	mov	r0, r25
    1100:	03 94       	inc	r0
    1102:	00 0c       	add	r0, r0
    1104:	11 f4       	brne	.+4      	; 0x110a <__fp_round+0xc>
    1106:	88 23       	and	r24, r24
    1108:	52 f0       	brmi	.+20     	; 0x111e <__fp_round+0x20>
    110a:	bb 0f       	add	r27, r27
    110c:	40 f4       	brcc	.+16     	; 0x111e <__fp_round+0x20>
    110e:	bf 2b       	or	r27, r31
    1110:	11 f4       	brne	.+4      	; 0x1116 <__fp_round+0x18>
    1112:	60 ff       	sbrs	r22, 0
    1114:	04 c0       	rjmp	.+8      	; 0x111e <__fp_round+0x20>
    1116:	6f 5f       	subi	r22, 0xFF	; 255
    1118:	7f 4f       	sbci	r23, 0xFF	; 255
    111a:	8f 4f       	sbci	r24, 0xFF	; 255
    111c:	9f 4f       	sbci	r25, 0xFF	; 255
    111e:	08 95       	ret

00001120 <__fp_split3>:
    1120:	57 fd       	sbrc	r21, 7
    1122:	90 58       	subi	r25, 0x80	; 128
    1124:	44 0f       	add	r20, r20
    1126:	55 1f       	adc	r21, r21
    1128:	59 f0       	breq	.+22     	; 0x1140 <__fp_splitA+0x10>
    112a:	5f 3f       	cpi	r21, 0xFF	; 255
    112c:	71 f0       	breq	.+28     	; 0x114a <__fp_splitA+0x1a>
    112e:	47 95       	ror	r20

00001130 <__fp_splitA>:
    1130:	88 0f       	add	r24, r24
    1132:	97 fb       	bst	r25, 7
    1134:	99 1f       	adc	r25, r25
    1136:	61 f0       	breq	.+24     	; 0x1150 <__fp_splitA+0x20>
    1138:	9f 3f       	cpi	r25, 0xFF	; 255
    113a:	79 f0       	breq	.+30     	; 0x115a <__fp_splitA+0x2a>
    113c:	87 95       	ror	r24
    113e:	08 95       	ret
    1140:	12 16       	cp	r1, r18
    1142:	13 06       	cpc	r1, r19
    1144:	14 06       	cpc	r1, r20
    1146:	55 1f       	adc	r21, r21
    1148:	f2 cf       	rjmp	.-28     	; 0x112e <__fp_split3+0xe>
    114a:	46 95       	lsr	r20
    114c:	f1 df       	rcall	.-30     	; 0x1130 <__fp_splitA>
    114e:	08 c0       	rjmp	.+16     	; 0x1160 <__fp_splitA+0x30>
    1150:	16 16       	cp	r1, r22
    1152:	17 06       	cpc	r1, r23
    1154:	18 06       	cpc	r1, r24
    1156:	99 1f       	adc	r25, r25
    1158:	f1 cf       	rjmp	.-30     	; 0x113c <__fp_splitA+0xc>
    115a:	86 95       	lsr	r24
    115c:	71 05       	cpc	r23, r1
    115e:	61 05       	cpc	r22, r1
    1160:	08 94       	sec
    1162:	08 95       	ret

00001164 <__fp_zero>:
    1164:	e8 94       	clt

00001166 <__fp_szero>:
    1166:	bb 27       	eor	r27, r27
    1168:	66 27       	eor	r22, r22
    116a:	77 27       	eor	r23, r23
    116c:	cb 01       	movw	r24, r22
    116e:	97 f9       	bld	r25, 7
    1170:	08 95       	ret

00001172 <__gesf2>:
    1172:	0e 94 44 08 	call	0x1088	; 0x1088 <__fp_cmp>
    1176:	08 f4       	brcc	.+2      	; 0x117a <__gesf2+0x8>
    1178:	8f ef       	ldi	r24, 0xFF	; 255
    117a:	08 95       	ret

0000117c <__mulsf3>:
    117c:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__mulsf3x>
    1180:	0c 94 7f 08 	jmp	0x10fe	; 0x10fe <__fp_round>
    1184:	0e 94 71 08 	call	0x10e2	; 0x10e2 <__fp_pscA>
    1188:	38 f0       	brcs	.+14     	; 0x1198 <__mulsf3+0x1c>
    118a:	0e 94 78 08 	call	0x10f0	; 0x10f0 <__fp_pscB>
    118e:	20 f0       	brcs	.+8      	; 0x1198 <__mulsf3+0x1c>
    1190:	95 23       	and	r25, r21
    1192:	11 f0       	breq	.+4      	; 0x1198 <__mulsf3+0x1c>
    1194:	0c 94 68 08 	jmp	0x10d0	; 0x10d0 <__fp_inf>
    1198:	0c 94 6e 08 	jmp	0x10dc	; 0x10dc <__fp_nan>
    119c:	11 24       	eor	r1, r1
    119e:	0c 94 b3 08 	jmp	0x1166	; 0x1166 <__fp_szero>

000011a2 <__mulsf3x>:
    11a2:	0e 94 90 08 	call	0x1120	; 0x1120 <__fp_split3>
    11a6:	70 f3       	brcs	.-36     	; 0x1184 <__mulsf3+0x8>

000011a8 <__mulsf3_pse>:
    11a8:	95 9f       	mul	r25, r21
    11aa:	c1 f3       	breq	.-16     	; 0x119c <__mulsf3+0x20>
    11ac:	95 0f       	add	r25, r21
    11ae:	50 e0       	ldi	r21, 0x00	; 0
    11b0:	55 1f       	adc	r21, r21
    11b2:	62 9f       	mul	r22, r18
    11b4:	f0 01       	movw	r30, r0
    11b6:	72 9f       	mul	r23, r18
    11b8:	bb 27       	eor	r27, r27
    11ba:	f0 0d       	add	r31, r0
    11bc:	b1 1d       	adc	r27, r1
    11be:	63 9f       	mul	r22, r19
    11c0:	aa 27       	eor	r26, r26
    11c2:	f0 0d       	add	r31, r0
    11c4:	b1 1d       	adc	r27, r1
    11c6:	aa 1f       	adc	r26, r26
    11c8:	64 9f       	mul	r22, r20
    11ca:	66 27       	eor	r22, r22
    11cc:	b0 0d       	add	r27, r0
    11ce:	a1 1d       	adc	r26, r1
    11d0:	66 1f       	adc	r22, r22
    11d2:	82 9f       	mul	r24, r18
    11d4:	22 27       	eor	r18, r18
    11d6:	b0 0d       	add	r27, r0
    11d8:	a1 1d       	adc	r26, r1
    11da:	62 1f       	adc	r22, r18
    11dc:	73 9f       	mul	r23, r19
    11de:	b0 0d       	add	r27, r0
    11e0:	a1 1d       	adc	r26, r1
    11e2:	62 1f       	adc	r22, r18
    11e4:	83 9f       	mul	r24, r19
    11e6:	a0 0d       	add	r26, r0
    11e8:	61 1d       	adc	r22, r1
    11ea:	22 1f       	adc	r18, r18
    11ec:	74 9f       	mul	r23, r20
    11ee:	33 27       	eor	r19, r19
    11f0:	a0 0d       	add	r26, r0
    11f2:	61 1d       	adc	r22, r1
    11f4:	23 1f       	adc	r18, r19
    11f6:	84 9f       	mul	r24, r20
    11f8:	60 0d       	add	r22, r0
    11fa:	21 1d       	adc	r18, r1
    11fc:	82 2f       	mov	r24, r18
    11fe:	76 2f       	mov	r23, r22
    1200:	6a 2f       	mov	r22, r26
    1202:	11 24       	eor	r1, r1
    1204:	9f 57       	subi	r25, 0x7F	; 127
    1206:	50 40       	sbci	r21, 0x00	; 0
    1208:	9a f0       	brmi	.+38     	; 0x1230 <__mulsf3_pse+0x88>
    120a:	f1 f0       	breq	.+60     	; 0x1248 <__mulsf3_pse+0xa0>
    120c:	88 23       	and	r24, r24
    120e:	4a f0       	brmi	.+18     	; 0x1222 <__mulsf3_pse+0x7a>
    1210:	ee 0f       	add	r30, r30
    1212:	ff 1f       	adc	r31, r31
    1214:	bb 1f       	adc	r27, r27
    1216:	66 1f       	adc	r22, r22
    1218:	77 1f       	adc	r23, r23
    121a:	88 1f       	adc	r24, r24
    121c:	91 50       	subi	r25, 0x01	; 1
    121e:	50 40       	sbci	r21, 0x00	; 0
    1220:	a9 f7       	brne	.-22     	; 0x120c <__mulsf3_pse+0x64>
    1222:	9e 3f       	cpi	r25, 0xFE	; 254
    1224:	51 05       	cpc	r21, r1
    1226:	80 f0       	brcs	.+32     	; 0x1248 <__mulsf3_pse+0xa0>
    1228:	0c 94 68 08 	jmp	0x10d0	; 0x10d0 <__fp_inf>
    122c:	0c 94 b3 08 	jmp	0x1166	; 0x1166 <__fp_szero>
    1230:	5f 3f       	cpi	r21, 0xFF	; 255
    1232:	e4 f3       	brlt	.-8      	; 0x122c <__mulsf3_pse+0x84>
    1234:	98 3e       	cpi	r25, 0xE8	; 232
    1236:	d4 f3       	brlt	.-12     	; 0x122c <__mulsf3_pse+0x84>
    1238:	86 95       	lsr	r24
    123a:	77 95       	ror	r23
    123c:	67 95       	ror	r22
    123e:	b7 95       	ror	r27
    1240:	f7 95       	ror	r31
    1242:	e7 95       	ror	r30
    1244:	9f 5f       	subi	r25, 0xFF	; 255
    1246:	c1 f7       	brne	.-16     	; 0x1238 <__mulsf3_pse+0x90>
    1248:	fe 2b       	or	r31, r30
    124a:	88 0f       	add	r24, r24
    124c:	91 1d       	adc	r25, r1
    124e:	96 95       	lsr	r25
    1250:	87 95       	ror	r24
    1252:	97 f9       	bld	r25, 7
    1254:	08 95       	ret

00001256 <dtostrf>:
    1256:	ef 92       	push	r14
    1258:	0f 93       	push	r16
    125a:	1f 93       	push	r17
    125c:	cf 93       	push	r28
    125e:	df 93       	push	r29
    1260:	e8 01       	movw	r28, r16
    1262:	47 fd       	sbrc	r20, 7
    1264:	02 c0       	rjmp	.+4      	; 0x126a <dtostrf+0x14>
    1266:	34 e0       	ldi	r19, 0x04	; 4
    1268:	01 c0       	rjmp	.+2      	; 0x126c <dtostrf+0x16>
    126a:	34 e1       	ldi	r19, 0x14	; 20
    126c:	04 2e       	mov	r0, r20
    126e:	00 0c       	add	r0, r0
    1270:	55 0b       	sbc	r21, r21
    1272:	57 ff       	sbrs	r21, 7
    1274:	03 c0       	rjmp	.+6      	; 0x127c <dtostrf+0x26>
    1276:	51 95       	neg	r21
    1278:	41 95       	neg	r20
    127a:	51 09       	sbc	r21, r1
    127c:	e3 2e       	mov	r14, r19
    127e:	02 2f       	mov	r16, r18
    1280:	24 2f       	mov	r18, r20
    1282:	ae 01       	movw	r20, r28
    1284:	0e 94 74 09 	call	0x12e8	; 0x12e8 <dtoa_prf>
    1288:	ce 01       	movw	r24, r28
    128a:	df 91       	pop	r29
    128c:	cf 91       	pop	r28
    128e:	1f 91       	pop	r17
    1290:	0f 91       	pop	r16
    1292:	ef 90       	pop	r14
    1294:	08 95       	ret

00001296 <atof>:
    1296:	66 27       	eor	r22, r22
    1298:	77 27       	eor	r23, r23
    129a:	0c 94 ce 0a 	jmp	0x159c	; 0x159c <strtod>

0000129e <__itoa_ncheck>:
    129e:	bb 27       	eor	r27, r27
    12a0:	4a 30       	cpi	r20, 0x0A	; 10
    12a2:	31 f4       	brne	.+12     	; 0x12b0 <__itoa_ncheck+0x12>
    12a4:	99 23       	and	r25, r25
    12a6:	22 f4       	brpl	.+8      	; 0x12b0 <__itoa_ncheck+0x12>
    12a8:	bd e2       	ldi	r27, 0x2D	; 45
    12aa:	90 95       	com	r25
    12ac:	81 95       	neg	r24
    12ae:	9f 4f       	sbci	r25, 0xFF	; 255
    12b0:	0c 94 5b 09 	jmp	0x12b6	; 0x12b6 <__utoa_common>

000012b4 <__utoa_ncheck>:
    12b4:	bb 27       	eor	r27, r27

000012b6 <__utoa_common>:
    12b6:	fb 01       	movw	r30, r22
    12b8:	55 27       	eor	r21, r21
    12ba:	aa 27       	eor	r26, r26
    12bc:	88 0f       	add	r24, r24
    12be:	99 1f       	adc	r25, r25
    12c0:	aa 1f       	adc	r26, r26
    12c2:	a4 17       	cp	r26, r20
    12c4:	10 f0       	brcs	.+4      	; 0x12ca <__utoa_common+0x14>
    12c6:	a4 1b       	sub	r26, r20
    12c8:	83 95       	inc	r24
    12ca:	50 51       	subi	r21, 0x10	; 16
    12cc:	b9 f7       	brne	.-18     	; 0x12bc <__utoa_common+0x6>
    12ce:	a0 5d       	subi	r26, 0xD0	; 208
    12d0:	aa 33       	cpi	r26, 0x3A	; 58
    12d2:	08 f0       	brcs	.+2      	; 0x12d6 <__utoa_common+0x20>
    12d4:	a9 5d       	subi	r26, 0xD9	; 217
    12d6:	a1 93       	st	Z+, r26
    12d8:	00 97       	sbiw	r24, 0x00	; 0
    12da:	79 f7       	brne	.-34     	; 0x12ba <__utoa_common+0x4>
    12dc:	b1 11       	cpse	r27, r1
    12de:	b1 93       	st	Z+, r27
    12e0:	11 92       	st	Z+, r1
    12e2:	cb 01       	movw	r24, r22
    12e4:	0c 94 15 0d 	jmp	0x1a2a	; 0x1a2a <strrev>

000012e8 <dtoa_prf>:
    12e8:	a9 e0       	ldi	r26, 0x09	; 9
    12ea:	b0 e0       	ldi	r27, 0x00	; 0
    12ec:	ea e7       	ldi	r30, 0x7A	; 122
    12ee:	f9 e0       	ldi	r31, 0x09	; 9
    12f0:	0c 94 39 0d 	jmp	0x1a72	; 0x1a72 <__prologue_saves__+0xc>
    12f4:	6a 01       	movw	r12, r20
    12f6:	12 2f       	mov	r17, r18
    12f8:	b0 2e       	mov	r11, r16
    12fa:	2b e3       	ldi	r18, 0x3B	; 59
    12fc:	20 17       	cp	r18, r16
    12fe:	20 f0       	brcs	.+8      	; 0x1308 <dtoa_prf+0x20>
    1300:	ff 24       	eor	r15, r15
    1302:	f3 94       	inc	r15
    1304:	f0 0e       	add	r15, r16
    1306:	02 c0       	rjmp	.+4      	; 0x130c <dtoa_prf+0x24>
    1308:	2c e3       	ldi	r18, 0x3C	; 60
    130a:	f2 2e       	mov	r15, r18
    130c:	0f 2d       	mov	r16, r15
    130e:	27 e0       	ldi	r18, 0x07	; 7
    1310:	ae 01       	movw	r20, r28
    1312:	4f 5f       	subi	r20, 0xFF	; 255
    1314:	5f 4f       	sbci	r21, 0xFF	; 255
    1316:	0e 94 1c 0c 	call	0x1838	; 0x1838 <__ftoa_engine>
    131a:	bc 01       	movw	r22, r24
    131c:	49 81       	ldd	r20, Y+1	; 0x01
    131e:	84 2f       	mov	r24, r20
    1320:	89 70       	andi	r24, 0x09	; 9
    1322:	81 30       	cpi	r24, 0x01	; 1
    1324:	31 f0       	breq	.+12     	; 0x1332 <dtoa_prf+0x4a>
    1326:	e1 fc       	sbrc	r14, 1
    1328:	06 c0       	rjmp	.+12     	; 0x1336 <dtoa_prf+0x4e>
    132a:	e0 fe       	sbrs	r14, 0
    132c:	06 c0       	rjmp	.+12     	; 0x133a <dtoa_prf+0x52>
    132e:	90 e2       	ldi	r25, 0x20	; 32
    1330:	05 c0       	rjmp	.+10     	; 0x133c <dtoa_prf+0x54>
    1332:	9d e2       	ldi	r25, 0x2D	; 45
    1334:	03 c0       	rjmp	.+6      	; 0x133c <dtoa_prf+0x54>
    1336:	9b e2       	ldi	r25, 0x2B	; 43
    1338:	01 c0       	rjmp	.+2      	; 0x133c <dtoa_prf+0x54>
    133a:	90 e0       	ldi	r25, 0x00	; 0
    133c:	5e 2d       	mov	r21, r14
    133e:	50 71       	andi	r21, 0x10	; 16
    1340:	43 ff       	sbrs	r20, 3
    1342:	3c c0       	rjmp	.+120    	; 0x13bc <dtoa_prf+0xd4>
    1344:	91 11       	cpse	r25, r1
    1346:	02 c0       	rjmp	.+4      	; 0x134c <dtoa_prf+0x64>
    1348:	83 e0       	ldi	r24, 0x03	; 3
    134a:	01 c0       	rjmp	.+2      	; 0x134e <dtoa_prf+0x66>
    134c:	84 e0       	ldi	r24, 0x04	; 4
    134e:	81 17       	cp	r24, r17
    1350:	18 f4       	brcc	.+6      	; 0x1358 <dtoa_prf+0x70>
    1352:	21 2f       	mov	r18, r17
    1354:	28 1b       	sub	r18, r24
    1356:	01 c0       	rjmp	.+2      	; 0x135a <dtoa_prf+0x72>
    1358:	20 e0       	ldi	r18, 0x00	; 0
    135a:	51 11       	cpse	r21, r1
    135c:	0b c0       	rjmp	.+22     	; 0x1374 <dtoa_prf+0x8c>
    135e:	f6 01       	movw	r30, r12
    1360:	82 2f       	mov	r24, r18
    1362:	30 e2       	ldi	r19, 0x20	; 32
    1364:	88 23       	and	r24, r24
    1366:	19 f0       	breq	.+6      	; 0x136e <dtoa_prf+0x86>
    1368:	31 93       	st	Z+, r19
    136a:	81 50       	subi	r24, 0x01	; 1
    136c:	fb cf       	rjmp	.-10     	; 0x1364 <dtoa_prf+0x7c>
    136e:	c2 0e       	add	r12, r18
    1370:	d1 1c       	adc	r13, r1
    1372:	20 e0       	ldi	r18, 0x00	; 0
    1374:	99 23       	and	r25, r25
    1376:	29 f0       	breq	.+10     	; 0x1382 <dtoa_prf+0x9a>
    1378:	d6 01       	movw	r26, r12
    137a:	9c 93       	st	X, r25
    137c:	f6 01       	movw	r30, r12
    137e:	31 96       	adiw	r30, 0x01	; 1
    1380:	6f 01       	movw	r12, r30
    1382:	c6 01       	movw	r24, r12
    1384:	03 96       	adiw	r24, 0x03	; 3
    1386:	e2 fe       	sbrs	r14, 2
    1388:	0a c0       	rjmp	.+20     	; 0x139e <dtoa_prf+0xb6>
    138a:	3e e4       	ldi	r19, 0x4E	; 78
    138c:	d6 01       	movw	r26, r12
    138e:	3c 93       	st	X, r19
    1390:	41 e4       	ldi	r20, 0x41	; 65
    1392:	11 96       	adiw	r26, 0x01	; 1
    1394:	4c 93       	st	X, r20
    1396:	11 97       	sbiw	r26, 0x01	; 1
    1398:	12 96       	adiw	r26, 0x02	; 2
    139a:	3c 93       	st	X, r19
    139c:	06 c0       	rjmp	.+12     	; 0x13aa <dtoa_prf+0xc2>
    139e:	3e e6       	ldi	r19, 0x6E	; 110
    13a0:	f6 01       	movw	r30, r12
    13a2:	30 83       	st	Z, r19
    13a4:	41 e6       	ldi	r20, 0x61	; 97
    13a6:	41 83       	std	Z+1, r20	; 0x01
    13a8:	32 83       	std	Z+2, r19	; 0x02
    13aa:	fc 01       	movw	r30, r24
    13ac:	32 2f       	mov	r19, r18
    13ae:	40 e2       	ldi	r20, 0x20	; 32
    13b0:	33 23       	and	r19, r19
    13b2:	09 f4       	brne	.+2      	; 0x13b6 <dtoa_prf+0xce>
    13b4:	42 c0       	rjmp	.+132    	; 0x143a <dtoa_prf+0x152>
    13b6:	41 93       	st	Z+, r20
    13b8:	31 50       	subi	r19, 0x01	; 1
    13ba:	fa cf       	rjmp	.-12     	; 0x13b0 <dtoa_prf+0xc8>
    13bc:	42 ff       	sbrs	r20, 2
    13be:	44 c0       	rjmp	.+136    	; 0x1448 <dtoa_prf+0x160>
    13c0:	91 11       	cpse	r25, r1
    13c2:	02 c0       	rjmp	.+4      	; 0x13c8 <dtoa_prf+0xe0>
    13c4:	83 e0       	ldi	r24, 0x03	; 3
    13c6:	01 c0       	rjmp	.+2      	; 0x13ca <dtoa_prf+0xe2>
    13c8:	84 e0       	ldi	r24, 0x04	; 4
    13ca:	81 17       	cp	r24, r17
    13cc:	18 f4       	brcc	.+6      	; 0x13d4 <dtoa_prf+0xec>
    13ce:	21 2f       	mov	r18, r17
    13d0:	28 1b       	sub	r18, r24
    13d2:	01 c0       	rjmp	.+2      	; 0x13d6 <dtoa_prf+0xee>
    13d4:	20 e0       	ldi	r18, 0x00	; 0
    13d6:	51 11       	cpse	r21, r1
    13d8:	0b c0       	rjmp	.+22     	; 0x13f0 <dtoa_prf+0x108>
    13da:	f6 01       	movw	r30, r12
    13dc:	82 2f       	mov	r24, r18
    13de:	30 e2       	ldi	r19, 0x20	; 32
    13e0:	88 23       	and	r24, r24
    13e2:	19 f0       	breq	.+6      	; 0x13ea <dtoa_prf+0x102>
    13e4:	31 93       	st	Z+, r19
    13e6:	81 50       	subi	r24, 0x01	; 1
    13e8:	fb cf       	rjmp	.-10     	; 0x13e0 <dtoa_prf+0xf8>
    13ea:	c2 0e       	add	r12, r18
    13ec:	d1 1c       	adc	r13, r1
    13ee:	20 e0       	ldi	r18, 0x00	; 0
    13f0:	99 23       	and	r25, r25
    13f2:	29 f0       	breq	.+10     	; 0x13fe <dtoa_prf+0x116>
    13f4:	d6 01       	movw	r26, r12
    13f6:	9c 93       	st	X, r25
    13f8:	f6 01       	movw	r30, r12
    13fa:	31 96       	adiw	r30, 0x01	; 1
    13fc:	6f 01       	movw	r12, r30
    13fe:	c6 01       	movw	r24, r12
    1400:	03 96       	adiw	r24, 0x03	; 3
    1402:	e2 fe       	sbrs	r14, 2
    1404:	0b c0       	rjmp	.+22     	; 0x141c <dtoa_prf+0x134>
    1406:	39 e4       	ldi	r19, 0x49	; 73
    1408:	d6 01       	movw	r26, r12
    140a:	3c 93       	st	X, r19
    140c:	3e e4       	ldi	r19, 0x4E	; 78
    140e:	11 96       	adiw	r26, 0x01	; 1
    1410:	3c 93       	st	X, r19
    1412:	11 97       	sbiw	r26, 0x01	; 1
    1414:	36 e4       	ldi	r19, 0x46	; 70
    1416:	12 96       	adiw	r26, 0x02	; 2
    1418:	3c 93       	st	X, r19
    141a:	07 c0       	rjmp	.+14     	; 0x142a <dtoa_prf+0x142>
    141c:	39 e6       	ldi	r19, 0x69	; 105
    141e:	f6 01       	movw	r30, r12
    1420:	30 83       	st	Z, r19
    1422:	3e e6       	ldi	r19, 0x6E	; 110
    1424:	31 83       	std	Z+1, r19	; 0x01
    1426:	36 e6       	ldi	r19, 0x66	; 102
    1428:	32 83       	std	Z+2, r19	; 0x02
    142a:	fc 01       	movw	r30, r24
    142c:	32 2f       	mov	r19, r18
    142e:	40 e2       	ldi	r20, 0x20	; 32
    1430:	33 23       	and	r19, r19
    1432:	19 f0       	breq	.+6      	; 0x143a <dtoa_prf+0x152>
    1434:	41 93       	st	Z+, r20
    1436:	31 50       	subi	r19, 0x01	; 1
    1438:	fb cf       	rjmp	.-10     	; 0x1430 <dtoa_prf+0x148>
    143a:	fc 01       	movw	r30, r24
    143c:	e2 0f       	add	r30, r18
    143e:	f1 1d       	adc	r31, r1
    1440:	10 82       	st	Z, r1
    1442:	8e ef       	ldi	r24, 0xFE	; 254
    1444:	9f ef       	ldi	r25, 0xFF	; 255
    1446:	a6 c0       	rjmp	.+332    	; 0x1594 <dtoa_prf+0x2ac>
    1448:	21 e0       	ldi	r18, 0x01	; 1
    144a:	30 e0       	ldi	r19, 0x00	; 0
    144c:	91 11       	cpse	r25, r1
    144e:	02 c0       	rjmp	.+4      	; 0x1454 <dtoa_prf+0x16c>
    1450:	20 e0       	ldi	r18, 0x00	; 0
    1452:	30 e0       	ldi	r19, 0x00	; 0
    1454:	16 16       	cp	r1, r22
    1456:	17 06       	cpc	r1, r23
    1458:	1c f4       	brge	.+6      	; 0x1460 <dtoa_prf+0x178>
    145a:	fb 01       	movw	r30, r22
    145c:	31 96       	adiw	r30, 0x01	; 1
    145e:	02 c0       	rjmp	.+4      	; 0x1464 <dtoa_prf+0x17c>
    1460:	e1 e0       	ldi	r30, 0x01	; 1
    1462:	f0 e0       	ldi	r31, 0x00	; 0
    1464:	2e 0f       	add	r18, r30
    1466:	3f 1f       	adc	r19, r31
    1468:	bb 20       	and	r11, r11
    146a:	21 f0       	breq	.+8      	; 0x1474 <dtoa_prf+0x18c>
    146c:	eb 2d       	mov	r30, r11
    146e:	f0 e0       	ldi	r31, 0x00	; 0
    1470:	31 96       	adiw	r30, 0x01	; 1
    1472:	02 c0       	rjmp	.+4      	; 0x1478 <dtoa_prf+0x190>
    1474:	e0 e0       	ldi	r30, 0x00	; 0
    1476:	f0 e0       	ldi	r31, 0x00	; 0
    1478:	2e 0f       	add	r18, r30
    147a:	3f 1f       	adc	r19, r31
    147c:	e1 2f       	mov	r30, r17
    147e:	f0 e0       	ldi	r31, 0x00	; 0
    1480:	2e 17       	cp	r18, r30
    1482:	3f 07       	cpc	r19, r31
    1484:	1c f4       	brge	.+6      	; 0x148c <dtoa_prf+0x1a4>
    1486:	12 1b       	sub	r17, r18
    1488:	21 2f       	mov	r18, r17
    148a:	01 c0       	rjmp	.+2      	; 0x148e <dtoa_prf+0x1a6>
    148c:	20 e0       	ldi	r18, 0x00	; 0
    148e:	8e 2d       	mov	r24, r14
    1490:	88 71       	andi	r24, 0x18	; 24
    1492:	59 f4       	brne	.+22     	; 0x14aa <dtoa_prf+0x1c2>
    1494:	f6 01       	movw	r30, r12
    1496:	82 2f       	mov	r24, r18
    1498:	30 e2       	ldi	r19, 0x20	; 32
    149a:	88 23       	and	r24, r24
    149c:	19 f0       	breq	.+6      	; 0x14a4 <dtoa_prf+0x1bc>
    149e:	31 93       	st	Z+, r19
    14a0:	81 50       	subi	r24, 0x01	; 1
    14a2:	fb cf       	rjmp	.-10     	; 0x149a <dtoa_prf+0x1b2>
    14a4:	c2 0e       	add	r12, r18
    14a6:	d1 1c       	adc	r13, r1
    14a8:	20 e0       	ldi	r18, 0x00	; 0
    14aa:	99 23       	and	r25, r25
    14ac:	29 f0       	breq	.+10     	; 0x14b8 <dtoa_prf+0x1d0>
    14ae:	d6 01       	movw	r26, r12
    14b0:	9c 93       	st	X, r25
    14b2:	f6 01       	movw	r30, r12
    14b4:	31 96       	adiw	r30, 0x01	; 1
    14b6:	6f 01       	movw	r12, r30
    14b8:	51 11       	cpse	r21, r1
    14ba:	0b c0       	rjmp	.+22     	; 0x14d2 <dtoa_prf+0x1ea>
    14bc:	f6 01       	movw	r30, r12
    14be:	82 2f       	mov	r24, r18
    14c0:	90 e3       	ldi	r25, 0x30	; 48
    14c2:	88 23       	and	r24, r24
    14c4:	19 f0       	breq	.+6      	; 0x14cc <dtoa_prf+0x1e4>
    14c6:	91 93       	st	Z+, r25
    14c8:	81 50       	subi	r24, 0x01	; 1
    14ca:	fb cf       	rjmp	.-10     	; 0x14c2 <dtoa_prf+0x1da>
    14cc:	c2 0e       	add	r12, r18
    14ce:	d1 1c       	adc	r13, r1
    14d0:	20 e0       	ldi	r18, 0x00	; 0
    14d2:	0f 2d       	mov	r16, r15
    14d4:	06 0f       	add	r16, r22
    14d6:	9a 81       	ldd	r25, Y+2	; 0x02
    14d8:	34 2f       	mov	r19, r20
    14da:	30 71       	andi	r19, 0x10	; 16
    14dc:	44 ff       	sbrs	r20, 4
    14de:	03 c0       	rjmp	.+6      	; 0x14e6 <dtoa_prf+0x1fe>
    14e0:	91 33       	cpi	r25, 0x31	; 49
    14e2:	09 f4       	brne	.+2      	; 0x14e6 <dtoa_prf+0x1fe>
    14e4:	01 50       	subi	r16, 0x01	; 1
    14e6:	10 16       	cp	r1, r16
    14e8:	24 f4       	brge	.+8      	; 0x14f2 <dtoa_prf+0x20a>
    14ea:	09 30       	cpi	r16, 0x09	; 9
    14ec:	18 f0       	brcs	.+6      	; 0x14f4 <dtoa_prf+0x20c>
    14ee:	08 e0       	ldi	r16, 0x08	; 8
    14f0:	01 c0       	rjmp	.+2      	; 0x14f4 <dtoa_prf+0x20c>
    14f2:	01 e0       	ldi	r16, 0x01	; 1
    14f4:	ab 01       	movw	r20, r22
    14f6:	77 ff       	sbrs	r23, 7
    14f8:	02 c0       	rjmp	.+4      	; 0x14fe <dtoa_prf+0x216>
    14fa:	40 e0       	ldi	r20, 0x00	; 0
    14fc:	50 e0       	ldi	r21, 0x00	; 0
    14fe:	fb 01       	movw	r30, r22
    1500:	e4 1b       	sub	r30, r20
    1502:	f5 0b       	sbc	r31, r21
    1504:	a1 e0       	ldi	r26, 0x01	; 1
    1506:	b0 e0       	ldi	r27, 0x00	; 0
    1508:	ac 0f       	add	r26, r28
    150a:	bd 1f       	adc	r27, r29
    150c:	ea 0f       	add	r30, r26
    150e:	fb 1f       	adc	r31, r27
    1510:	8e e2       	ldi	r24, 0x2E	; 46
    1512:	a8 2e       	mov	r10, r24
    1514:	4b 01       	movw	r8, r22
    1516:	80 1a       	sub	r8, r16
    1518:	91 08       	sbc	r9, r1
    151a:	0b 2d       	mov	r16, r11
    151c:	10 e0       	ldi	r17, 0x00	; 0
    151e:	11 95       	neg	r17
    1520:	01 95       	neg	r16
    1522:	11 09       	sbc	r17, r1
    1524:	4f 3f       	cpi	r20, 0xFF	; 255
    1526:	bf ef       	ldi	r27, 0xFF	; 255
    1528:	5b 07       	cpc	r21, r27
    152a:	21 f4       	brne	.+8      	; 0x1534 <dtoa_prf+0x24c>
    152c:	d6 01       	movw	r26, r12
    152e:	ac 92       	st	X, r10
    1530:	11 96       	adiw	r26, 0x01	; 1
    1532:	6d 01       	movw	r12, r26
    1534:	64 17       	cp	r22, r20
    1536:	75 07       	cpc	r23, r21
    1538:	2c f0       	brlt	.+10     	; 0x1544 <dtoa_prf+0x25c>
    153a:	84 16       	cp	r8, r20
    153c:	95 06       	cpc	r9, r21
    153e:	14 f4       	brge	.+4      	; 0x1544 <dtoa_prf+0x25c>
    1540:	81 81       	ldd	r24, Z+1	; 0x01
    1542:	01 c0       	rjmp	.+2      	; 0x1546 <dtoa_prf+0x25e>
    1544:	80 e3       	ldi	r24, 0x30	; 48
    1546:	41 50       	subi	r20, 0x01	; 1
    1548:	51 09       	sbc	r21, r1
    154a:	31 96       	adiw	r30, 0x01	; 1
    154c:	d6 01       	movw	r26, r12
    154e:	11 96       	adiw	r26, 0x01	; 1
    1550:	7d 01       	movw	r14, r26
    1552:	40 17       	cp	r20, r16
    1554:	51 07       	cpc	r21, r17
    1556:	24 f0       	brlt	.+8      	; 0x1560 <dtoa_prf+0x278>
    1558:	d6 01       	movw	r26, r12
    155a:	8c 93       	st	X, r24
    155c:	67 01       	movw	r12, r14
    155e:	e2 cf       	rjmp	.-60     	; 0x1524 <dtoa_prf+0x23c>
    1560:	64 17       	cp	r22, r20
    1562:	75 07       	cpc	r23, r21
    1564:	39 f4       	brne	.+14     	; 0x1574 <dtoa_prf+0x28c>
    1566:	96 33       	cpi	r25, 0x36	; 54
    1568:	20 f4       	brcc	.+8      	; 0x1572 <dtoa_prf+0x28a>
    156a:	95 33       	cpi	r25, 0x35	; 53
    156c:	19 f4       	brne	.+6      	; 0x1574 <dtoa_prf+0x28c>
    156e:	31 11       	cpse	r19, r1
    1570:	01 c0       	rjmp	.+2      	; 0x1574 <dtoa_prf+0x28c>
    1572:	81 e3       	ldi	r24, 0x31	; 49
    1574:	f6 01       	movw	r30, r12
    1576:	80 83       	st	Z, r24
    1578:	f7 01       	movw	r30, r14
    157a:	82 2f       	mov	r24, r18
    157c:	90 e2       	ldi	r25, 0x20	; 32
    157e:	88 23       	and	r24, r24
    1580:	19 f0       	breq	.+6      	; 0x1588 <dtoa_prf+0x2a0>
    1582:	91 93       	st	Z+, r25
    1584:	81 50       	subi	r24, 0x01	; 1
    1586:	fb cf       	rjmp	.-10     	; 0x157e <dtoa_prf+0x296>
    1588:	f7 01       	movw	r30, r14
    158a:	e2 0f       	add	r30, r18
    158c:	f1 1d       	adc	r31, r1
    158e:	10 82       	st	Z, r1
    1590:	80 e0       	ldi	r24, 0x00	; 0
    1592:	90 e0       	ldi	r25, 0x00	; 0
    1594:	29 96       	adiw	r28, 0x09	; 9
    1596:	ec e0       	ldi	r30, 0x0C	; 12
    1598:	0c 94 55 0d 	jmp	0x1aaa	; 0x1aaa <__epilogue_restores__+0xc>

0000159c <strtod>:
    159c:	a0 e0       	ldi	r26, 0x00	; 0
    159e:	b0 e0       	ldi	r27, 0x00	; 0
    15a0:	e4 ed       	ldi	r30, 0xD4	; 212
    15a2:	fa e0       	ldi	r31, 0x0A	; 10
    15a4:	0c 94 39 0d 	jmp	0x1a72	; 0x1a72 <__prologue_saves__+0xc>
    15a8:	ec 01       	movw	r28, r24
    15aa:	6b 01       	movw	r12, r22
    15ac:	61 15       	cp	r22, r1
    15ae:	71 05       	cpc	r23, r1
    15b0:	19 f0       	breq	.+6      	; 0x15b8 <strtod+0x1c>
    15b2:	fb 01       	movw	r30, r22
    15b4:	91 83       	std	Z+1, r25	; 0x01
    15b6:	80 83       	st	Z, r24
    15b8:	7e 01       	movw	r14, r28
    15ba:	ff ef       	ldi	r31, 0xFF	; 255
    15bc:	ef 1a       	sub	r14, r31
    15be:	ff 0a       	sbc	r15, r31
    15c0:	08 81       	ld	r16, Y
    15c2:	80 2f       	mov	r24, r16
    15c4:	90 e0       	ldi	r25, 0x00	; 0
    15c6:	0e 94 f4 0c 	call	0x19e8	; 0x19e8 <isspace>
    15ca:	89 2b       	or	r24, r25
    15cc:	11 f0       	breq	.+4      	; 0x15d2 <strtod+0x36>
    15ce:	e7 01       	movw	r28, r14
    15d0:	f3 cf       	rjmp	.-26     	; 0x15b8 <strtod+0x1c>
    15d2:	0d 32       	cpi	r16, 0x2D	; 45
    15d4:	39 f4       	brne	.+14     	; 0x15e4 <strtod+0x48>
    15d6:	7e 01       	movw	r14, r28
    15d8:	82 e0       	ldi	r24, 0x02	; 2
    15da:	e8 0e       	add	r14, r24
    15dc:	f1 1c       	adc	r15, r1
    15de:	09 81       	ldd	r16, Y+1	; 0x01
    15e0:	11 e0       	ldi	r17, 0x01	; 1
    15e2:	08 c0       	rjmp	.+16     	; 0x15f4 <strtod+0x58>
    15e4:	0b 32       	cpi	r16, 0x2B	; 43
    15e6:	29 f4       	brne	.+10     	; 0x15f2 <strtod+0x56>
    15e8:	7e 01       	movw	r14, r28
    15ea:	92 e0       	ldi	r25, 0x02	; 2
    15ec:	e9 0e       	add	r14, r25
    15ee:	f1 1c       	adc	r15, r1
    15f0:	09 81       	ldd	r16, Y+1	; 0x01
    15f2:	10 e0       	ldi	r17, 0x00	; 0
    15f4:	e7 01       	movw	r28, r14
    15f6:	21 97       	sbiw	r28, 0x01	; 1
    15f8:	43 e0       	ldi	r20, 0x03	; 3
    15fa:	50 e0       	ldi	r21, 0x00	; 0
    15fc:	6c e5       	ldi	r22, 0x5C	; 92
    15fe:	70 e0       	ldi	r23, 0x00	; 0
    1600:	ce 01       	movw	r24, r28
    1602:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <strncasecmp_P>
    1606:	89 2b       	or	r24, r25
    1608:	c1 f4       	brne	.+48     	; 0x163a <strtod+0x9e>
    160a:	23 96       	adiw	r28, 0x03	; 3
    160c:	45 e0       	ldi	r20, 0x05	; 5
    160e:	50 e0       	ldi	r21, 0x00	; 0
    1610:	67 e5       	ldi	r22, 0x57	; 87
    1612:	70 e0       	ldi	r23, 0x00	; 0
    1614:	ce 01       	movw	r24, r28
    1616:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <strncasecmp_P>
    161a:	89 2b       	or	r24, r25
    161c:	09 f4       	brne	.+2      	; 0x1620 <strtod+0x84>
    161e:	25 96       	adiw	r28, 0x05	; 5
    1620:	c1 14       	cp	r12, r1
    1622:	d1 04       	cpc	r13, r1
    1624:	19 f0       	breq	.+6      	; 0x162c <strtod+0x90>
    1626:	f6 01       	movw	r30, r12
    1628:	d1 83       	std	Z+1, r29	; 0x01
    162a:	c0 83       	st	Z, r28
    162c:	11 11       	cpse	r17, r1
    162e:	f6 c0       	rjmp	.+492    	; 0x181c <strtod+0x280>
    1630:	60 e0       	ldi	r22, 0x00	; 0
    1632:	70 e0       	ldi	r23, 0x00	; 0
    1634:	80 e8       	ldi	r24, 0x80	; 128
    1636:	9f e7       	ldi	r25, 0x7F	; 127
    1638:	fa c0       	rjmp	.+500    	; 0x182e <strtod+0x292>
    163a:	43 e0       	ldi	r20, 0x03	; 3
    163c:	50 e0       	ldi	r21, 0x00	; 0
    163e:	64 e5       	ldi	r22, 0x54	; 84
    1640:	70 e0       	ldi	r23, 0x00	; 0
    1642:	ce 01       	movw	r24, r28
    1644:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <strncasecmp_P>
    1648:	89 2b       	or	r24, r25
    164a:	59 f4       	brne	.+22     	; 0x1662 <strtod+0xc6>
    164c:	c1 14       	cp	r12, r1
    164e:	d1 04       	cpc	r13, r1
    1650:	09 f4       	brne	.+2      	; 0x1654 <strtod+0xb8>
    1652:	e9 c0       	rjmp	.+466    	; 0x1826 <strtod+0x28a>
    1654:	f2 e0       	ldi	r31, 0x02	; 2
    1656:	ef 0e       	add	r14, r31
    1658:	f1 1c       	adc	r15, r1
    165a:	f6 01       	movw	r30, r12
    165c:	f1 82       	std	Z+1, r15	; 0x01
    165e:	e0 82       	st	Z, r14
    1660:	e2 c0       	rjmp	.+452    	; 0x1826 <strtod+0x28a>
    1662:	20 e0       	ldi	r18, 0x00	; 0
    1664:	30 e0       	ldi	r19, 0x00	; 0
    1666:	a9 01       	movw	r20, r18
    1668:	c0 e0       	ldi	r28, 0x00	; 0
    166a:	d0 e0       	ldi	r29, 0x00	; 0
    166c:	f7 01       	movw	r30, r14
    166e:	80 ed       	ldi	r24, 0xD0	; 208
    1670:	a8 2e       	mov	r10, r24
    1672:	a0 0e       	add	r10, r16
    1674:	89 e0       	ldi	r24, 0x09	; 9
    1676:	8a 15       	cp	r24, r10
    1678:	30 f1       	brcs	.+76     	; 0x16c6 <strtod+0x12a>
    167a:	91 2f       	mov	r25, r17
    167c:	92 60       	ori	r25, 0x02	; 2
    167e:	b9 2e       	mov	r11, r25
    1680:	81 2f       	mov	r24, r17
    1682:	88 70       	andi	r24, 0x08	; 8
    1684:	12 ff       	sbrs	r17, 2
    1686:	04 c0       	rjmp	.+8      	; 0x1690 <strtod+0xf4>
    1688:	81 11       	cpse	r24, r1
    168a:	24 c0       	rjmp	.+72     	; 0x16d4 <strtod+0x138>
    168c:	21 96       	adiw	r28, 0x01	; 1
    168e:	22 c0       	rjmp	.+68     	; 0x16d4 <strtod+0x138>
    1690:	81 11       	cpse	r24, r1
    1692:	21 97       	sbiw	r28, 0x01	; 1
    1694:	a5 e0       	ldi	r26, 0x05	; 5
    1696:	b0 e0       	ldi	r27, 0x00	; 0
    1698:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <__muluhisi3>
    169c:	dc 01       	movw	r26, r24
    169e:	cb 01       	movw	r24, r22
    16a0:	88 0f       	add	r24, r24
    16a2:	99 1f       	adc	r25, r25
    16a4:	aa 1f       	adc	r26, r26
    16a6:	bb 1f       	adc	r27, r27
    16a8:	9c 01       	movw	r18, r24
    16aa:	ad 01       	movw	r20, r26
    16ac:	2a 0d       	add	r18, r10
    16ae:	31 1d       	adc	r19, r1
    16b0:	41 1d       	adc	r20, r1
    16b2:	51 1d       	adc	r21, r1
    16b4:	28 39       	cpi	r18, 0x98	; 152
    16b6:	89 e9       	ldi	r24, 0x99	; 153
    16b8:	38 07       	cpc	r19, r24
    16ba:	48 07       	cpc	r20, r24
    16bc:	89 e1       	ldi	r24, 0x19	; 25
    16be:	58 07       	cpc	r21, r24
    16c0:	48 f0       	brcs	.+18     	; 0x16d4 <strtod+0x138>
    16c2:	16 60       	ori	r17, 0x06	; 6
    16c4:	06 c0       	rjmp	.+12     	; 0x16d2 <strtod+0x136>
    16c6:	9e ef       	ldi	r25, 0xFE	; 254
    16c8:	a9 12       	cpse	r10, r25
    16ca:	0a c0       	rjmp	.+20     	; 0x16e0 <strtod+0x144>
    16cc:	13 fd       	sbrc	r17, 3
    16ce:	40 c0       	rjmp	.+128    	; 0x1750 <strtod+0x1b4>
    16d0:	18 60       	ori	r17, 0x08	; 8
    16d2:	b1 2e       	mov	r11, r17
    16d4:	8f ef       	ldi	r24, 0xFF	; 255
    16d6:	e8 1a       	sub	r14, r24
    16d8:	f8 0a       	sbc	r15, r24
    16da:	00 81       	ld	r16, Z
    16dc:	1b 2d       	mov	r17, r11
    16de:	c6 cf       	rjmp	.-116    	; 0x166c <strtod+0xd0>
    16e0:	80 2f       	mov	r24, r16
    16e2:	8f 7d       	andi	r24, 0xDF	; 223
    16e4:	85 34       	cpi	r24, 0x45	; 69
    16e6:	a1 f5       	brne	.+104    	; 0x1750 <strtod+0x1b4>
    16e8:	80 81       	ld	r24, Z
    16ea:	8d 32       	cpi	r24, 0x2D	; 45
    16ec:	11 f4       	brne	.+4      	; 0x16f2 <strtod+0x156>
    16ee:	10 61       	ori	r17, 0x10	; 16
    16f0:	06 c0       	rjmp	.+12     	; 0x16fe <strtod+0x162>
    16f2:	8b 32       	cpi	r24, 0x2B	; 43
    16f4:	21 f0       	breq	.+8      	; 0x16fe <strtod+0x162>
    16f6:	31 96       	adiw	r30, 0x01	; 1
    16f8:	61 e0       	ldi	r22, 0x01	; 1
    16fa:	70 e0       	ldi	r23, 0x00	; 0
    16fc:	04 c0       	rjmp	.+8      	; 0x1706 <strtod+0x16a>
    16fe:	81 81       	ldd	r24, Z+1	; 0x01
    1700:	32 96       	adiw	r30, 0x02	; 2
    1702:	62 e0       	ldi	r22, 0x02	; 2
    1704:	70 e0       	ldi	r23, 0x00	; 0
    1706:	80 53       	subi	r24, 0x30	; 48
    1708:	8a 30       	cpi	r24, 0x0A	; 10
    170a:	18 f0       	brcs	.+6      	; 0x1712 <strtod+0x176>
    170c:	e6 1b       	sub	r30, r22
    170e:	f7 0b       	sbc	r31, r23
    1710:	1f c0       	rjmp	.+62     	; 0x1750 <strtod+0x1b4>
    1712:	60 e0       	ldi	r22, 0x00	; 0
    1714:	70 e0       	ldi	r23, 0x00	; 0
    1716:	60 38       	cpi	r22, 0x80	; 128
    1718:	9c e0       	ldi	r25, 0x0C	; 12
    171a:	79 07       	cpc	r23, r25
    171c:	5c f4       	brge	.+22     	; 0x1734 <strtod+0x198>
    171e:	db 01       	movw	r26, r22
    1720:	aa 0f       	add	r26, r26
    1722:	bb 1f       	adc	r27, r27
    1724:	aa 0f       	add	r26, r26
    1726:	bb 1f       	adc	r27, r27
    1728:	6a 0f       	add	r22, r26
    172a:	7b 1f       	adc	r23, r27
    172c:	66 0f       	add	r22, r22
    172e:	77 1f       	adc	r23, r23
    1730:	68 0f       	add	r22, r24
    1732:	71 1d       	adc	r23, r1
    1734:	31 96       	adiw	r30, 0x01	; 1
    1736:	df 01       	movw	r26, r30
    1738:	11 97       	sbiw	r26, 0x01	; 1
    173a:	8c 91       	ld	r24, X
    173c:	80 53       	subi	r24, 0x30	; 48
    173e:	8a 30       	cpi	r24, 0x0A	; 10
    1740:	50 f3       	brcs	.-44     	; 0x1716 <strtod+0x17a>
    1742:	14 ff       	sbrs	r17, 4
    1744:	03 c0       	rjmp	.+6      	; 0x174c <strtod+0x1b0>
    1746:	71 95       	neg	r23
    1748:	61 95       	neg	r22
    174a:	71 09       	sbc	r23, r1
    174c:	c6 0f       	add	r28, r22
    174e:	d7 1f       	adc	r29, r23
    1750:	11 ff       	sbrs	r17, 1
    1752:	08 c0       	rjmp	.+16     	; 0x1764 <strtod+0x1c8>
    1754:	c1 14       	cp	r12, r1
    1756:	d1 04       	cpc	r13, r1
    1758:	29 f0       	breq	.+10     	; 0x1764 <strtod+0x1c8>
    175a:	cf 01       	movw	r24, r30
    175c:	01 97       	sbiw	r24, 0x01	; 1
    175e:	f6 01       	movw	r30, r12
    1760:	91 83       	std	Z+1, r25	; 0x01
    1762:	80 83       	st	Z, r24
    1764:	ca 01       	movw	r24, r20
    1766:	b9 01       	movw	r22, r18
    1768:	0e 94 07 08 	call	0x100e	; 0x100e <__floatunsisf>
    176c:	21 2f       	mov	r18, r17
    176e:	23 70       	andi	r18, 0x03	; 3
    1770:	23 30       	cpi	r18, 0x03	; 3
    1772:	19 f0       	breq	.+6      	; 0x177a <strtod+0x1de>
    1774:	4b 01       	movw	r8, r22
    1776:	5c 01       	movw	r10, r24
    1778:	06 c0       	rjmp	.+12     	; 0x1786 <strtod+0x1ea>
    177a:	4b 01       	movw	r8, r22
    177c:	5c 01       	movw	r10, r24
    177e:	b7 fa       	bst	r11, 7
    1780:	b0 94       	com	r11
    1782:	b7 f8       	bld	r11, 7
    1784:	b0 94       	com	r11
    1786:	20 e0       	ldi	r18, 0x00	; 0
    1788:	30 e0       	ldi	r19, 0x00	; 0
    178a:	a9 01       	movw	r20, r18
    178c:	c5 01       	movw	r24, r10
    178e:	b4 01       	movw	r22, r8
    1790:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <__cmpsf2>
    1794:	88 23       	and	r24, r24
    1796:	09 f4       	brne	.+2      	; 0x179a <strtod+0x1fe>
    1798:	3e c0       	rjmp	.+124    	; 0x1816 <strtod+0x27a>
    179a:	d7 ff       	sbrs	r29, 7
    179c:	06 c0       	rjmp	.+12     	; 0x17aa <strtod+0x20e>
    179e:	d1 95       	neg	r29
    17a0:	c1 95       	neg	r28
    17a2:	d1 09       	sbc	r29, r1
    17a4:	03 e7       	ldi	r16, 0x73	; 115
    17a6:	10 e0       	ldi	r17, 0x00	; 0
    17a8:	02 c0       	rjmp	.+4      	; 0x17ae <strtod+0x212>
    17aa:	0b e8       	ldi	r16, 0x8B	; 139
    17ac:	10 e0       	ldi	r17, 0x00	; 0
    17ae:	68 01       	movw	r12, r16
    17b0:	f8 e1       	ldi	r31, 0x18	; 24
    17b2:	cf 1a       	sub	r12, r31
    17b4:	d1 08       	sbc	r13, r1
    17b6:	90 e2       	ldi	r25, 0x20	; 32
    17b8:	e9 2e       	mov	r14, r25
    17ba:	f1 2c       	mov	r15, r1
    17bc:	ce 15       	cp	r28, r14
    17be:	df 05       	cpc	r29, r15
    17c0:	74 f0       	brlt	.+28     	; 0x17de <strtod+0x242>
    17c2:	f8 01       	movw	r30, r16
    17c4:	25 91       	lpm	r18, Z+
    17c6:	35 91       	lpm	r19, Z+
    17c8:	45 91       	lpm	r20, Z+
    17ca:	54 91       	lpm	r21, Z
    17cc:	c5 01       	movw	r24, r10
    17ce:	b4 01       	movw	r22, r8
    17d0:	0e 94 be 08 	call	0x117c	; 0x117c <__mulsf3>
    17d4:	4b 01       	movw	r8, r22
    17d6:	5c 01       	movw	r10, r24
    17d8:	ce 19       	sub	r28, r14
    17da:	df 09       	sbc	r29, r15
    17dc:	ef cf       	rjmp	.-34     	; 0x17bc <strtod+0x220>
    17de:	04 50       	subi	r16, 0x04	; 4
    17e0:	11 09       	sbc	r17, r1
    17e2:	f5 94       	asr	r15
    17e4:	e7 94       	ror	r14
    17e6:	0c 15       	cp	r16, r12
    17e8:	1d 05       	cpc	r17, r13
    17ea:	41 f7       	brne	.-48     	; 0x17bc <strtod+0x220>
    17ec:	8a 2d       	mov	r24, r10
    17ee:	88 0f       	add	r24, r24
    17f0:	8b 2d       	mov	r24, r11
    17f2:	88 1f       	adc	r24, r24
    17f4:	8f 3f       	cpi	r24, 0xFF	; 255
    17f6:	49 f0       	breq	.+18     	; 0x180a <strtod+0x26e>
    17f8:	20 e0       	ldi	r18, 0x00	; 0
    17fa:	30 e0       	ldi	r19, 0x00	; 0
    17fc:	a9 01       	movw	r20, r18
    17fe:	c5 01       	movw	r24, r10
    1800:	b4 01       	movw	r22, r8
    1802:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <__cmpsf2>
    1806:	81 11       	cpse	r24, r1
    1808:	06 c0       	rjmp	.+12     	; 0x1816 <strtod+0x27a>
    180a:	82 e2       	ldi	r24, 0x22	; 34
    180c:	90 e0       	ldi	r25, 0x00	; 0
    180e:	90 93 dd 01 	sts	0x01DD, r25	; 0x8001dd <errno+0x1>
    1812:	80 93 dc 01 	sts	0x01DC, r24	; 0x8001dc <errno>
    1816:	c5 01       	movw	r24, r10
    1818:	b4 01       	movw	r22, r8
    181a:	09 c0       	rjmp	.+18     	; 0x182e <strtod+0x292>
    181c:	60 e0       	ldi	r22, 0x00	; 0
    181e:	70 e0       	ldi	r23, 0x00	; 0
    1820:	80 e8       	ldi	r24, 0x80	; 128
    1822:	9f ef       	ldi	r25, 0xFF	; 255
    1824:	04 c0       	rjmp	.+8      	; 0x182e <strtod+0x292>
    1826:	60 e0       	ldi	r22, 0x00	; 0
    1828:	70 e0       	ldi	r23, 0x00	; 0
    182a:	80 ec       	ldi	r24, 0xC0	; 192
    182c:	9f e7       	ldi	r25, 0x7F	; 127
    182e:	cd b7       	in	r28, 0x3d	; 61
    1830:	de b7       	in	r29, 0x3e	; 62
    1832:	ec e0       	ldi	r30, 0x0C	; 12
    1834:	0c 94 55 0d 	jmp	0x1aaa	; 0x1aaa <__epilogue_restores__+0xc>

00001838 <__ftoa_engine>:
    1838:	28 30       	cpi	r18, 0x08	; 8
    183a:	08 f0       	brcs	.+2      	; 0x183e <__ftoa_engine+0x6>
    183c:	27 e0       	ldi	r18, 0x07	; 7
    183e:	33 27       	eor	r19, r19
    1840:	da 01       	movw	r26, r20
    1842:	99 0f       	add	r25, r25
    1844:	31 1d       	adc	r19, r1
    1846:	87 fd       	sbrc	r24, 7
    1848:	91 60       	ori	r25, 0x01	; 1
    184a:	00 96       	adiw	r24, 0x00	; 0
    184c:	61 05       	cpc	r22, r1
    184e:	71 05       	cpc	r23, r1
    1850:	39 f4       	brne	.+14     	; 0x1860 <__ftoa_engine+0x28>
    1852:	32 60       	ori	r19, 0x02	; 2
    1854:	2e 5f       	subi	r18, 0xFE	; 254
    1856:	3d 93       	st	X+, r19
    1858:	30 e3       	ldi	r19, 0x30	; 48
    185a:	2a 95       	dec	r18
    185c:	e1 f7       	brne	.-8      	; 0x1856 <__ftoa_engine+0x1e>
    185e:	08 95       	ret
    1860:	9f 3f       	cpi	r25, 0xFF	; 255
    1862:	30 f0       	brcs	.+12     	; 0x1870 <__ftoa_engine+0x38>
    1864:	80 38       	cpi	r24, 0x80	; 128
    1866:	71 05       	cpc	r23, r1
    1868:	61 05       	cpc	r22, r1
    186a:	09 f0       	breq	.+2      	; 0x186e <__ftoa_engine+0x36>
    186c:	3c 5f       	subi	r19, 0xFC	; 252
    186e:	3c 5f       	subi	r19, 0xFC	; 252
    1870:	3d 93       	st	X+, r19
    1872:	91 30       	cpi	r25, 0x01	; 1
    1874:	08 f0       	brcs	.+2      	; 0x1878 <__ftoa_engine+0x40>
    1876:	80 68       	ori	r24, 0x80	; 128
    1878:	91 1d       	adc	r25, r1
    187a:	df 93       	push	r29
    187c:	cf 93       	push	r28
    187e:	1f 93       	push	r17
    1880:	0f 93       	push	r16
    1882:	ff 92       	push	r15
    1884:	ef 92       	push	r14
    1886:	19 2f       	mov	r17, r25
    1888:	98 7f       	andi	r25, 0xF8	; 248
    188a:	96 95       	lsr	r25
    188c:	e9 2f       	mov	r30, r25
    188e:	96 95       	lsr	r25
    1890:	96 95       	lsr	r25
    1892:	e9 0f       	add	r30, r25
    1894:	ff 27       	eor	r31, r31
    1896:	e7 51       	subi	r30, 0x17	; 23
    1898:	ff 4f       	sbci	r31, 0xFF	; 255
    189a:	99 27       	eor	r25, r25
    189c:	33 27       	eor	r19, r19
    189e:	ee 24       	eor	r14, r14
    18a0:	ff 24       	eor	r15, r15
    18a2:	a7 01       	movw	r20, r14
    18a4:	e7 01       	movw	r28, r14
    18a6:	05 90       	lpm	r0, Z+
    18a8:	08 94       	sec
    18aa:	07 94       	ror	r0
    18ac:	28 f4       	brcc	.+10     	; 0x18b8 <__ftoa_engine+0x80>
    18ae:	36 0f       	add	r19, r22
    18b0:	e7 1e       	adc	r14, r23
    18b2:	f8 1e       	adc	r15, r24
    18b4:	49 1f       	adc	r20, r25
    18b6:	51 1d       	adc	r21, r1
    18b8:	66 0f       	add	r22, r22
    18ba:	77 1f       	adc	r23, r23
    18bc:	88 1f       	adc	r24, r24
    18be:	99 1f       	adc	r25, r25
    18c0:	06 94       	lsr	r0
    18c2:	a1 f7       	brne	.-24     	; 0x18ac <__ftoa_engine+0x74>
    18c4:	05 90       	lpm	r0, Z+
    18c6:	07 94       	ror	r0
    18c8:	28 f4       	brcc	.+10     	; 0x18d4 <__ftoa_engine+0x9c>
    18ca:	e7 0e       	add	r14, r23
    18cc:	f8 1e       	adc	r15, r24
    18ce:	49 1f       	adc	r20, r25
    18d0:	56 1f       	adc	r21, r22
    18d2:	c1 1d       	adc	r28, r1
    18d4:	77 0f       	add	r23, r23
    18d6:	88 1f       	adc	r24, r24
    18d8:	99 1f       	adc	r25, r25
    18da:	66 1f       	adc	r22, r22
    18dc:	06 94       	lsr	r0
    18de:	a1 f7       	brne	.-24     	; 0x18c8 <__ftoa_engine+0x90>
    18e0:	05 90       	lpm	r0, Z+
    18e2:	07 94       	ror	r0
    18e4:	28 f4       	brcc	.+10     	; 0x18f0 <__ftoa_engine+0xb8>
    18e6:	f8 0e       	add	r15, r24
    18e8:	49 1f       	adc	r20, r25
    18ea:	56 1f       	adc	r21, r22
    18ec:	c7 1f       	adc	r28, r23
    18ee:	d1 1d       	adc	r29, r1
    18f0:	88 0f       	add	r24, r24
    18f2:	99 1f       	adc	r25, r25
    18f4:	66 1f       	adc	r22, r22
    18f6:	77 1f       	adc	r23, r23
    18f8:	06 94       	lsr	r0
    18fa:	a1 f7       	brne	.-24     	; 0x18e4 <__ftoa_engine+0xac>
    18fc:	05 90       	lpm	r0, Z+
    18fe:	07 94       	ror	r0
    1900:	20 f4       	brcc	.+8      	; 0x190a <__ftoa_engine+0xd2>
    1902:	49 0f       	add	r20, r25
    1904:	56 1f       	adc	r21, r22
    1906:	c7 1f       	adc	r28, r23
    1908:	d8 1f       	adc	r29, r24
    190a:	99 0f       	add	r25, r25
    190c:	66 1f       	adc	r22, r22
    190e:	77 1f       	adc	r23, r23
    1910:	88 1f       	adc	r24, r24
    1912:	06 94       	lsr	r0
    1914:	a9 f7       	brne	.-22     	; 0x1900 <__ftoa_engine+0xc8>
    1916:	84 91       	lpm	r24, Z
    1918:	10 95       	com	r17
    191a:	17 70       	andi	r17, 0x07	; 7
    191c:	41 f0       	breq	.+16     	; 0x192e <__ftoa_engine+0xf6>
    191e:	d6 95       	lsr	r29
    1920:	c7 95       	ror	r28
    1922:	57 95       	ror	r21
    1924:	47 95       	ror	r20
    1926:	f7 94       	ror	r15
    1928:	e7 94       	ror	r14
    192a:	1a 95       	dec	r17
    192c:	c1 f7       	brne	.-16     	; 0x191e <__ftoa_engine+0xe6>
    192e:	ef e8       	ldi	r30, 0x8F	; 143
    1930:	f0 e0       	ldi	r31, 0x00	; 0
    1932:	68 94       	set
    1934:	15 90       	lpm	r1, Z+
    1936:	15 91       	lpm	r17, Z+
    1938:	35 91       	lpm	r19, Z+
    193a:	65 91       	lpm	r22, Z+
    193c:	95 91       	lpm	r25, Z+
    193e:	05 90       	lpm	r0, Z+
    1940:	7f e2       	ldi	r23, 0x2F	; 47
    1942:	73 95       	inc	r23
    1944:	e1 18       	sub	r14, r1
    1946:	f1 0a       	sbc	r15, r17
    1948:	43 0b       	sbc	r20, r19
    194a:	56 0b       	sbc	r21, r22
    194c:	c9 0b       	sbc	r28, r25
    194e:	d0 09       	sbc	r29, r0
    1950:	c0 f7       	brcc	.-16     	; 0x1942 <__ftoa_engine+0x10a>
    1952:	e1 0c       	add	r14, r1
    1954:	f1 1e       	adc	r15, r17
    1956:	43 1f       	adc	r20, r19
    1958:	56 1f       	adc	r21, r22
    195a:	c9 1f       	adc	r28, r25
    195c:	d0 1d       	adc	r29, r0
    195e:	7e f4       	brtc	.+30     	; 0x197e <__ftoa_engine+0x146>
    1960:	70 33       	cpi	r23, 0x30	; 48
    1962:	11 f4       	brne	.+4      	; 0x1968 <__ftoa_engine+0x130>
    1964:	8a 95       	dec	r24
    1966:	e6 cf       	rjmp	.-52     	; 0x1934 <__ftoa_engine+0xfc>
    1968:	e8 94       	clt
    196a:	01 50       	subi	r16, 0x01	; 1
    196c:	30 f0       	brcs	.+12     	; 0x197a <__ftoa_engine+0x142>
    196e:	08 0f       	add	r16, r24
    1970:	0a f4       	brpl	.+2      	; 0x1974 <__ftoa_engine+0x13c>
    1972:	00 27       	eor	r16, r16
    1974:	02 17       	cp	r16, r18
    1976:	08 f4       	brcc	.+2      	; 0x197a <__ftoa_engine+0x142>
    1978:	20 2f       	mov	r18, r16
    197a:	23 95       	inc	r18
    197c:	02 2f       	mov	r16, r18
    197e:	7a 33       	cpi	r23, 0x3A	; 58
    1980:	28 f0       	brcs	.+10     	; 0x198c <__ftoa_engine+0x154>
    1982:	79 e3       	ldi	r23, 0x39	; 57
    1984:	7d 93       	st	X+, r23
    1986:	2a 95       	dec	r18
    1988:	e9 f7       	brne	.-6      	; 0x1984 <__ftoa_engine+0x14c>
    198a:	10 c0       	rjmp	.+32     	; 0x19ac <__ftoa_engine+0x174>
    198c:	7d 93       	st	X+, r23
    198e:	2a 95       	dec	r18
    1990:	89 f6       	brne	.-94     	; 0x1934 <__ftoa_engine+0xfc>
    1992:	06 94       	lsr	r0
    1994:	97 95       	ror	r25
    1996:	67 95       	ror	r22
    1998:	37 95       	ror	r19
    199a:	17 95       	ror	r17
    199c:	17 94       	ror	r1
    199e:	e1 18       	sub	r14, r1
    19a0:	f1 0a       	sbc	r15, r17
    19a2:	43 0b       	sbc	r20, r19
    19a4:	56 0b       	sbc	r21, r22
    19a6:	c9 0b       	sbc	r28, r25
    19a8:	d0 09       	sbc	r29, r0
    19aa:	98 f0       	brcs	.+38     	; 0x19d2 <__ftoa_engine+0x19a>
    19ac:	23 95       	inc	r18
    19ae:	7e 91       	ld	r23, -X
    19b0:	73 95       	inc	r23
    19b2:	7a 33       	cpi	r23, 0x3A	; 58
    19b4:	08 f0       	brcs	.+2      	; 0x19b8 <__ftoa_engine+0x180>
    19b6:	70 e3       	ldi	r23, 0x30	; 48
    19b8:	7c 93       	st	X, r23
    19ba:	20 13       	cpse	r18, r16
    19bc:	b8 f7       	brcc	.-18     	; 0x19ac <__ftoa_engine+0x174>
    19be:	7e 91       	ld	r23, -X
    19c0:	70 61       	ori	r23, 0x10	; 16
    19c2:	7d 93       	st	X+, r23
    19c4:	30 f0       	brcs	.+12     	; 0x19d2 <__ftoa_engine+0x19a>
    19c6:	83 95       	inc	r24
    19c8:	71 e3       	ldi	r23, 0x31	; 49
    19ca:	7d 93       	st	X+, r23
    19cc:	70 e3       	ldi	r23, 0x30	; 48
    19ce:	2a 95       	dec	r18
    19d0:	e1 f7       	brne	.-8      	; 0x19ca <__ftoa_engine+0x192>
    19d2:	11 24       	eor	r1, r1
    19d4:	ef 90       	pop	r14
    19d6:	ff 90       	pop	r15
    19d8:	0f 91       	pop	r16
    19da:	1f 91       	pop	r17
    19dc:	cf 91       	pop	r28
    19de:	df 91       	pop	r29
    19e0:	99 27       	eor	r25, r25
    19e2:	87 fd       	sbrc	r24, 7
    19e4:	90 95       	com	r25
    19e6:	08 95       	ret

000019e8 <isspace>:
    19e8:	91 11       	cpse	r25, r1
    19ea:	0c 94 25 0d 	jmp	0x1a4a	; 0x1a4a <__ctype_isfalse>
    19ee:	80 32       	cpi	r24, 0x20	; 32
    19f0:	19 f0       	breq	.+6      	; 0x19f8 <isspace+0x10>
    19f2:	89 50       	subi	r24, 0x09	; 9
    19f4:	85 50       	subi	r24, 0x05	; 5
    19f6:	c8 f7       	brcc	.-14     	; 0x19ea <isspace+0x2>
    19f8:	08 95       	ret

000019fa <strncasecmp_P>:
    19fa:	fb 01       	movw	r30, r22
    19fc:	dc 01       	movw	r26, r24
    19fe:	41 50       	subi	r20, 0x01	; 1
    1a00:	50 40       	sbci	r21, 0x00	; 0
    1a02:	88 f0       	brcs	.+34     	; 0x1a26 <strncasecmp_P+0x2c>
    1a04:	8d 91       	ld	r24, X+
    1a06:	81 34       	cpi	r24, 0x41	; 65
    1a08:	1c f0       	brlt	.+6      	; 0x1a10 <strncasecmp_P+0x16>
    1a0a:	8b 35       	cpi	r24, 0x5B	; 91
    1a0c:	0c f4       	brge	.+2      	; 0x1a10 <strncasecmp_P+0x16>
    1a0e:	80 5e       	subi	r24, 0xE0	; 224
    1a10:	65 91       	lpm	r22, Z+
    1a12:	61 34       	cpi	r22, 0x41	; 65
    1a14:	1c f0       	brlt	.+6      	; 0x1a1c <strncasecmp_P+0x22>
    1a16:	6b 35       	cpi	r22, 0x5B	; 91
    1a18:	0c f4       	brge	.+2      	; 0x1a1c <strncasecmp_P+0x22>
    1a1a:	60 5e       	subi	r22, 0xE0	; 224
    1a1c:	86 1b       	sub	r24, r22
    1a1e:	61 11       	cpse	r22, r1
    1a20:	71 f3       	breq	.-36     	; 0x19fe <strncasecmp_P+0x4>
    1a22:	99 0b       	sbc	r25, r25
    1a24:	08 95       	ret
    1a26:	88 1b       	sub	r24, r24
    1a28:	fc cf       	rjmp	.-8      	; 0x1a22 <strncasecmp_P+0x28>

00001a2a <strrev>:
    1a2a:	dc 01       	movw	r26, r24
    1a2c:	fc 01       	movw	r30, r24
    1a2e:	67 2f       	mov	r22, r23
    1a30:	71 91       	ld	r23, Z+
    1a32:	77 23       	and	r23, r23
    1a34:	e1 f7       	brne	.-8      	; 0x1a2e <strrev+0x4>
    1a36:	32 97       	sbiw	r30, 0x02	; 2
    1a38:	04 c0       	rjmp	.+8      	; 0x1a42 <strrev+0x18>
    1a3a:	7c 91       	ld	r23, X
    1a3c:	6d 93       	st	X+, r22
    1a3e:	70 83       	st	Z, r23
    1a40:	62 91       	ld	r22, -Z
    1a42:	ae 17       	cp	r26, r30
    1a44:	bf 07       	cpc	r27, r31
    1a46:	c8 f3       	brcs	.-14     	; 0x1a3a <strrev+0x10>
    1a48:	08 95       	ret

00001a4a <__ctype_isfalse>:
    1a4a:	99 27       	eor	r25, r25
    1a4c:	88 27       	eor	r24, r24

00001a4e <__ctype_istrue>:
    1a4e:	08 95       	ret

00001a50 <__muluhisi3>:
    1a50:	0e 94 6a 0d 	call	0x1ad4	; 0x1ad4 <__umulhisi3>
    1a54:	a5 9f       	mul	r26, r21
    1a56:	90 0d       	add	r25, r0
    1a58:	b4 9f       	mul	r27, r20
    1a5a:	90 0d       	add	r25, r0
    1a5c:	a4 9f       	mul	r26, r20
    1a5e:	80 0d       	add	r24, r0
    1a60:	91 1d       	adc	r25, r1
    1a62:	11 24       	eor	r1, r1
    1a64:	08 95       	ret

00001a66 <__prologue_saves__>:
    1a66:	2f 92       	push	r2
    1a68:	3f 92       	push	r3
    1a6a:	4f 92       	push	r4
    1a6c:	5f 92       	push	r5
    1a6e:	6f 92       	push	r6
    1a70:	7f 92       	push	r7
    1a72:	8f 92       	push	r8
    1a74:	9f 92       	push	r9
    1a76:	af 92       	push	r10
    1a78:	bf 92       	push	r11
    1a7a:	cf 92       	push	r12
    1a7c:	df 92       	push	r13
    1a7e:	ef 92       	push	r14
    1a80:	ff 92       	push	r15
    1a82:	0f 93       	push	r16
    1a84:	1f 93       	push	r17
    1a86:	cf 93       	push	r28
    1a88:	df 93       	push	r29
    1a8a:	cd b7       	in	r28, 0x3d	; 61
    1a8c:	de b7       	in	r29, 0x3e	; 62
    1a8e:	ca 1b       	sub	r28, r26
    1a90:	db 0b       	sbc	r29, r27
    1a92:	0f b6       	in	r0, 0x3f	; 63
    1a94:	f8 94       	cli
    1a96:	de bf       	out	0x3e, r29	; 62
    1a98:	0f be       	out	0x3f, r0	; 63
    1a9a:	cd bf       	out	0x3d, r28	; 61
    1a9c:	09 94       	ijmp

00001a9e <__epilogue_restores__>:
    1a9e:	2a 88       	ldd	r2, Y+18	; 0x12
    1aa0:	39 88       	ldd	r3, Y+17	; 0x11
    1aa2:	48 88       	ldd	r4, Y+16	; 0x10
    1aa4:	5f 84       	ldd	r5, Y+15	; 0x0f
    1aa6:	6e 84       	ldd	r6, Y+14	; 0x0e
    1aa8:	7d 84       	ldd	r7, Y+13	; 0x0d
    1aaa:	8c 84       	ldd	r8, Y+12	; 0x0c
    1aac:	9b 84       	ldd	r9, Y+11	; 0x0b
    1aae:	aa 84       	ldd	r10, Y+10	; 0x0a
    1ab0:	b9 84       	ldd	r11, Y+9	; 0x09
    1ab2:	c8 84       	ldd	r12, Y+8	; 0x08
    1ab4:	df 80       	ldd	r13, Y+7	; 0x07
    1ab6:	ee 80       	ldd	r14, Y+6	; 0x06
    1ab8:	fd 80       	ldd	r15, Y+5	; 0x05
    1aba:	0c 81       	ldd	r16, Y+4	; 0x04
    1abc:	1b 81       	ldd	r17, Y+3	; 0x03
    1abe:	aa 81       	ldd	r26, Y+2	; 0x02
    1ac0:	b9 81       	ldd	r27, Y+1	; 0x01
    1ac2:	ce 0f       	add	r28, r30
    1ac4:	d1 1d       	adc	r29, r1
    1ac6:	0f b6       	in	r0, 0x3f	; 63
    1ac8:	f8 94       	cli
    1aca:	de bf       	out	0x3e, r29	; 62
    1acc:	0f be       	out	0x3f, r0	; 63
    1ace:	cd bf       	out	0x3d, r28	; 61
    1ad0:	ed 01       	movw	r28, r26
    1ad2:	08 95       	ret

00001ad4 <__umulhisi3>:
    1ad4:	a2 9f       	mul	r26, r18
    1ad6:	b0 01       	movw	r22, r0
    1ad8:	b3 9f       	mul	r27, r19
    1ada:	c0 01       	movw	r24, r0
    1adc:	a3 9f       	mul	r26, r19
    1ade:	70 0d       	add	r23, r0
    1ae0:	81 1d       	adc	r24, r1
    1ae2:	11 24       	eor	r1, r1
    1ae4:	91 1d       	adc	r25, r1
    1ae6:	b2 9f       	mul	r27, r18
    1ae8:	70 0d       	add	r23, r0
    1aea:	81 1d       	adc	r24, r1
    1aec:	11 24       	eor	r1, r1
    1aee:	91 1d       	adc	r25, r1
    1af0:	08 95       	ret

00001af2 <_exit>:
    1af2:	f8 94       	cli

00001af4 <__stop_program>:
    1af4:	ff cf       	rjmp	.-2      	; 0x1af4 <__stop_program>
