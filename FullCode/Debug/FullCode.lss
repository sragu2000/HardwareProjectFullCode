
FullCode.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000226a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000b6  00800060  0000226a  000022fe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000137  00800116  00800116  000023b4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000023b4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002410  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001b0  00000000  00000000  0000244c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000021dc  00000000  00000000  000025fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009cf  00000000  00000000  000047d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000011f3  00000000  00000000  000051a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000047c  00000000  00000000  0000639c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007ef  00000000  00000000  00006818  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000016c5  00000000  00000000  00007007  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001b0  00000000  00000000  000086cc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__ctors_end>
       4:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
       8:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
       c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      10:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      14:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      18:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      1c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      20:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      24:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      28:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      2c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      30:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      34:	0c 94 b1 02 	jmp	0x562	; 0x562 <__vector_13>
      38:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      3c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      40:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      44:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      48:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      4c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      50:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	4e 41       	sbci	r20, 0x1E	; 30
      56:	4e 49       	Address 0x00000056 is out of bounds.
.word	0xffff	; ????

00000057 <pstr_inity>:
      57:	49 4e 49 54 59                                      INITY

0000005c <pstr_inf>:
      5c:	49 4e 46                                            INF

0000005f <pwr_m10>:
      5f:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
      6f:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000077 <pwr_p10>:
      77:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
      87:	ca 1b 0e 5a ae c5 9d 74 00 40 7a 10 f3 5a 00 a0     ...Z...t.@z..Z..
      97:	72 4e 18 09 00 10 a5 d4 e8 00 00 e8 76 48 17 00     rN..........vH..
      a7:	00 e4 0b 54 02 00 00 ca 9a 3b 00 00 00 e1 f5 05     ...T.....;......
      b7:	00 00 80 96 98 00 00 00 40 42 0f 00 00 00 a0 86     ........@B......
      c7:	01 00 00 00 10 27 00 00 00 00 e8 03 00 00 00 00     .....'..........
      d7:	64 00 00 00 00 00 0a 00 00 00 00 00 01 00 00 00     d...............
      e7:	00 00 2c 76 d8 88 dc 67 4f 08 23 df c1 df ae 59     ..,v...gO.#....Y
      f7:	e1 b1 b7 96 e5 e3 e4 53 c6 3a e6 51 99 76 96 e8     .......S.:.Q.v..
     107:	e6 c2 84 26 eb 89 8c 9b 62 ed 40 7c 6f fc ef bc     ...&....b.@|o...
     117:	9c 9f 40 f2 ba a5 6f a5 f4 90 05 5a 2a f7 5c 93     ..@...o....Z*.\.
     127:	6b 6c f9 67 6d c1 1b fc e0 e4 0d 47 fe f5 20 e6     kl.gm......G.. .
     137:	b5 00 d0 ed 90 2e 03 00 94 35 77 05 00 80 84 1e     .........5w.....
     147:	08 00 00 20 4e 0a 00 00 00 c8 0c 33 33 33 33 0f     ... N......3333.
     157:	98 6e 12 83 11 41 ef 8d 21 14 89 3b e6 55 16 cf     .n...A..!..;.U..
     167:	fe e6 db 18 d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb     ......K8..|.....
     177:	e4 24 20 32 84 72 5e 22 81 00 c9 f1 24 ec a1 e5     .$ 2.r^"....$...
     187:	3d 27 00                                            ='.

0000018a <__ctors_end>:
     18a:	11 24       	eor	r1, r1
     18c:	1f be       	out	0x3f, r1	; 63
     18e:	cf e5       	ldi	r28, 0x5F	; 95
     190:	d8 e0       	ldi	r29, 0x08	; 8
     192:	de bf       	out	0x3e, r29	; 62
     194:	cd bf       	out	0x3d, r28	; 61

00000196 <__do_copy_data>:
     196:	11 e0       	ldi	r17, 0x01	; 1
     198:	a0 e6       	ldi	r26, 0x60	; 96
     19a:	b0 e0       	ldi	r27, 0x00	; 0
     19c:	ea e6       	ldi	r30, 0x6A	; 106
     19e:	f2 e2       	ldi	r31, 0x22	; 34
     1a0:	02 c0       	rjmp	.+4      	; 0x1a6 <__do_copy_data+0x10>
     1a2:	05 90       	lpm	r0, Z+
     1a4:	0d 92       	st	X+, r0
     1a6:	a6 31       	cpi	r26, 0x16	; 22
     1a8:	b1 07       	cpc	r27, r17
     1aa:	d9 f7       	brne	.-10     	; 0x1a2 <__do_copy_data+0xc>

000001ac <__do_clear_bss>:
     1ac:	22 e0       	ldi	r18, 0x02	; 2
     1ae:	a6 e1       	ldi	r26, 0x16	; 22
     1b0:	b1 e0       	ldi	r27, 0x01	; 1
     1b2:	01 c0       	rjmp	.+2      	; 0x1b6 <.do_clear_bss_start>

000001b4 <.do_clear_bss_loop>:
     1b4:	1d 92       	st	X+, r1

000001b6 <.do_clear_bss_start>:
     1b6:	ad 34       	cpi	r26, 0x4D	; 77
     1b8:	b2 07       	cpc	r27, r18
     1ba:	e1 f7       	brne	.-8      	; 0x1b4 <.do_clear_bss_loop>
     1bc:	0e 94 3b 06 	call	0xc76	; 0xc76 <main>
     1c0:	0c 94 33 11 	jmp	0x2266	; 0x2266 <_exit>

000001c4 <__bad_interrupt>:
     1c4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001c8 <I2C_Init>:
	return 1;												/* If yes then return 1 to indicate ack received i.e. ready to accept data byte */
	if (status == 0x20)										/* Check weather SLA+W transmitted & nack received or not? */
	return 2;												/* If yes then return 2 to indicate nack received i.e. device is busy */
	else
	return 3;												/* Else return 3 to indicate SLA+W failed */
}
     1c8:	11 b8       	out	0x01, r1	; 1
     1ca:	80 e2       	ldi	r24, 0x20	; 32
     1cc:	80 b9       	out	0x00, r24	; 0
     1ce:	08 95       	ret

000001d0 <I2C_Repeated_Start>:

uint8_t I2C_Repeated_Start(char slave_read_address)			/* I2C repeated start function */
{
	uint8_t status;											/* Declare variable */
	TWCR = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);					/* Enable TWI, generate start condition and clear interrupt flag */
     1d0:	94 ea       	ldi	r25, 0xA4	; 164
     1d2:	96 bf       	out	0x36, r25	; 54
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (start condition) */
     1d4:	06 b6       	in	r0, 0x36	; 54
     1d6:	07 fe       	sbrs	r0, 7
     1d8:	fd cf       	rjmp	.-6      	; 0x1d4 <I2C_Repeated_Start+0x4>
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
     1da:	91 b1       	in	r25, 0x01	; 1
     1dc:	98 7f       	andi	r25, 0xF8	; 248
	if (status != 0x10)										/* Check weather repeated start condition transmitted successfully or not? */
     1de:	90 31       	cpi	r25, 0x10	; 16
     1e0:	71 f4       	brne	.+28     	; 0x1fe <I2C_Repeated_Start+0x2e>
	return 0;												/* If no then return 0 to indicate repeated start condition fail */
	TWDR = slave_read_address;								/* If yes then write SLA+R in TWI data register */
     1e2:	83 b9       	out	0x03, r24	; 3
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
     1e4:	84 e8       	ldi	r24, 0x84	; 132
     1e6:	86 bf       	out	0x36, r24	; 54
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
     1e8:	06 b6       	in	r0, 0x36	; 54
     1ea:	07 fe       	sbrs	r0, 7
     1ec:	fd cf       	rjmp	.-6      	; 0x1e8 <I2C_Repeated_Start+0x18>
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
     1ee:	81 b1       	in	r24, 0x01	; 1
     1f0:	88 7f       	andi	r24, 0xF8	; 248
	if (status == 0x40)										/* Check weather SLA+R transmitted & ack received or not? */
     1f2:	80 34       	cpi	r24, 0x40	; 64
     1f4:	31 f0       	breq	.+12     	; 0x202 <I2C_Repeated_Start+0x32>
	return 1;												/* If yes then return 1 to indicate ack received */ 
	if (status == 0x20)										/* Check weather SLA+R transmitted & nack received or not? */
     1f6:	80 32       	cpi	r24, 0x20	; 32
     1f8:	31 f4       	brne	.+12     	; 0x206 <I2C_Repeated_Start+0x36>
	return 2;												/* If yes then return 2 to indicate nack received i.e. device is busy */
     1fa:	82 e0       	ldi	r24, 0x02	; 2
     1fc:	08 95       	ret
	uint8_t status;											/* Declare variable */
	TWCR = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);					/* Enable TWI, generate start condition and clear interrupt flag */
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (start condition) */
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status != 0x10)										/* Check weather repeated start condition transmitted successfully or not? */
	return 0;												/* If no then return 0 to indicate repeated start condition fail */
     1fe:	80 e0       	ldi	r24, 0x00	; 0
     200:	08 95       	ret
	TWDR = slave_read_address;								/* If yes then write SLA+R in TWI data register */
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status == 0x40)										/* Check weather SLA+R transmitted & ack received or not? */
	return 1;												/* If yes then return 1 to indicate ack received */ 
     202:	81 e0       	ldi	r24, 0x01	; 1
     204:	08 95       	ret
	if (status == 0x20)										/* Check weather SLA+R transmitted & nack received or not? */
	return 2;												/* If yes then return 2 to indicate nack received i.e. device is busy */
	else
	return 3;												/* Else return 3 to indicate SLA+W failed */
     206:	83 e0       	ldi	r24, 0x03	; 3
}
     208:	08 95       	ret

0000020a <I2C_Stop>:

void I2C_Stop()												/* I2C stop function */
{
	TWCR=(1<<TWSTO)|(1<<TWINT)|(1<<TWEN);					/* Enable TWI, generate stop condition and clear interrupt flag */
     20a:	84 e9       	ldi	r24, 0x94	; 148
     20c:	86 bf       	out	0x36, r24	; 54
	while(TWCR & (1<<TWSTO));								/* Wait until stop condition execution */ 
     20e:	06 b6       	in	r0, 0x36	; 54
     210:	04 fc       	sbrc	r0, 4
     212:	fd cf       	rjmp	.-6      	; 0x20e <I2C_Stop+0x4>
}
     214:	08 95       	ret

00000216 <I2C_Start_Wait>:

void I2C_Start_Wait(char slave_write_address)				/* I2C start wait function */
{
     216:	cf 93       	push	r28
     218:	c8 2f       	mov	r28, r24
	uint8_t status;											/* Declare variable */
	while (1)
	{
		TWCR = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);				/* Enable TWI, generate start condition and clear interrupt flag */
     21a:	84 ea       	ldi	r24, 0xA4	; 164
     21c:	86 bf       	out	0x36, r24	; 54
		while (!(TWCR & (1<<TWINT)));						/* Wait until TWI finish its current job (start condition) */
     21e:	06 b6       	in	r0, 0x36	; 54
     220:	07 fe       	sbrs	r0, 7
     222:	fd cf       	rjmp	.-6      	; 0x21e <I2C_Start_Wait+0x8>
		status = TWSR & 0xF8;								/* Read TWI status register with masking lower three bits */
     224:	81 b1       	in	r24, 0x01	; 1
     226:	88 7f       	andi	r24, 0xF8	; 248
		if (status != 0x08)									/* Check weather start condition transmitted successfully or not? */
     228:	88 30       	cpi	r24, 0x08	; 8
     22a:	b9 f7       	brne	.-18     	; 0x21a <I2C_Start_Wait+0x4>
		continue;											/* If no then continue with start loop again */
		TWDR = slave_write_address;							/* If yes then write SLA+W in TWI data register */
     22c:	c3 b9       	out	0x03, r28	; 3
		TWCR = (1<<TWEN)|(1<<TWINT);						/* Enable TWI and clear interrupt flag */
     22e:	84 e8       	ldi	r24, 0x84	; 132
     230:	86 bf       	out	0x36, r24	; 54
		while (!(TWCR & (1<<TWINT)));						/* Wait until TWI finish its current job (Write operation) */
     232:	06 b6       	in	r0, 0x36	; 54
     234:	07 fe       	sbrs	r0, 7
     236:	fd cf       	rjmp	.-6      	; 0x232 <I2C_Start_Wait+0x1c>
		status = TWSR & 0xF8;								/* Read TWI status register with masking lower three bits */
     238:	81 b1       	in	r24, 0x01	; 1
     23a:	88 7f       	andi	r24, 0xF8	; 248
		if (status != 0x18 )								/* Check weather SLA+W transmitted & ack received or not? */
     23c:	88 31       	cpi	r24, 0x18	; 24
     23e:	19 f0       	breq	.+6      	; 0x246 <I2C_Start_Wait+0x30>
		{
			I2C_Stop();										/* If not then generate stop condition */
     240:	0e 94 05 01 	call	0x20a	; 0x20a <I2C_Stop>
			continue;										/* continue with start loop again */
     244:	ea cf       	rjmp	.-44     	; 0x21a <I2C_Start_Wait+0x4>
		}
		break;												/* If yes then break loop */
	}
}
     246:	cf 91       	pop	r28
     248:	08 95       	ret

0000024a <I2C_Write>:

uint8_t I2C_Write(char data)								/* I2C write function */
{
	uint8_t status;											/* Declare variable */
	TWDR = data;											/* Copy data in TWI data register */
     24a:	83 b9       	out	0x03, r24	; 3
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
     24c:	84 e8       	ldi	r24, 0x84	; 132
     24e:	86 bf       	out	0x36, r24	; 54
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
     250:	06 b6       	in	r0, 0x36	; 54
     252:	07 fe       	sbrs	r0, 7
     254:	fd cf       	rjmp	.-6      	; 0x250 <I2C_Write+0x6>
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
     256:	81 b1       	in	r24, 0x01	; 1
     258:	88 7f       	andi	r24, 0xF8	; 248
	if (status == 0x28)										/* Check weather data transmitted & ack received or not? */
     25a:	88 32       	cpi	r24, 0x28	; 40
     25c:	21 f0       	breq	.+8      	; 0x266 <I2C_Write+0x1c>
	return 0;												/* If yes then return 0 to indicate ack received */
	if (status == 0x30)										/* Check weather data transmitted & nack received or not? */
     25e:	80 33       	cpi	r24, 0x30	; 48
     260:	21 f4       	brne	.+8      	; 0x26a <I2C_Write+0x20>
	return 1;												/* If yes then return 1 to indicate nack received */
     262:	81 e0       	ldi	r24, 0x01	; 1
     264:	08 95       	ret
	TWDR = data;											/* Copy data in TWI data register */
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status == 0x28)										/* Check weather data transmitted & ack received or not? */
	return 0;												/* If yes then return 0 to indicate ack received */
     266:	80 e0       	ldi	r24, 0x00	; 0
     268:	08 95       	ret
	if (status == 0x30)										/* Check weather data transmitted & nack received or not? */
	return 1;												/* If yes then return 1 to indicate nack received */
	else
	return 2;												/* Else return 2 to indicate data transmission failed */
     26a:	82 e0       	ldi	r24, 0x02	; 2
}
     26c:	08 95       	ret

0000026e <I2C_Read_Ack>:

char I2C_Read_Ack()										/* I2C read ack function */
{
	TWCR=(1<<TWEN)|(1<<TWINT)|(1<<TWEA);					/* Enable TWI, generation of ack and clear interrupt flag */
     26e:	84 ec       	ldi	r24, 0xC4	; 196
     270:	86 bf       	out	0x36, r24	; 54
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (read operation) */
     272:	06 b6       	in	r0, 0x36	; 54
     274:	07 fe       	sbrs	r0, 7
     276:	fd cf       	rjmp	.-6      	; 0x272 <I2C_Read_Ack+0x4>
	return TWDR;											/* Return received data */
     278:	83 b1       	in	r24, 0x03	; 3
}	
     27a:	08 95       	ret

0000027c <I2C_Read_Nack>:

char I2C_Read_Nack()										/* I2C read nack function */
{
	TWCR=(1<<TWEN)|(1<<TWINT);								/* Enable TWI and clear interrupt flag */
     27c:	84 e8       	ldi	r24, 0x84	; 132
     27e:	86 bf       	out	0x36, r24	; 54
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (read operation) */
     280:	06 b6       	in	r0, 0x36	; 54
     282:	07 fe       	sbrs	r0, 7
     284:	fd cf       	rjmp	.-6      	; 0x280 <I2C_Read_Nack+0x4>
	return TWDR;											/* Return received data */
     286:	83 b1       	in	r24, 0x03	; 3
}	
     288:	08 95       	ret

0000028a <LCD_Command>:
	while (*str!='\0')
	{
		USART_transmit(*str);
		str++;
	}
}
     28a:	88 bb       	out	0x18, r24	; 24
     28c:	85 b3       	in	r24, 0x15	; 21
     28e:	8c 7f       	andi	r24, 0xFC	; 252
     290:	85 bb       	out	0x15, r24	; 21
     292:	85 b3       	in	r24, 0x15	; 21
     294:	84 60       	ori	r24, 0x04	; 4
     296:	85 bb       	out	0x15, r24	; 21
     298:	82 e0       	ldi	r24, 0x02	; 2
     29a:	8a 95       	dec	r24
     29c:	f1 f7       	brne	.-4      	; 0x29a <LCD_Command+0x10>
     29e:	00 c0       	rjmp	.+0      	; 0x2a0 <LCD_Command+0x16>
     2a0:	85 b3       	in	r24, 0x15	; 21
     2a2:	8b 7f       	andi	r24, 0xFB	; 251
     2a4:	85 bb       	out	0x15, r24	; 21
     2a6:	8f e9       	ldi	r24, 0x9F	; 159
     2a8:	9f e0       	ldi	r25, 0x0F	; 15
     2aa:	01 97       	sbiw	r24, 0x01	; 1
     2ac:	f1 f7       	brne	.-4      	; 0x2aa <LCD_Command+0x20>
     2ae:	00 c0       	rjmp	.+0      	; 0x2b0 <LCD_Command+0x26>
     2b0:	00 00       	nop
     2b2:	08 95       	ret

000002b4 <LCD_Char>:
     2b4:	88 bb       	out	0x18, r24	; 24
     2b6:	85 b3       	in	r24, 0x15	; 21
     2b8:	8d 7f       	andi	r24, 0xFD	; 253
     2ba:	85 bb       	out	0x15, r24	; 21
     2bc:	85 b3       	in	r24, 0x15	; 21
     2be:	85 60       	ori	r24, 0x05	; 5
     2c0:	85 bb       	out	0x15, r24	; 21
     2c2:	82 e0       	ldi	r24, 0x02	; 2
     2c4:	8a 95       	dec	r24
     2c6:	f1 f7       	brne	.-4      	; 0x2c4 <LCD_Char+0x10>
     2c8:	00 c0       	rjmp	.+0      	; 0x2ca <LCD_Char+0x16>
     2ca:	85 b3       	in	r24, 0x15	; 21
     2cc:	8b 7f       	andi	r24, 0xFB	; 251
     2ce:	85 bb       	out	0x15, r24	; 21
     2d0:	8f ec       	ldi	r24, 0xCF	; 207
     2d2:	97 e0       	ldi	r25, 0x07	; 7
     2d4:	01 97       	sbiw	r24, 0x01	; 1
     2d6:	f1 f7       	brne	.-4      	; 0x2d4 <LCD_Char+0x20>
     2d8:	00 c0       	rjmp	.+0      	; 0x2da <LCD_Char+0x26>
     2da:	00 00       	nop
     2dc:	08 95       	ret

000002de <LCD_Init>:
     2de:	84 b3       	in	r24, 0x14	; 20
     2e0:	87 60       	ori	r24, 0x07	; 7
     2e2:	84 bb       	out	0x14, r24	; 20
     2e4:	8f ef       	ldi	r24, 0xFF	; 255
     2e6:	87 bb       	out	0x17, r24	; 23
     2e8:	8f e9       	ldi	r24, 0x9F	; 159
     2ea:	9c e8       	ldi	r25, 0x8C	; 140
     2ec:	01 97       	sbiw	r24, 0x01	; 1
     2ee:	f1 f7       	brne	.-4      	; 0x2ec <LCD_Init+0xe>
     2f0:	00 c0       	rjmp	.+0      	; 0x2f2 <LCD_Init+0x14>
     2f2:	00 00       	nop
     2f4:	88 e3       	ldi	r24, 0x38	; 56
     2f6:	0e 94 45 01 	call	0x28a	; 0x28a <LCD_Command>
     2fa:	8c e0       	ldi	r24, 0x0C	; 12
     2fc:	0e 94 45 01 	call	0x28a	; 0x28a <LCD_Command>
     300:	86 e0       	ldi	r24, 0x06	; 6
     302:	0e 94 45 01 	call	0x28a	; 0x28a <LCD_Command>
     306:	81 e0       	ldi	r24, 0x01	; 1
     308:	0e 94 45 01 	call	0x28a	; 0x28a <LCD_Command>
     30c:	80 e8       	ldi	r24, 0x80	; 128
     30e:	0e 94 45 01 	call	0x28a	; 0x28a <LCD_Command>
     312:	08 95       	ret

00000314 <LCD_String>:
     314:	0f 93       	push	r16
     316:	1f 93       	push	r17
     318:	cf 93       	push	r28
     31a:	df 93       	push	r29
     31c:	8c 01       	movw	r16, r24
     31e:	c0 e0       	ldi	r28, 0x00	; 0
     320:	d0 e0       	ldi	r29, 0x00	; 0
     322:	03 c0       	rjmp	.+6      	; 0x32a <LCD_String+0x16>
     324:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <LCD_Char>
     328:	21 96       	adiw	r28, 0x01	; 1
     32a:	f8 01       	movw	r30, r16
     32c:	ec 0f       	add	r30, r28
     32e:	fd 1f       	adc	r31, r29
     330:	80 81       	ld	r24, Z
     332:	81 11       	cpse	r24, r1
     334:	f7 cf       	rjmp	.-18     	; 0x324 <LCD_String+0x10>
     336:	df 91       	pop	r29
     338:	cf 91       	pop	r28
     33a:	1f 91       	pop	r17
     33c:	0f 91       	pop	r16
     33e:	08 95       	ret

00000340 <LCD_String_xy>:
     340:	cf 93       	push	r28
     342:	df 93       	push	r29
     344:	ea 01       	movw	r28, r20
     346:	81 30       	cpi	r24, 0x01	; 1
     348:	31 f4       	brne	.+12     	; 0x356 <LCD_String_xy+0x16>
     34a:	86 2f       	mov	r24, r22
     34c:	8f 70       	andi	r24, 0x0F	; 15
     34e:	80 68       	ori	r24, 0x80	; 128
     350:	0e 94 45 01 	call	0x28a	; 0x28a <LCD_Command>
     354:	07 c0       	rjmp	.+14     	; 0x364 <LCD_String_xy+0x24>
     356:	82 30       	cpi	r24, 0x02	; 2
     358:	29 f4       	brne	.+10     	; 0x364 <LCD_String_xy+0x24>
     35a:	86 2f       	mov	r24, r22
     35c:	8f 70       	andi	r24, 0x0F	; 15
     35e:	80 6c       	ori	r24, 0xC0	; 192
     360:	0e 94 45 01 	call	0x28a	; 0x28a <LCD_Command>
     364:	ce 01       	movw	r24, r28
     366:	0e 94 8a 01 	call	0x314	; 0x314 <LCD_String>
     36a:	df 91       	pop	r29
     36c:	cf 91       	pop	r28
     36e:	08 95       	ret

00000370 <LCD_Clear>:
     370:	81 e0       	ldi	r24, 0x01	; 1
     372:	0e 94 45 01 	call	0x28a	; 0x28a <LCD_Command>
     376:	08 95       	ret

00000378 <ADC_Init>:
     378:	8f ef       	ldi	r24, 0xFF	; 255
     37a:	87 bb       	out	0x17, r24	; 23
     37c:	1a ba       	out	0x1a, r1	; 26
     37e:	87 e8       	ldi	r24, 0x87	; 135
     380:	86 b9       	out	0x06, r24	; 6
     382:	80 ec       	ldi	r24, 0xC0	; 192
     384:	87 b9       	out	0x07, r24	; 7
     386:	08 95       	ret

00000388 <ADC_Read>:
     388:	86 b1       	in	r24, 0x06	; 6
     38a:	80 64       	ori	r24, 0x40	; 64
     38c:	86 b9       	out	0x06, r24	; 6
     38e:	34 9b       	sbis	0x06, 4	; 6
     390:	fe cf       	rjmp	.-4      	; 0x38e <ADC_Read+0x6>
     392:	8a e1       	ldi	r24, 0x1A	; 26
     394:	8a 95       	dec	r24
     396:	f1 f7       	brne	.-4      	; 0x394 <ADC_Read+0xc>
     398:	00 c0       	rjmp	.+0      	; 0x39a <ADC_Read+0x12>
     39a:	24 b1       	in	r18, 0x04	; 4
     39c:	85 b1       	in	r24, 0x05	; 5
     39e:	90 e0       	ldi	r25, 0x00	; 0
     3a0:	98 2f       	mov	r25, r24
     3a2:	88 27       	eor	r24, r24
     3a4:	82 0f       	add	r24, r18
     3a6:	91 1d       	adc	r25, r1
     3a8:	08 95       	ret

000003aa <convert_time_to_UTC>:
     3aa:	cf 93       	push	r28
     3ac:	df 93       	push	r29
     3ae:	80 ee       	ldi	r24, 0xE0	; 224
     3b0:	91 e0       	ldi	r25, 0x01	; 1
     3b2:	0e 94 08 0a 	call	0x1410	; 0x1410 <atol>
     3b6:	20 e1       	ldi	r18, 0x10	; 16
     3b8:	37 e2       	ldi	r19, 0x27	; 39
     3ba:	40 e0       	ldi	r20, 0x00	; 0
     3bc:	50 e0       	ldi	r21, 0x00	; 0
     3be:	0e 94 c2 09 	call	0x1384	; 0x1384 <__udivmodsi4>
     3c2:	c2 2f       	mov	r28, r18
     3c4:	d3 2f       	mov	r29, r19
     3c6:	24 e6       	ldi	r18, 0x64	; 100
     3c8:	30 e0       	ldi	r19, 0x00	; 0
     3ca:	40 e0       	ldi	r20, 0x00	; 0
     3cc:	50 e0       	ldi	r21, 0x00	; 0
     3ce:	0e 94 c2 09 	call	0x1384	; 0x1384 <__udivmodsi4>
     3d2:	7f 93       	push	r23
     3d4:	6f 93       	push	r22
     3d6:	3f 93       	push	r19
     3d8:	2f 93       	push	r18
     3da:	df 93       	push	r29
     3dc:	cf 93       	push	r28
     3de:	8a e6       	ldi	r24, 0x6A	; 106
     3e0:	90 e0       	ldi	r25, 0x00	; 0
     3e2:	9f 93       	push	r25
     3e4:	8f 93       	push	r24
     3e6:	80 ee       	ldi	r24, 0xE0	; 224
     3e8:	91 e0       	ldi	r25, 0x01	; 1
     3ea:	9f 93       	push	r25
     3ec:	8f 93       	push	r24
     3ee:	0e 94 7b 0a 	call	0x14f6	; 0x14f6 <sprintf>
     3f2:	8d b7       	in	r24, 0x3d	; 61
     3f4:	9e b7       	in	r25, 0x3e	; 62
     3f6:	0a 96       	adiw	r24, 0x0a	; 10
     3f8:	0f b6       	in	r0, 0x3f	; 63
     3fa:	f8 94       	cli
     3fc:	9e bf       	out	0x3e, r25	; 62
     3fe:	0f be       	out	0x3f, r0	; 63
     400:	8d bf       	out	0x3d, r24	; 61
     402:	df 91       	pop	r29
     404:	cf 91       	pop	r28
     406:	08 95       	ret

00000408 <get_gpstime>:
     408:	f8 94       	cli
     40a:	80 e0       	ldi	r24, 0x00	; 0
     40c:	20 e0       	ldi	r18, 0x00	; 0
     40e:	07 c0       	rjmp	.+14     	; 0x41e <get_gpstime+0x16>
     410:	e2 2f       	mov	r30, r18
     412:	f0 e0       	ldi	r31, 0x00	; 0
     414:	e0 52       	subi	r30, 0x20	; 32
     416:	fe 4f       	sbci	r31, 0xFE	; 254
     418:	90 83       	st	Z, r25
     41a:	2f 5f       	subi	r18, 0xFF	; 255
     41c:	8f 5f       	subi	r24, 0xFF	; 255
     41e:	e8 2f       	mov	r30, r24
     420:	f0 e0       	ldi	r31, 0x00	; 0
     422:	e5 5e       	subi	r30, 0xE5	; 229
     424:	fe 4f       	sbci	r31, 0xFE	; 254
     426:	90 81       	ld	r25, Z
     428:	9c 32       	cpi	r25, 0x2C	; 44
     42a:	91 f7       	brne	.-28     	; 0x410 <get_gpstime+0x8>
     42c:	0e 94 d5 01 	call	0x3aa	; 0x3aa <convert_time_to_UTC>
     430:	78 94       	sei
     432:	08 95       	ret

00000434 <convert_to_degrees>:
     434:	8f 92       	push	r8
     436:	9f 92       	push	r9
     438:	af 92       	push	r10
     43a:	bf 92       	push	r11
     43c:	cf 92       	push	r12
     43e:	df 92       	push	r13
     440:	ef 92       	push	r14
     442:	ff 92       	push	r15
     444:	0f 93       	push	r16
     446:	1f 93       	push	r17
     448:	0e 94 04 0a 	call	0x1408	; 0x1408 <atof>
     44c:	20 e0       	ldi	r18, 0x00	; 0
     44e:	30 e0       	ldi	r19, 0x00	; 0
     450:	48 ec       	ldi	r20, 0xC8	; 200
     452:	52 e4       	ldi	r21, 0x42	; 66
     454:	0e 94 f6 07 	call	0xfec	; 0xfec <__divsf3>
     458:	6b 01       	movw	r12, r22
     45a:	7c 01       	movw	r14, r24
     45c:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__fixsfsi>
     460:	07 2e       	mov	r0, r23
     462:	00 0c       	add	r0, r0
     464:	88 0b       	sbc	r24, r24
     466:	99 0b       	sbc	r25, r25
     468:	0e 94 a0 08 	call	0x1140	; 0x1140 <__floatsisf>
     46c:	4b 01       	movw	r8, r22
     46e:	5c 01       	movw	r10, r24
     470:	9b 01       	movw	r18, r22
     472:	ac 01       	movw	r20, r24
     474:	c7 01       	movw	r24, r14
     476:	b6 01       	movw	r22, r12
     478:	0e 94 84 07 	call	0xf08	; 0xf08 <__subsf3>
     47c:	2a e9       	ldi	r18, 0x9A	; 154
     47e:	39 e9       	ldi	r19, 0x99	; 153
     480:	49 e1       	ldi	r20, 0x19	; 25
     482:	5f e3       	ldi	r21, 0x3F	; 63
     484:	0e 94 f6 07 	call	0xfec	; 0xfec <__divsf3>
     488:	9b 01       	movw	r18, r22
     48a:	ac 01       	movw	r20, r24
     48c:	c5 01       	movw	r24, r10
     48e:	b4 01       	movw	r22, r8
     490:	0e 94 85 07 	call	0xf0a	; 0xf0a <__addsf3>
     494:	0d eb       	ldi	r16, 0xBD	; 189
     496:	11 e0       	ldi	r17, 0x01	; 1
     498:	24 e0       	ldi	r18, 0x04	; 4
     49a:	46 e0       	ldi	r20, 0x06	; 6
     49c:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <dtostrf>
     4a0:	1f 91       	pop	r17
     4a2:	0f 91       	pop	r16
     4a4:	ff 90       	pop	r15
     4a6:	ef 90       	pop	r14
     4a8:	df 90       	pop	r13
     4aa:	cf 90       	pop	r12
     4ac:	bf 90       	pop	r11
     4ae:	af 90       	pop	r10
     4b0:	9f 90       	pop	r9
     4b2:	8f 90       	pop	r8
     4b4:	08 95       	ret

000004b6 <get_latitude>:
     4b6:	f8 94       	cli
     4b8:	8f 5f       	subi	r24, 0xFF	; 255
     4ba:	90 e0       	ldi	r25, 0x00	; 0
     4bc:	07 c0       	rjmp	.+14     	; 0x4cc <get_latitude+0x16>
     4be:	e9 2f       	mov	r30, r25
     4c0:	f0 e0       	ldi	r31, 0x00	; 0
     4c2:	e3 5f       	subi	r30, 0xF3	; 243
     4c4:	fd 4f       	sbci	r31, 0xFD	; 253
     4c6:	20 83       	st	Z, r18
     4c8:	9f 5f       	subi	r25, 0xFF	; 255
     4ca:	8f 5f       	subi	r24, 0xFF	; 255
     4cc:	e8 2f       	mov	r30, r24
     4ce:	f0 e0       	ldi	r31, 0x00	; 0
     4d0:	e5 5e       	subi	r30, 0xE5	; 229
     4d2:	fe 4f       	sbci	r31, 0xFE	; 254
     4d4:	20 81       	ld	r18, Z
     4d6:	2c 32       	cpi	r18, 0x2C	; 44
     4d8:	91 f7       	brne	.-28     	; 0x4be <get_latitude+0x8>
     4da:	31 e0       	ldi	r19, 0x01	; 1
     4dc:	39 0f       	add	r19, r25
     4de:	e9 2f       	mov	r30, r25
     4e0:	f0 e0       	ldi	r31, 0x00	; 0
     4e2:	8f 5f       	subi	r24, 0xFF	; 255
     4e4:	e3 5f       	subi	r30, 0xF3	; 243
     4e6:	fd 4f       	sbci	r31, 0xFD	; 253
     4e8:	20 83       	st	Z, r18
     4ea:	23 2f       	mov	r18, r19
     4ec:	30 e0       	ldi	r19, 0x00	; 0
     4ee:	e8 2f       	mov	r30, r24
     4f0:	f0 e0       	ldi	r31, 0x00	; 0
     4f2:	e5 5e       	subi	r30, 0xE5	; 229
     4f4:	fe 4f       	sbci	r31, 0xFE	; 254
     4f6:	80 81       	ld	r24, Z
     4f8:	f9 01       	movw	r30, r18
     4fa:	e3 5f       	subi	r30, 0xF3	; 243
     4fc:	fd 4f       	sbci	r31, 0xFD	; 253
     4fe:	80 83       	st	Z, r24
     500:	8d e0       	ldi	r24, 0x0D	; 13
     502:	92 e0       	ldi	r25, 0x02	; 2
     504:	0e 94 1a 02 	call	0x434	; 0x434 <convert_to_degrees>
     508:	78 94       	sei
     50a:	08 95       	ret

0000050c <get_longitude>:
     50c:	f8 94       	cli
     50e:	8f 5f       	subi	r24, 0xFF	; 255
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	07 c0       	rjmp	.+14     	; 0x522 <get_longitude+0x16>
     514:	e9 2f       	mov	r30, r25
     516:	f0 e0       	ldi	r31, 0x00	; 0
     518:	ef 52       	subi	r30, 0x2F	; 47
     51a:	fe 4f       	sbci	r31, 0xFE	; 254
     51c:	20 83       	st	Z, r18
     51e:	9f 5f       	subi	r25, 0xFF	; 255
     520:	8f 5f       	subi	r24, 0xFF	; 255
     522:	e8 2f       	mov	r30, r24
     524:	f0 e0       	ldi	r31, 0x00	; 0
     526:	e5 5e       	subi	r30, 0xE5	; 229
     528:	fe 4f       	sbci	r31, 0xFE	; 254
     52a:	20 81       	ld	r18, Z
     52c:	2c 32       	cpi	r18, 0x2C	; 44
     52e:	91 f7       	brne	.-28     	; 0x514 <get_longitude+0x8>
     530:	31 e0       	ldi	r19, 0x01	; 1
     532:	39 0f       	add	r19, r25
     534:	e9 2f       	mov	r30, r25
     536:	f0 e0       	ldi	r31, 0x00	; 0
     538:	8f 5f       	subi	r24, 0xFF	; 255
     53a:	ef 52       	subi	r30, 0x2F	; 47
     53c:	fe 4f       	sbci	r31, 0xFE	; 254
     53e:	20 83       	st	Z, r18
     540:	23 2f       	mov	r18, r19
     542:	30 e0       	ldi	r19, 0x00	; 0
     544:	e8 2f       	mov	r30, r24
     546:	f0 e0       	ldi	r31, 0x00	; 0
     548:	e5 5e       	subi	r30, 0xE5	; 229
     54a:	fe 4f       	sbci	r31, 0xFE	; 254
     54c:	80 81       	ld	r24, Z
     54e:	f9 01       	movw	r30, r18
     550:	ef 52       	subi	r30, 0x2F	; 47
     552:	fe 4f       	sbci	r31, 0xFE	; 254
     554:	80 83       	st	Z, r24
     556:	81 ed       	ldi	r24, 0xD1	; 209
     558:	91 e0       	ldi	r25, 0x01	; 1
     55a:	0e 94 1a 02 	call	0x434	; 0x434 <convert_to_degrees>
     55e:	78 94       	sei
     560:	08 95       	ret

00000562 <__vector_13>:
     562:	1f 92       	push	r1
     564:	0f 92       	push	r0
     566:	0f b6       	in	r0, 0x3f	; 63
     568:	0f 92       	push	r0
     56a:	11 24       	eor	r1, r1
     56c:	2f 93       	push	r18
     56e:	3f 93       	push	r19
     570:	4f 93       	push	r20
     572:	5f 93       	push	r21
     574:	8f 93       	push	r24
     576:	9f 93       	push	r25
     578:	ef 93       	push	r30
     57a:	ff 93       	push	r31
     57c:	9f b7       	in	r25, 0x3f	; 63
     57e:	f8 94       	cli
     580:	8c b1       	in	r24, 0x0c	; 12
     582:	84 32       	cpi	r24, 0x24	; 36
     584:	59 f4       	brne	.+22     	; 0x59c <__vector_13+0x3a>
     586:	10 92 fa 01 	sts	0x01FA, r1	; 0x8001fa <GGA_Index+0x1>
     58a:	10 92 f9 01 	sts	0x01F9, r1	; 0x8001f9 <GGA_Index>
     58e:	10 92 f8 01 	sts	0x01F8, r1	; 0x8001f8 <CommaCounter+0x1>
     592:	10 92 f7 01 	sts	0x01F7, r1	; 0x8001f7 <CommaCounter>
     596:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <__data_end>
     59a:	45 c0       	rjmp	.+138    	; 0x626 <__vector_13+0xc4>
     59c:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <__data_end>
     5a0:	22 23       	and	r18, r18
     5a2:	29 f1       	breq	.+74     	; 0x5ee <__vector_13+0x8c>
     5a4:	8c 32       	cpi	r24, 0x2C	; 44
     5a6:	99 f4       	brne	.+38     	; 0x5ce <__vector_13+0x6c>
     5a8:	20 91 f7 01 	lds	r18, 0x01F7	; 0x8001f7 <CommaCounter>
     5ac:	30 91 f8 01 	lds	r19, 0x01F8	; 0x8001f8 <CommaCounter+0x1>
     5b0:	a9 01       	movw	r20, r18
     5b2:	4f 5f       	subi	r20, 0xFF	; 255
     5b4:	5f 4f       	sbci	r21, 0xFF	; 255
     5b6:	50 93 f8 01 	sts	0x01F8, r21	; 0x8001f8 <CommaCounter+0x1>
     5ba:	40 93 f7 01 	sts	0x01F7, r20	; 0x8001f7 <CommaCounter>
     5be:	40 91 f9 01 	lds	r20, 0x01F9	; 0x8001f9 <GGA_Index>
     5c2:	50 91 fa 01 	lds	r21, 0x01FA	; 0x8001fa <GGA_Index+0x1>
     5c6:	f9 01       	movw	r30, r18
     5c8:	e1 5d       	subi	r30, 0xD1	; 209
     5ca:	fd 4f       	sbci	r31, 0xFD	; 253
     5cc:	40 83       	st	Z, r20
     5ce:	20 91 f9 01 	lds	r18, 0x01F9	; 0x8001f9 <GGA_Index>
     5d2:	30 91 fa 01 	lds	r19, 0x01FA	; 0x8001fa <GGA_Index+0x1>
     5d6:	a9 01       	movw	r20, r18
     5d8:	4f 5f       	subi	r20, 0xFF	; 255
     5da:	5f 4f       	sbci	r21, 0xFF	; 255
     5dc:	50 93 fa 01 	sts	0x01FA, r21	; 0x8001fa <GGA_Index+0x1>
     5e0:	40 93 f9 01 	sts	0x01F9, r20	; 0x8001f9 <GGA_Index>
     5e4:	f9 01       	movw	r30, r18
     5e6:	e5 5e       	subi	r30, 0xE5	; 229
     5e8:	fe 4f       	sbci	r31, 0xFE	; 254
     5ea:	80 83       	st	Z, r24
     5ec:	1c c0       	rjmp	.+56     	; 0x626 <__vector_13+0xc4>
     5ee:	20 91 0a 02 	lds	r18, 0x020A	; 0x80020a <GGA_CODE>
     5f2:	27 34       	cpi	r18, 0x47	; 71
     5f4:	89 f4       	brne	.+34     	; 0x618 <__vector_13+0xb6>
     5f6:	20 91 0b 02 	lds	r18, 0x020B	; 0x80020b <GGA_CODE+0x1>
     5fa:	27 34       	cpi	r18, 0x47	; 71
     5fc:	69 f4       	brne	.+26     	; 0x618 <__vector_13+0xb6>
     5fe:	20 91 0c 02 	lds	r18, 0x020C	; 0x80020c <GGA_CODE+0x2>
     602:	21 34       	cpi	r18, 0x41	; 65
     604:	49 f4       	brne	.+18     	; 0x618 <__vector_13+0xb6>
     606:	81 e0       	ldi	r24, 0x01	; 1
     608:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end>
     60c:	ea e0       	ldi	r30, 0x0A	; 10
     60e:	f2 e0       	ldi	r31, 0x02	; 2
     610:	10 82       	st	Z, r1
     612:	11 82       	std	Z+1, r1	; 0x01
     614:	12 82       	std	Z+2, r1	; 0x02
     616:	07 c0       	rjmp	.+14     	; 0x626 <__vector_13+0xc4>
     618:	ea e0       	ldi	r30, 0x0A	; 10
     61a:	f2 e0       	ldi	r31, 0x02	; 2
     61c:	21 81       	ldd	r18, Z+1	; 0x01
     61e:	20 83       	st	Z, r18
     620:	22 81       	ldd	r18, Z+2	; 0x02
     622:	21 83       	std	Z+1, r18	; 0x01
     624:	82 83       	std	Z+2, r24	; 0x02
     626:	9f bf       	out	0x3f, r25	; 63
     628:	ff 91       	pop	r31
     62a:	ef 91       	pop	r30
     62c:	9f 91       	pop	r25
     62e:	8f 91       	pop	r24
     630:	5f 91       	pop	r21
     632:	4f 91       	pop	r20
     634:	3f 91       	pop	r19
     636:	2f 91       	pop	r18
     638:	0f 90       	pop	r0
     63a:	0f be       	out	0x3f, r0	; 63
     63c:	0f 90       	pop	r0
     63e:	1f 90       	pop	r1
     640:	18 95       	reti

00000642 <MPU6050_Init>:
     642:	2f e7       	ldi	r18, 0x7F	; 127
     644:	89 ea       	ldi	r24, 0xA9	; 169
     646:	93 e0       	ldi	r25, 0x03	; 3
     648:	21 50       	subi	r18, 0x01	; 1
     64a:	80 40       	sbci	r24, 0x00	; 0
     64c:	90 40       	sbci	r25, 0x00	; 0
     64e:	e1 f7       	brne	.-8      	; 0x648 <MPU6050_Init+0x6>
     650:	00 c0       	rjmp	.+0      	; 0x652 <MPU6050_Init+0x10>
     652:	00 00       	nop
     654:	80 ed       	ldi	r24, 0xD0	; 208
     656:	0e 94 0b 01 	call	0x216	; 0x216 <I2C_Start_Wait>
     65a:	89 e1       	ldi	r24, 0x19	; 25
     65c:	0e 94 25 01 	call	0x24a	; 0x24a <I2C_Write>
     660:	87 e0       	ldi	r24, 0x07	; 7
     662:	0e 94 25 01 	call	0x24a	; 0x24a <I2C_Write>
     666:	0e 94 05 01 	call	0x20a	; 0x20a <I2C_Stop>
     66a:	80 ed       	ldi	r24, 0xD0	; 208
     66c:	0e 94 0b 01 	call	0x216	; 0x216 <I2C_Start_Wait>
     670:	8b e6       	ldi	r24, 0x6B	; 107
     672:	0e 94 25 01 	call	0x24a	; 0x24a <I2C_Write>
     676:	81 e0       	ldi	r24, 0x01	; 1
     678:	0e 94 25 01 	call	0x24a	; 0x24a <I2C_Write>
     67c:	0e 94 05 01 	call	0x20a	; 0x20a <I2C_Stop>
     680:	80 ed       	ldi	r24, 0xD0	; 208
     682:	0e 94 0b 01 	call	0x216	; 0x216 <I2C_Start_Wait>
     686:	8a e1       	ldi	r24, 0x1A	; 26
     688:	0e 94 25 01 	call	0x24a	; 0x24a <I2C_Write>
     68c:	80 e0       	ldi	r24, 0x00	; 0
     68e:	0e 94 25 01 	call	0x24a	; 0x24a <I2C_Write>
     692:	0e 94 05 01 	call	0x20a	; 0x20a <I2C_Stop>
     696:	80 ed       	ldi	r24, 0xD0	; 208
     698:	0e 94 0b 01 	call	0x216	; 0x216 <I2C_Start_Wait>
     69c:	8b e1       	ldi	r24, 0x1B	; 27
     69e:	0e 94 25 01 	call	0x24a	; 0x24a <I2C_Write>
     6a2:	88 e1       	ldi	r24, 0x18	; 24
     6a4:	0e 94 25 01 	call	0x24a	; 0x24a <I2C_Write>
     6a8:	0e 94 05 01 	call	0x20a	; 0x20a <I2C_Stop>
     6ac:	80 ed       	ldi	r24, 0xD0	; 208
     6ae:	0e 94 0b 01 	call	0x216	; 0x216 <I2C_Start_Wait>
     6b2:	88 e3       	ldi	r24, 0x38	; 56
     6b4:	0e 94 25 01 	call	0x24a	; 0x24a <I2C_Write>
     6b8:	81 e0       	ldi	r24, 0x01	; 1
     6ba:	0e 94 25 01 	call	0x24a	; 0x24a <I2C_Write>
     6be:	0e 94 05 01 	call	0x20a	; 0x20a <I2C_Stop>
     6c2:	08 95       	ret

000006c4 <MPU_Start_Loc>:
     6c4:	80 ed       	ldi	r24, 0xD0	; 208
     6c6:	0e 94 0b 01 	call	0x216	; 0x216 <I2C_Start_Wait>
     6ca:	8b e3       	ldi	r24, 0x3B	; 59
     6cc:	0e 94 25 01 	call	0x24a	; 0x24a <I2C_Write>
     6d0:	81 ed       	ldi	r24, 0xD1	; 209
     6d2:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <I2C_Repeated_Start>
     6d6:	08 95       	ret

000006d8 <Read_RawValue>:
     6d8:	cf 93       	push	r28
     6da:	df 93       	push	r29
     6dc:	0e 94 62 03 	call	0x6c4	; 0x6c4 <MPU_Start_Loc>
     6e0:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Read_Ack>
     6e4:	c8 2f       	mov	r28, r24
     6e6:	d0 e0       	ldi	r29, 0x00	; 0
     6e8:	dc 2f       	mov	r29, r28
     6ea:	cc 27       	eor	r28, r28
     6ec:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Read_Ack>
     6f0:	be 01       	movw	r22, r28
     6f2:	68 2b       	or	r22, r24
     6f4:	07 2e       	mov	r0, r23
     6f6:	00 0c       	add	r0, r0
     6f8:	88 0b       	sbc	r24, r24
     6fa:	99 0b       	sbc	r25, r25
     6fc:	0e 94 a0 08 	call	0x1140	; 0x1140 <__floatsisf>
     700:	60 93 f3 01 	sts	0x01F3, r22	; 0x8001f3 <Acc_x>
     704:	70 93 f4 01 	sts	0x01F4, r23	; 0x8001f4 <Acc_x+0x1>
     708:	80 93 f5 01 	sts	0x01F5, r24	; 0x8001f5 <Acc_x+0x2>
     70c:	90 93 f6 01 	sts	0x01F6, r25	; 0x8001f6 <Acc_x+0x3>
     710:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Read_Ack>
     714:	c8 2f       	mov	r28, r24
     716:	d0 e0       	ldi	r29, 0x00	; 0
     718:	dc 2f       	mov	r29, r28
     71a:	cc 27       	eor	r28, r28
     71c:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Read_Ack>
     720:	be 01       	movw	r22, r28
     722:	68 2b       	or	r22, r24
     724:	07 2e       	mov	r0, r23
     726:	00 0c       	add	r0, r0
     728:	88 0b       	sbc	r24, r24
     72a:	99 0b       	sbc	r25, r25
     72c:	0e 94 a0 08 	call	0x1140	; 0x1140 <__floatsisf>
     730:	60 93 b9 01 	sts	0x01B9, r22	; 0x8001b9 <Acc_y>
     734:	70 93 ba 01 	sts	0x01BA, r23	; 0x8001ba <Acc_y+0x1>
     738:	80 93 bb 01 	sts	0x01BB, r24	; 0x8001bb <Acc_y+0x2>
     73c:	90 93 bc 01 	sts	0x01BC, r25	; 0x8001bc <Acc_y+0x3>
     740:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Read_Ack>
     744:	c8 2f       	mov	r28, r24
     746:	d0 e0       	ldi	r29, 0x00	; 0
     748:	dc 2f       	mov	r29, r28
     74a:	cc 27       	eor	r28, r28
     74c:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Read_Ack>
     750:	be 01       	movw	r22, r28
     752:	68 2b       	or	r22, r24
     754:	07 2e       	mov	r0, r23
     756:	00 0c       	add	r0, r0
     758:	88 0b       	sbc	r24, r24
     75a:	99 0b       	sbc	r25, r25
     75c:	0e 94 a0 08 	call	0x1140	; 0x1140 <__floatsisf>
     760:	60 93 17 01 	sts	0x0117, r22	; 0x800117 <Acc_z>
     764:	70 93 18 01 	sts	0x0118, r23	; 0x800118 <Acc_z+0x1>
     768:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <Acc_z+0x2>
     76c:	90 93 1a 01 	sts	0x011A, r25	; 0x80011a <Acc_z+0x3>
     770:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Read_Ack>
     774:	c8 2f       	mov	r28, r24
     776:	d0 e0       	ldi	r29, 0x00	; 0
     778:	dc 2f       	mov	r29, r28
     77a:	cc 27       	eor	r28, r28
     77c:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Read_Ack>
     780:	be 01       	movw	r22, r28
     782:	68 2b       	or	r22, r24
     784:	07 2e       	mov	r0, r23
     786:	00 0c       	add	r0, r0
     788:	88 0b       	sbc	r24, r24
     78a:	99 0b       	sbc	r25, r25
     78c:	0e 94 a0 08 	call	0x1140	; 0x1140 <__floatsisf>
     790:	60 93 b5 01 	sts	0x01B5, r22	; 0x8001b5 <Temperature>
     794:	70 93 b6 01 	sts	0x01B6, r23	; 0x8001b6 <Temperature+0x1>
     798:	80 93 b7 01 	sts	0x01B7, r24	; 0x8001b7 <Temperature+0x2>
     79c:	90 93 b8 01 	sts	0x01B8, r25	; 0x8001b8 <Temperature+0x3>
     7a0:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Read_Ack>
     7a4:	c8 2f       	mov	r28, r24
     7a6:	d0 e0       	ldi	r29, 0x00	; 0
     7a8:	dc 2f       	mov	r29, r28
     7aa:	cc 27       	eor	r28, r28
     7ac:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Read_Ack>
     7b0:	be 01       	movw	r22, r28
     7b2:	68 2b       	or	r22, r24
     7b4:	07 2e       	mov	r0, r23
     7b6:	00 0c       	add	r0, r0
     7b8:	88 0b       	sbc	r24, r24
     7ba:	99 0b       	sbc	r25, r25
     7bc:	0e 94 a0 08 	call	0x1140	; 0x1140 <__floatsisf>
     7c0:	60 93 b1 01 	sts	0x01B1, r22	; 0x8001b1 <Gyro_x>
     7c4:	70 93 b2 01 	sts	0x01B2, r23	; 0x8001b2 <Gyro_x+0x1>
     7c8:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <Gyro_x+0x2>
     7cc:	90 93 b4 01 	sts	0x01B4, r25	; 0x8001b4 <Gyro_x+0x3>
     7d0:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Read_Ack>
     7d4:	c8 2f       	mov	r28, r24
     7d6:	d0 e0       	ldi	r29, 0x00	; 0
     7d8:	dc 2f       	mov	r29, r28
     7da:	cc 27       	eor	r28, r28
     7dc:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Read_Ack>
     7e0:	be 01       	movw	r22, r28
     7e2:	68 2b       	or	r22, r24
     7e4:	07 2e       	mov	r0, r23
     7e6:	00 0c       	add	r0, r0
     7e8:	88 0b       	sbc	r24, r24
     7ea:	99 0b       	sbc	r25, r25
     7ec:	0e 94 a0 08 	call	0x1140	; 0x1140 <__floatsisf>
     7f0:	60 93 2b 02 	sts	0x022B, r22	; 0x80022b <Gyro_y>
     7f4:	70 93 2c 02 	sts	0x022C, r23	; 0x80022c <Gyro_y+0x1>
     7f8:	80 93 2d 02 	sts	0x022D, r24	; 0x80022d <Gyro_y+0x2>
     7fc:	90 93 2e 02 	sts	0x022E, r25	; 0x80022e <Gyro_y+0x3>
     800:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Read_Ack>
     804:	c8 2f       	mov	r28, r24
     806:	d0 e0       	ldi	r29, 0x00	; 0
     808:	dc 2f       	mov	r29, r28
     80a:	cc 27       	eor	r28, r28
     80c:	0e 94 3e 01 	call	0x27c	; 0x27c <I2C_Read_Nack>
     810:	be 01       	movw	r22, r28
     812:	68 2b       	or	r22, r24
     814:	07 2e       	mov	r0, r23
     816:	00 0c       	add	r0, r0
     818:	88 0b       	sbc	r24, r24
     81a:	99 0b       	sbc	r25, r25
     81c:	0e 94 a0 08 	call	0x1140	; 0x1140 <__floatsisf>
     820:	60 93 ef 01 	sts	0x01EF, r22	; 0x8001ef <Gyro_z>
     824:	70 93 f0 01 	sts	0x01F0, r23	; 0x8001f0 <Gyro_z+0x1>
     828:	80 93 f1 01 	sts	0x01F1, r24	; 0x8001f1 <Gyro_z+0x2>
     82c:	90 93 f2 01 	sts	0x01F2, r25	; 0x8001f2 <Gyro_z+0x3>
     830:	0e 94 05 01 	call	0x20a	; 0x20a <I2C_Stop>
     834:	df 91       	pop	r29
     836:	cf 91       	pop	r28
     838:	08 95       	ret

0000083a <isDriverSleepingGyro>:
     83a:	4f 92       	push	r4
     83c:	5f 92       	push	r5
     83e:	6f 92       	push	r6
     840:	7f 92       	push	r7
     842:	8f 92       	push	r8
     844:	9f 92       	push	r9
     846:	af 92       	push	r10
     848:	bf 92       	push	r11
     84a:	cf 92       	push	r12
     84c:	df 92       	push	r13
     84e:	ef 92       	push	r14
     850:	ff 92       	push	r15
     852:	0f 93       	push	r16
     854:	1f 93       	push	r17
     856:	4b 01       	movw	r8, r22
     858:	5c 01       	movw	r10, r24
     85a:	29 01       	movw	r4, r18
     85c:	3a 01       	movw	r6, r20
     85e:	67 01       	movw	r12, r14
     860:	78 01       	movw	r14, r16
     862:	20 e0       	ldi	r18, 0x00	; 0
     864:	30 e0       	ldi	r19, 0x00	; 0
     866:	40 e0       	ldi	r20, 0x00	; 0
     868:	50 ec       	ldi	r21, 0xC0	; 192
     86a:	c7 01       	movw	r24, r14
     86c:	b6 01       	movw	r22, r12
     86e:	0e 94 50 09 	call	0x12a0	; 0x12a0 <__gesf2>
     872:	18 16       	cp	r1, r24
     874:	ac f5       	brge	.+106    	; 0x8e0 <__stack+0x81>
     876:	20 e0       	ldi	r18, 0x00	; 0
     878:	30 e0       	ldi	r19, 0x00	; 0
     87a:	40 e0       	ldi	r20, 0x00	; 0
     87c:	50 e4       	ldi	r21, 0x40	; 64
     87e:	c7 01       	movw	r24, r14
     880:	b6 01       	movw	r22, r12
     882:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <__cmpsf2>
     886:	88 23       	and	r24, r24
     888:	74 f5       	brge	.+92     	; 0x8e6 <__stack+0x87>
     88a:	20 e0       	ldi	r18, 0x00	; 0
     88c:	30 e0       	ldi	r19, 0x00	; 0
     88e:	40 e4       	ldi	r20, 0x40	; 64
     890:	50 ec       	ldi	r21, 0xC0	; 192
     892:	c5 01       	movw	r24, r10
     894:	b4 01       	movw	r22, r8
     896:	0e 94 50 09 	call	0x12a0	; 0x12a0 <__gesf2>
     89a:	18 16       	cp	r1, r24
     89c:	3c f5       	brge	.+78     	; 0x8ec <__stack+0x8d>
     89e:	20 e0       	ldi	r18, 0x00	; 0
     8a0:	30 e0       	ldi	r19, 0x00	; 0
     8a2:	40 e4       	ldi	r20, 0x40	; 64
     8a4:	50 e4       	ldi	r21, 0x40	; 64
     8a6:	c5 01       	movw	r24, r10
     8a8:	b4 01       	movw	r22, r8
     8aa:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <__cmpsf2>
     8ae:	88 23       	and	r24, r24
     8b0:	04 f5       	brge	.+64     	; 0x8f2 <__stack+0x93>
     8b2:	20 e0       	ldi	r18, 0x00	; 0
     8b4:	30 e0       	ldi	r19, 0x00	; 0
     8b6:	40 e0       	ldi	r20, 0x00	; 0
     8b8:	51 e4       	ldi	r21, 0x41	; 65
     8ba:	c3 01       	movw	r24, r6
     8bc:	b2 01       	movw	r22, r4
     8be:	0e 94 50 09 	call	0x12a0	; 0x12a0 <__gesf2>
     8c2:	88 23       	and	r24, r24
     8c4:	cc f0       	brlt	.+50     	; 0x8f8 <__stack+0x99>
     8c6:	20 e0       	ldi	r18, 0x00	; 0
     8c8:	30 e0       	ldi	r19, 0x00	; 0
     8ca:	40 e1       	ldi	r20, 0x10	; 16
     8cc:	51 e4       	ldi	r21, 0x41	; 65
     8ce:	c3 01       	movw	r24, r6
     8d0:	b2 01       	movw	r22, r4
     8d2:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <__cmpsf2>
     8d6:	18 16       	cp	r1, r24
     8d8:	94 f4       	brge	.+36     	; 0x8fe <__stack+0x9f>
     8da:	81 e0       	ldi	r24, 0x01	; 1
     8dc:	90 e0       	ldi	r25, 0x00	; 0
     8de:	11 c0       	rjmp	.+34     	; 0x902 <__stack+0xa3>
     8e0:	81 e0       	ldi	r24, 0x01	; 1
     8e2:	90 e0       	ldi	r25, 0x00	; 0
     8e4:	0e c0       	rjmp	.+28     	; 0x902 <__stack+0xa3>
     8e6:	81 e0       	ldi	r24, 0x01	; 1
     8e8:	90 e0       	ldi	r25, 0x00	; 0
     8ea:	0b c0       	rjmp	.+22     	; 0x902 <__stack+0xa3>
     8ec:	81 e0       	ldi	r24, 0x01	; 1
     8ee:	90 e0       	ldi	r25, 0x00	; 0
     8f0:	08 c0       	rjmp	.+16     	; 0x902 <__stack+0xa3>
     8f2:	81 e0       	ldi	r24, 0x01	; 1
     8f4:	90 e0       	ldi	r25, 0x00	; 0
     8f6:	05 c0       	rjmp	.+10     	; 0x902 <__stack+0xa3>
     8f8:	81 e0       	ldi	r24, 0x01	; 1
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	02 c0       	rjmp	.+4      	; 0x902 <__stack+0xa3>
     8fe:	80 e0       	ldi	r24, 0x00	; 0
     900:	90 e0       	ldi	r25, 0x00	; 0
     902:	1f 91       	pop	r17
     904:	0f 91       	pop	r16
     906:	ff 90       	pop	r15
     908:	ef 90       	pop	r14
     90a:	df 90       	pop	r13
     90c:	cf 90       	pop	r12
     90e:	bf 90       	pop	r11
     910:	af 90       	pop	r10
     912:	9f 90       	pop	r9
     914:	8f 90       	pop	r8
     916:	7f 90       	pop	r7
     918:	6f 90       	pop	r6
     91a:	5f 90       	pop	r5
     91c:	4f 90       	pop	r4
     91e:	08 95       	ret

00000920 <PWM_init>:
     920:	89 e6       	ldi	r24, 0x69	; 105
     922:	83 bf       	out	0x33, r24	; 51
     924:	87 b3       	in	r24, 0x17	; 23
     926:	88 60       	ori	r24, 0x08	; 8
     928:	87 bb       	out	0x17, r24	; 23
     92a:	08 95       	ret

0000092c <USART_initialize>:
     92c:	8a b1       	in	r24, 0x0a	; 10
     92e:	88 61       	ori	r24, 0x18	; 24
     930:	8a b9       	out	0x0a, r24	; 10
     932:	80 b5       	in	r24, 0x20	; 32
     934:	86 68       	ori	r24, 0x86	; 134
     936:	80 bd       	out	0x20, r24	; 32
     938:	83 e3       	ldi	r24, 0x33	; 51
     93a:	89 b9       	out	0x09, r24	; 9
     93c:	10 bc       	out	0x20, r1	; 32
     93e:	08 95       	ret

00000940 <USART_transmit>:
     940:	5d 9b       	sbis	0x0b, 5	; 11
     942:	fe cf       	rjmp	.-4      	; 0x940 <USART_transmit>
     944:	8c b9       	out	0x0c, r24	; 12
     946:	08 95       	ret

00000948 <sendMessage>:

void sendMessage(char* msg,char* longtitude,char* latitude)
{
     948:	ef 92       	push	r14
     94a:	ff 92       	push	r15
     94c:	0f 93       	push	r16
     94e:	1f 93       	push	r17
     950:	cf 93       	push	r28
     952:	df 93       	push	r29
     954:	cd b7       	in	r28, 0x3d	; 61
     956:	de b7       	in	r29, 0x3e	; 62
     958:	a3 97       	sbiw	r28, 0x23	; 35
     95a:	0f b6       	in	r0, 0x3f	; 63
     95c:	f8 94       	cli
     95e:	de bf       	out	0x3e, r29	; 62
     960:	0f be       	out	0x3f, r0	; 63
     962:	cd bf       	out	0x3d, r28	; 61
     964:	7c 01       	movw	r14, r24
     966:	8a 01       	movw	r16, r20
	
	unsigned char cmd_1[4]="AT";
     968:	81 e4       	ldi	r24, 0x41	; 65
     96a:	94 e5       	ldi	r25, 0x54	; 84
     96c:	9a 83       	std	Y+2, r25	; 0x02
     96e:	89 83       	std	Y+1, r24	; 0x01
     970:	1c 82       	std	Y+4, r1	; 0x04
     972:	1b 82       	std	Y+3, r1	; 0x03
	unsigned char cmd_2[10]="AT+CMGF=1";
     974:	8a e0       	ldi	r24, 0x0A	; 10
     976:	ed eb       	ldi	r30, 0xBD	; 189
     978:	f0 e0       	ldi	r31, 0x00	; 0
     97a:	de 01       	movw	r26, r28
     97c:	15 96       	adiw	r26, 0x05	; 5
     97e:	01 90       	ld	r0, Z+
     980:	0d 92       	st	X+, r0
     982:	8a 95       	dec	r24
     984:	e1 f7       	brne	.-8      	; 0x97e <sendMessage+0x36>
	unsigned char cmd_3[10]="AT+CMGS=";
     986:	89 e0       	ldi	r24, 0x09	; 9
     988:	e0 e6       	ldi	r30, 0x60	; 96
     98a:	f0 e0       	ldi	r31, 0x00	; 0
     98c:	de 01       	movw	r26, r28
     98e:	1f 96       	adiw	r26, 0x0f	; 15
     990:	01 90       	ld	r0, Z+
     992:	0d 92       	st	X+, r0
     994:	8a 95       	dec	r24
     996:	e1 f7       	brne	.-8      	; 0x990 <sendMessage+0x48>
     998:	18 8e       	std	Y+24, r1	; 0x18
	char* cmd_4 = msg;
	strcat(cmd_4,"\rLocation\r   Longitude : ");
     99a:	d7 01       	movw	r26, r14
     99c:	0d 90       	ld	r0, X+
     99e:	00 20       	and	r0, r0
     9a0:	e9 f7       	brne	.-6      	; 0x99c <sendMessage+0x54>
     9a2:	11 97       	sbiw	r26, 0x01	; 1
     9a4:	8a e1       	ldi	r24, 0x1A	; 26
     9a6:	e3 e7       	ldi	r30, 0x73	; 115
     9a8:	f0 e0       	ldi	r31, 0x00	; 0
     9aa:	01 90       	ld	r0, Z+
     9ac:	0d 92       	st	X+, r0
     9ae:	8a 95       	dec	r24
     9b0:	e1 f7       	brne	.-8      	; 0x9aa <sendMessage+0x62>
	strcat(cmd_4,longtitude);
     9b2:	c7 01       	movw	r24, r14
     9b4:	0e 94 2f 0a 	call	0x145e	; 0x145e <strcat>
	strcat(cmd_4,"\r   Latitude : ");
     9b8:	d7 01       	movw	r26, r14
     9ba:	0d 90       	ld	r0, X+
     9bc:	00 20       	and	r0, r0
     9be:	e9 f7       	brne	.-6      	; 0x9ba <sendMessage+0x72>
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	80 e1       	ldi	r24, 0x10	; 16
     9c4:	ed e8       	ldi	r30, 0x8D	; 141
     9c6:	f0 e0       	ldi	r31, 0x00	; 0
     9c8:	01 90       	ld	r0, Z+
     9ca:	0d 92       	st	X+, r0
     9cc:	8a 95       	dec	r24
     9ce:	e1 f7       	brne	.-8      	; 0x9c8 <sendMessage+0x80>
	strcat(cmd_4,latitude);
     9d0:	b8 01       	movw	r22, r16
     9d2:	c7 01       	movw	r24, r14
     9d4:	0e 94 2f 0a 	call	0x145e	; 0x145e <strcat>
	unsigned char num[11] = "0771234567";
     9d8:	8b e0       	ldi	r24, 0x0B	; 11
     9da:	e7 ec       	ldi	r30, 0xC7	; 199
     9dc:	f0 e0       	ldi	r31, 0x00	; 0
     9de:	de 01       	movw	r26, r28
     9e0:	59 96       	adiw	r26, 0x19	; 25
     9e2:	01 90       	ld	r0, Z+
     9e4:	0d 92       	st	X+, r0
     9e6:	8a 95       	dec	r24
     9e8:	e1 f7       	brne	.-8      	; 0x9e2 <sendMessage+0x9a>
	LCD_Clear();
     9ea:	0e 94 b8 01 	call	0x370	; 0x370 <LCD_Clear>
	LCD_String_xy(1,0,"Message");
     9ee:	4d e9       	ldi	r20, 0x9D	; 157
     9f0:	50 e0       	ldi	r21, 0x00	; 0
     9f2:	60 e0       	ldi	r22, 0x00	; 0
     9f4:	81 e0       	ldi	r24, 0x01	; 1
     9f6:	0e 94 a0 01 	call	0x340	; 0x340 <LCD_String_xy>
	LCD_String_xy(2,3,"Forwarding");
     9fa:	45 ea       	ldi	r20, 0xA5	; 165
     9fc:	50 e0       	ldi	r21, 0x00	; 0
     9fe:	63 e0       	ldi	r22, 0x03	; 3
     a00:	82 e0       	ldi	r24, 0x02	; 2
     a02:	0e 94 a0 01 	call	0x340	; 0x340 <LCD_String_xy>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     a06:	2f ef       	ldi	r18, 0xFF	; 255
     a08:	84 e3       	ldi	r24, 0x34	; 52
     a0a:	9c e0       	ldi	r25, 0x0C	; 12
     a0c:	21 50       	subi	r18, 0x01	; 1
     a0e:	80 40       	sbci	r24, 0x00	; 0
     a10:	90 40       	sbci	r25, 0x00	; 0
     a12:	e1 f7       	brne	.-8      	; 0xa0c <sendMessage+0xc4>
     a14:	00 c0       	rjmp	.+0      	; 0xa16 <sendMessage+0xce>
     a16:	00 00       	nop
	//USART_send(msg);
	_delay_ms(500);
	
	
	for (int i=0;cmd_1[i]!='\0';i++) /*checking communication*/
     a18:	00 e0       	ldi	r16, 0x00	; 0
     a1a:	10 e0       	ldi	r17, 0x00	; 0
     a1c:	0d c0       	rjmp	.+26     	; 0xa38 <sendMessage+0xf0>
	{
		USART_transmit(cmd_1[i]);
     a1e:	0e 94 a0 04 	call	0x940	; 0x940 <USART_transmit>
     a22:	2f ef       	ldi	r18, 0xFF	; 255
     a24:	80 e7       	ldi	r24, 0x70	; 112
     a26:	92 e0       	ldi	r25, 0x02	; 2
     a28:	21 50       	subi	r18, 0x01	; 1
     a2a:	80 40       	sbci	r24, 0x00	; 0
     a2c:	90 40       	sbci	r25, 0x00	; 0
     a2e:	e1 f7       	brne	.-8      	; 0xa28 <sendMessage+0xe0>
     a30:	00 c0       	rjmp	.+0      	; 0xa32 <sendMessage+0xea>
     a32:	00 00       	nop
	LCD_String_xy(2,3,"Forwarding");
	//USART_send(msg);
	_delay_ms(500);
	
	
	for (int i=0;cmd_1[i]!='\0';i++) /*checking communication*/
     a34:	0f 5f       	subi	r16, 0xFF	; 255
     a36:	1f 4f       	sbci	r17, 0xFF	; 255
     a38:	e1 e0       	ldi	r30, 0x01	; 1
     a3a:	f0 e0       	ldi	r31, 0x00	; 0
     a3c:	ec 0f       	add	r30, r28
     a3e:	fd 1f       	adc	r31, r29
     a40:	e0 0f       	add	r30, r16
     a42:	f1 1f       	adc	r31, r17
     a44:	80 81       	ld	r24, Z
     a46:	81 11       	cpse	r24, r1
     a48:	ea cf       	rjmp	.-44     	; 0xa1e <sendMessage+0xd6>
	{
		USART_transmit(cmd_1[i]);
		_delay_ms(100);
	}
	USART_transmit('\r'); /*carriage return ---> begining from the first line without going to next line*/
     a4a:	8d e0       	ldi	r24, 0x0D	; 13
     a4c:	0e 94 a0 04 	call	0x940	; 0x940 <USART_transmit>
     a50:	2f ef       	ldi	r18, 0xFF	; 255
     a52:	81 ee       	ldi	r24, 0xE1	; 225
     a54:	94 e0       	ldi	r25, 0x04	; 4
     a56:	21 50       	subi	r18, 0x01	; 1
     a58:	80 40       	sbci	r24, 0x00	; 0
     a5a:	90 40       	sbci	r25, 0x00	; 0
     a5c:	e1 f7       	brne	.-8      	; 0xa56 <sendMessage+0x10e>
     a5e:	00 c0       	rjmp	.+0      	; 0xa60 <sendMessage+0x118>
     a60:	00 00       	nop
	_delay_ms(200);
	
	for (int i=0;cmd_2[i]!='\0';i++) /* set the operating mode to SMS text mode*/
     a62:	00 e0       	ldi	r16, 0x00	; 0
     a64:	10 e0       	ldi	r17, 0x00	; 0
     a66:	0d c0       	rjmp	.+26     	; 0xa82 <sendMessage+0x13a>
	{
		USART_transmit(cmd_2[i]);
     a68:	0e 94 a0 04 	call	0x940	; 0x940 <USART_transmit>
     a6c:	2f ef       	ldi	r18, 0xFF	; 255
     a6e:	80 e7       	ldi	r24, 0x70	; 112
     a70:	92 e0       	ldi	r25, 0x02	; 2
     a72:	21 50       	subi	r18, 0x01	; 1
     a74:	80 40       	sbci	r24, 0x00	; 0
     a76:	90 40       	sbci	r25, 0x00	; 0
     a78:	e1 f7       	brne	.-8      	; 0xa72 <sendMessage+0x12a>
     a7a:	00 c0       	rjmp	.+0      	; 0xa7c <sendMessage+0x134>
     a7c:	00 00       	nop
		_delay_ms(100);
	}
	USART_transmit('\r'); /*carriage return ---> begining from the first line without going to next line*/
	_delay_ms(200);
	
	for (int i=0;cmd_2[i]!='\0';i++) /* set the operating mode to SMS text mode*/
     a7e:	0f 5f       	subi	r16, 0xFF	; 255
     a80:	1f 4f       	sbci	r17, 0xFF	; 255
     a82:	e5 e0       	ldi	r30, 0x05	; 5
     a84:	f0 e0       	ldi	r31, 0x00	; 0
     a86:	ec 0f       	add	r30, r28
     a88:	fd 1f       	adc	r31, r29
     a8a:	e0 0f       	add	r30, r16
     a8c:	f1 1f       	adc	r31, r17
     a8e:	80 81       	ld	r24, Z
     a90:	81 11       	cpse	r24, r1
     a92:	ea cf       	rjmp	.-44     	; 0xa68 <sendMessage+0x120>
	{
		USART_transmit(cmd_2[i]);
		_delay_ms(100);
	}
	USART_transmit('\r');
     a94:	8d e0       	ldi	r24, 0x0D	; 13
     a96:	0e 94 a0 04 	call	0x940	; 0x940 <USART_transmit>
     a9a:	2f ef       	ldi	r18, 0xFF	; 255
     a9c:	81 ee       	ldi	r24, 0xE1	; 225
     a9e:	94 e0       	ldi	r25, 0x04	; 4
     aa0:	21 50       	subi	r18, 0x01	; 1
     aa2:	80 40       	sbci	r24, 0x00	; 0
     aa4:	90 40       	sbci	r25, 0x00	; 0
     aa6:	e1 f7       	brne	.-8      	; 0xaa0 <sendMessage+0x158>
     aa8:	00 c0       	rjmp	.+0      	; 0xaaa <sendMessage+0x162>
     aaa:	00 00       	nop
	_delay_ms(200);
	
	for (int i=0;cmd_3[i]!='\0';i++) /* send SMS in text mode*/
     aac:	00 e0       	ldi	r16, 0x00	; 0
     aae:	10 e0       	ldi	r17, 0x00	; 0
     ab0:	0d c0       	rjmp	.+26     	; 0xacc <sendMessage+0x184>
	{
		USART_transmit(cmd_3[i]);
     ab2:	0e 94 a0 04 	call	0x940	; 0x940 <USART_transmit>
     ab6:	2f ef       	ldi	r18, 0xFF	; 255
     ab8:	80 e7       	ldi	r24, 0x70	; 112
     aba:	92 e0       	ldi	r25, 0x02	; 2
     abc:	21 50       	subi	r18, 0x01	; 1
     abe:	80 40       	sbci	r24, 0x00	; 0
     ac0:	90 40       	sbci	r25, 0x00	; 0
     ac2:	e1 f7       	brne	.-8      	; 0xabc <sendMessage+0x174>
     ac4:	00 c0       	rjmp	.+0      	; 0xac6 <sendMessage+0x17e>
     ac6:	00 00       	nop
		_delay_ms(100);
	}
	USART_transmit('\r');
	_delay_ms(200);
	
	for (int i=0;cmd_3[i]!='\0';i++) /* send SMS in text mode*/
     ac8:	0f 5f       	subi	r16, 0xFF	; 255
     aca:	1f 4f       	sbci	r17, 0xFF	; 255
     acc:	ef e0       	ldi	r30, 0x0F	; 15
     ace:	f0 e0       	ldi	r31, 0x00	; 0
     ad0:	ec 0f       	add	r30, r28
     ad2:	fd 1f       	adc	r31, r29
     ad4:	e0 0f       	add	r30, r16
     ad6:	f1 1f       	adc	r31, r17
     ad8:	80 81       	ld	r24, Z
     ada:	81 11       	cpse	r24, r1
     adc:	ea cf       	rjmp	.-44     	; 0xab2 <sendMessage+0x16a>
	{
		USART_transmit(cmd_3[i]);
		_delay_ms(100);
	}
	UDR='"';
     ade:	82 e2       	ldi	r24, 0x22	; 34
     ae0:	8c b9       	out	0x0c, r24	; 12
     ae2:	2f ef       	ldi	r18, 0xFF	; 255
     ae4:	80 e7       	ldi	r24, 0x70	; 112
     ae6:	92 e0       	ldi	r25, 0x02	; 2
     ae8:	21 50       	subi	r18, 0x01	; 1
     aea:	80 40       	sbci	r24, 0x00	; 0
     aec:	90 40       	sbci	r25, 0x00	; 0
     aee:	e1 f7       	brne	.-8      	; 0xae8 <sendMessage+0x1a0>
     af0:	00 c0       	rjmp	.+0      	; 0xaf2 <sendMessage+0x1aa>
     af2:	00 00       	nop
	_delay_ms(100);
	for (int i=0;num[i]!='\0';i++) /* SMS to be sent */
     af4:	00 e0       	ldi	r16, 0x00	; 0
     af6:	10 e0       	ldi	r17, 0x00	; 0
     af8:	0d c0       	rjmp	.+26     	; 0xb14 <sendMessage+0x1cc>
	{
		USART_transmit(num[i]);
     afa:	0e 94 a0 04 	call	0x940	; 0x940 <USART_transmit>
     afe:	2f ef       	ldi	r18, 0xFF	; 255
     b00:	80 e7       	ldi	r24, 0x70	; 112
     b02:	92 e0       	ldi	r25, 0x02	; 2
     b04:	21 50       	subi	r18, 0x01	; 1
     b06:	80 40       	sbci	r24, 0x00	; 0
     b08:	90 40       	sbci	r25, 0x00	; 0
     b0a:	e1 f7       	brne	.-8      	; 0xb04 <sendMessage+0x1bc>
     b0c:	00 c0       	rjmp	.+0      	; 0xb0e <sendMessage+0x1c6>
     b0e:	00 00       	nop
		USART_transmit(cmd_3[i]);
		_delay_ms(100);
	}
	UDR='"';
	_delay_ms(100);
	for (int i=0;num[i]!='\0';i++) /* SMS to be sent */
     b10:	0f 5f       	subi	r16, 0xFF	; 255
     b12:	1f 4f       	sbci	r17, 0xFF	; 255
     b14:	e9 e1       	ldi	r30, 0x19	; 25
     b16:	f0 e0       	ldi	r31, 0x00	; 0
     b18:	ec 0f       	add	r30, r28
     b1a:	fd 1f       	adc	r31, r29
     b1c:	e0 0f       	add	r30, r16
     b1e:	f1 1f       	adc	r31, r17
     b20:	80 81       	ld	r24, Z
     b22:	81 11       	cpse	r24, r1
     b24:	ea cf       	rjmp	.-44     	; 0xafa <sendMessage+0x1b2>
	{
		USART_transmit(num[i]);
		_delay_ms(100);
	}
	UDR='"';
     b26:	82 e2       	ldi	r24, 0x22	; 34
     b28:	8c b9       	out	0x0c, r24	; 12
     b2a:	2f ef       	ldi	r18, 0xFF	; 255
     b2c:	80 e7       	ldi	r24, 0x70	; 112
     b2e:	92 e0       	ldi	r25, 0x02	; 2
     b30:	21 50       	subi	r18, 0x01	; 1
     b32:	80 40       	sbci	r24, 0x00	; 0
     b34:	90 40       	sbci	r25, 0x00	; 0
     b36:	e1 f7       	brne	.-8      	; 0xb30 <sendMessage+0x1e8>
     b38:	00 c0       	rjmp	.+0      	; 0xb3a <sendMessage+0x1f2>
     b3a:	00 00       	nop
	_delay_ms(100);
	UDR='\r';
     b3c:	8d e0       	ldi	r24, 0x0D	; 13
     b3e:	8c b9       	out	0x0c, r24	; 12
     b40:	2f ef       	ldi	r18, 0xFF	; 255
     b42:	81 ee       	ldi	r24, 0xE1	; 225
     b44:	94 e0       	ldi	r25, 0x04	; 4
     b46:	21 50       	subi	r18, 0x01	; 1
     b48:	80 40       	sbci	r24, 0x00	; 0
     b4a:	90 40       	sbci	r25, 0x00	; 0
     b4c:	e1 f7       	brne	.-8      	; 0xb46 <sendMessage+0x1fe>
     b4e:	00 c0       	rjmp	.+0      	; 0xb50 <sendMessage+0x208>
     b50:	00 00       	nop
	_delay_ms(200);

	for (int i=0;cmd_4[i]!='\0';i++) /* message */
     b52:	00 e0       	ldi	r16, 0x00	; 0
     b54:	10 e0       	ldi	r17, 0x00	; 0
     b56:	0d c0       	rjmp	.+26     	; 0xb72 <sendMessage+0x22a>
	{
		USART_transmit(cmd_4[i]);
     b58:	0e 94 a0 04 	call	0x940	; 0x940 <USART_transmit>
     b5c:	2f ef       	ldi	r18, 0xFF	; 255
     b5e:	80 e7       	ldi	r24, 0x70	; 112
     b60:	92 e0       	ldi	r25, 0x02	; 2
     b62:	21 50       	subi	r18, 0x01	; 1
     b64:	80 40       	sbci	r24, 0x00	; 0
     b66:	90 40       	sbci	r25, 0x00	; 0
     b68:	e1 f7       	brne	.-8      	; 0xb62 <sendMessage+0x21a>
     b6a:	00 c0       	rjmp	.+0      	; 0xb6c <sendMessage+0x224>
     b6c:	00 00       	nop
	UDR='"';
	_delay_ms(100);
	UDR='\r';
	_delay_ms(200);

	for (int i=0;cmd_4[i]!='\0';i++) /* message */
     b6e:	0f 5f       	subi	r16, 0xFF	; 255
     b70:	1f 4f       	sbci	r17, 0xFF	; 255
     b72:	f7 01       	movw	r30, r14
     b74:	e0 0f       	add	r30, r16
     b76:	f1 1f       	adc	r31, r17
     b78:	80 81       	ld	r24, Z
     b7a:	81 11       	cpse	r24, r1
     b7c:	ed cf       	rjmp	.-38     	; 0xb58 <sendMessage+0x210>
     b7e:	2f ef       	ldi	r18, 0xFF	; 255
     b80:	81 ee       	ldi	r24, 0xE1	; 225
     b82:	94 e0       	ldi	r25, 0x04	; 4
     b84:	21 50       	subi	r18, 0x01	; 1
     b86:	80 40       	sbci	r24, 0x00	; 0
     b88:	90 40       	sbci	r25, 0x00	; 0
     b8a:	e1 f7       	brne	.-8      	; 0xb84 <sendMessage+0x23c>
     b8c:	00 c0       	rjmp	.+0      	; 0xb8e <sendMessage+0x246>
     b8e:	00 00       	nop
	{
		USART_transmit(cmd_4[i]);
		_delay_ms(100);
	}
	_delay_ms(200);
	LCD_Clear();
     b90:	0e 94 b8 01 	call	0x370	; 0x370 <LCD_Clear>
	LCD_String_xy(1,0,"Message sent");
     b94:	40 eb       	ldi	r20, 0xB0	; 176
     b96:	50 e0       	ldi	r21, 0x00	; 0
     b98:	60 e0       	ldi	r22, 0x00	; 0
     b9a:	81 e0       	ldi	r24, 0x01	; 1
     b9c:	0e 94 a0 01 	call	0x340	; 0x340 <LCD_String_xy>
     ba0:	2f ef       	ldi	r18, 0xFF	; 255
     ba2:	8d e3       	ldi	r24, 0x3D	; 61
     ba4:	99 e4       	ldi	r25, 0x49	; 73
     ba6:	21 50       	subi	r18, 0x01	; 1
     ba8:	80 40       	sbci	r24, 0x00	; 0
     baa:	90 40       	sbci	r25, 0x00	; 0
     bac:	e1 f7       	brne	.-8      	; 0xba6 <sendMessage+0x25e>
     bae:	00 c0       	rjmp	.+0      	; 0xbb0 <sendMessage+0x268>
     bb0:	00 00       	nop
	_delay_ms(3000);
	LCD_Clear();
     bb2:	0e 94 b8 01 	call	0x370	; 0x370 <LCD_Clear>
     bb6:	a3 96       	adiw	r28, 0x23	; 35
     bb8:	0f b6       	in	r0, 0x3f	; 63
     bba:	f8 94       	cli
     bbc:	de bf       	out	0x3e, r29	; 62
     bbe:	0f be       	out	0x3f, r0	; 63
     bc0:	cd bf       	out	0x3d, r28	; 61
     bc2:	df 91       	pop	r29
     bc4:	cf 91       	pop	r28
     bc6:	1f 91       	pop	r17
     bc8:	0f 91       	pop	r16
     bca:	ff 90       	pop	r15
     bcc:	ef 90       	pop	r14
     bce:	08 95       	ret

00000bd0 <ringAlarm>:
		}
	}
}

void ringAlarm(){
	portHigh(PORTD,buzzer);//buzzer
     bd0:	82 b3       	in	r24, 0x12	; 18
     bd2:	80 68       	ori	r24, 0x80	; 128
     bd4:	82 bb       	out	0x12, r24	; 18
     bd6:	08 95       	ret

00000bd8 <stopAlarm>:
}
void stopAlarm(){
	portLow(PORTD,buzzer);
     bd8:	82 b3       	in	r24, 0x12	; 18
     bda:	8f 77       	andi	r24, 0x7F	; 127
     bdc:	82 bb       	out	0x12, r24	; 18
     bde:	08 95       	ret

00000be0 <onHazardLight>:
}
void onHazardLight(){
	portHigh(PORTD,led);
     be0:	82 b3       	in	r24, 0x12	; 18
     be2:	80 64       	ori	r24, 0x40	; 64
     be4:	82 bb       	out	0x12, r24	; 18
     be6:	08 95       	ret

00000be8 <offHazardLight>:
}
void offHazardLight(){
	portLow(PORTD,led);
     be8:	82 b3       	in	r24, 0x12	; 18
     bea:	8f 7b       	andi	r24, 0xBF	; 191
     bec:	82 bb       	out	0x12, r24	; 18
     bee:	08 95       	ret

00000bf0 <playRadio>:
}
void playRadio(){
	portHigh(PORTD,musicSystem);
     bf0:	82 b3       	in	r24, 0x12	; 18
     bf2:	80 62       	ori	r24, 0x20	; 32
     bf4:	82 bb       	out	0x12, r24	; 18
     bf6:	08 95       	ret

00000bf8 <getAllValuesGps>:
}
void getAllValuesGps(){
     bf8:	cf 93       	push	r28
     bfa:	df 93       	push	r29
		get_gpstime();                         // Extract Time in UTC- In this function the get the GPS time string type and convert as an integer and print that time
     bfc:	0e 94 04 02 	call	0x408	; 0x408 <get_gpstime>
		get_latitude(GGA_Pointers[0]);         // Extract Latitude- convert raw latitude value into degree format and pass that value as string
     c00:	cf e2       	ldi	r28, 0x2F	; 47
     c02:	d2 e0       	ldi	r29, 0x02	; 2
     c04:	88 81       	ld	r24, Y
     c06:	90 e0       	ldi	r25, 0x00	; 0
     c08:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <get_latitude>
		//degrees_buffer latitude
		strcpy(latitude,degrees_buffer);
     c0c:	6d eb       	ldi	r22, 0xBD	; 189
     c0e:	71 e0       	ldi	r23, 0x01	; 1
     c10:	8b ef       	ldi	r24, 0xFB	; 251
     c12:	91 e0       	ldi	r25, 0x01	; 1
     c14:	0e 94 3a 0a 	call	0x1474	; 0x1474 <strcpy>
		get_longitude(GGA_Pointers[2]);        /* Extract Longitude */
     c18:	8a 81       	ldd	r24, Y+2	; 0x02
     c1a:	90 e0       	ldi	r25, 0x00	; 0
     c1c:	0e 94 86 02 	call	0x50c	; 0x50c <get_longitude>
		//degrees_buffer longtitude
		strcpy(longtitude,degrees_buffer);
     c20:	6d eb       	ldi	r22, 0xBD	; 189
     c22:	71 e0       	ldi	r23, 0x01	; 1
     c24:	8c e1       	ldi	r24, 0x1C	; 28
     c26:	92 e0       	ldi	r25, 0x02	; 2
     c28:	0e 94 3a 0a 	call	0x1474	; 0x1474 <strcpy>
		//get_altitude(GGA_Pointers[7]);         /* Extract Altitude in meters*/ 
}
     c2c:	df 91       	pop	r29
     c2e:	cf 91       	pop	r28
     c30:	08 95       	ret

00000c32 <isDriverSleepingIR>:

int isDriverSleepingIR(){
	int timeInterval=40;
	int flag=0;
	for(int i=1;i<=timeInterval;i++){
     c32:	81 e0       	ldi	r24, 0x01	; 1
     c34:	90 e0       	ldi	r25, 0x00	; 0
		//get_altitude(GGA_Pointers[7]);         /* Extract Altitude in meters*/ 
}

int isDriverSleepingIR(){
	int timeInterval=40;
	int flag=0;
     c36:	20 e0       	ldi	r18, 0x00	; 0
     c38:	30 e0       	ldi	r19, 0x00	; 0
	for(int i=1;i<=timeInterval;i++){
     c3a:	11 c0       	rjmp	.+34     	; 0xc5e <isDriverSleepingIR+0x2c>
		if(pinRead(PINC,irsensor)==0x40){
     c3c:	9e 9b       	sbis	0x13, 6	; 19
     c3e:	03 c0       	rjmp	.+6      	; 0xc46 <isDriverSleepingIR+0x14>
			flag++;
     c40:	2f 5f       	subi	r18, 0xFF	; 255
     c42:	3f 4f       	sbci	r19, 0xFF	; 255
     c44:	02 c0       	rjmp	.+4      	; 0xc4a <isDriverSleepingIR+0x18>
		}else{
			flag--;
     c46:	21 50       	subi	r18, 0x01	; 1
     c48:	31 09       	sbc	r19, r1
     c4a:	4f e7       	ldi	r20, 0x7F	; 127
     c4c:	58 e3       	ldi	r21, 0x38	; 56
     c4e:	61 e0       	ldi	r22, 0x01	; 1
     c50:	41 50       	subi	r20, 0x01	; 1
     c52:	50 40       	sbci	r21, 0x00	; 0
     c54:	60 40       	sbci	r22, 0x00	; 0
     c56:	e1 f7       	brne	.-8      	; 0xc50 <isDriverSleepingIR+0x1e>
     c58:	00 c0       	rjmp	.+0      	; 0xc5a <isDriverSleepingIR+0x28>
     c5a:	00 00       	nop
}

int isDriverSleepingIR(){
	int timeInterval=40;
	int flag=0;
	for(int i=1;i<=timeInterval;i++){
     c5c:	01 96       	adiw	r24, 0x01	; 1
     c5e:	89 32       	cpi	r24, 0x29	; 41
     c60:	91 05       	cpc	r25, r1
     c62:	64 f3       	brlt	.-40     	; 0xc3c <isDriverSleepingIR+0xa>
		}else{
			flag--;
		}
		_delay_ms(50);
	}
	if(flag==timeInterval){
     c64:	28 32       	cpi	r18, 0x28	; 40
     c66:	31 05       	cpc	r19, r1
     c68:	19 f4       	brne	.+6      	; 0xc70 <isDriverSleepingIR+0x3e>
		return 1;
     c6a:	81 e0       	ldi	r24, 0x01	; 1
     c6c:	90 e0       	ldi	r25, 0x00	; 0
     c6e:	08 95       	ret
	}else{
		return 0; 
     c70:	80 e0       	ldi	r24, 0x00	; 0
     c72:	90 e0       	ldi	r25, 0x00	; 0
	}
}
     c74:	08 95       	ret

00000c76 <main>:
#define F_CPU 8000000UL
#include "headerfiles.h"
char longtitude[15];
char latitude[15];
int main(void){
     c76:	cf 93       	push	r28
     c78:	df 93       	push	r29
     c7a:	cd b7       	in	r28, 0x3d	; 61
     c7c:	de b7       	in	r29, 0x3e	; 62
     c7e:	29 97       	sbiw	r28, 0x09	; 9
     c80:	0f b6       	in	r0, 0x3f	; 63
     c82:	f8 94       	cli
     c84:	de bf       	out	0x3e, r29	; 62
     c86:	0f be       	out	0x3f, r0	; 63
     c88:	cd bf       	out	0x3d, r28	; 61
	start:
	GGA_Index=0;
     c8a:	10 92 fa 01 	sts	0x01FA, r1	; 0x8001fa <GGA_Index+0x1>
     c8e:	10 92 f9 01 	sts	0x01F9, r1	; 0x8001f9 <GGA_Index>
	setOutput(DDRD,led);
     c92:	81 b3       	in	r24, 0x11	; 17
     c94:	80 64       	ori	r24, 0x40	; 64
     c96:	81 bb       	out	0x11, r24	; 17
	setOutput(DDRD,buzzer);
     c98:	81 b3       	in	r24, 0x11	; 17
     c9a:	80 68       	ori	r24, 0x80	; 128
     c9c:	81 bb       	out	0x11, r24	; 17
	setOutput(DDRD,musicSystem);
     c9e:	81 b3       	in	r24, 0x11	; 17
     ca0:	80 62       	ori	r24, 0x20	; 32
     ca2:	81 bb       	out	0x11, r24	; 17
	LCD_Init();
     ca4:	0e 94 6f 01 	call	0x2de	; 0x2de <LCD_Init>
     ca8:	2f ef       	ldi	r18, 0xFF	; 255
     caa:	3d e3       	ldi	r19, 0x3D	; 61
     cac:	49 e4       	ldi	r20, 0x49	; 73
     cae:	21 50       	subi	r18, 0x01	; 1
     cb0:	30 40       	sbci	r19, 0x00	; 0
     cb2:	40 40       	sbci	r20, 0x00	; 0
     cb4:	e1 f7       	brne	.-8      	; 0xcae <main+0x38>
     cb6:	00 c0       	rjmp	.+0      	; 0xcb8 <main+0x42>
     cb8:	00 00       	nop
	_delay_ms(3000);/* wait for GPS receiver to initialize */
	USART_initialize(9600); /* GSM */
     cba:	60 e8       	ldi	r22, 0x80	; 128
     cbc:	75 e2       	ldi	r23, 0x25	; 37
     cbe:	80 e0       	ldi	r24, 0x00	; 0
     cc0:	90 e0       	ldi	r25, 0x00	; 0
     cc2:	0e 94 96 04 	call	0x92c	; 0x92c <USART_initialize>
	USART_Init(9600);/* GPS */
     cc6:	60 e8       	ldi	r22, 0x80	; 128
     cc8:	75 e2       	ldi	r23, 0x25	; 37
     cca:	80 e0       	ldi	r24, 0x00	; 0
     ccc:	90 e0       	ldi	r25, 0x00	; 0
     cce:	0e 94 7a 07 	call	0xef4	; 0xef4 <USART_Init>
	ADC_Init();
     cd2:	0e 94 bc 01 	call	0x378	; 0x378 <ADC_Init>
	sei();
     cd6:	78 94       	sei
	I2C_Init();
     cd8:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <I2C_Init>
	PWM_init();
     cdc:	0e 94 90 04 	call	0x920	; 0x920 <PWM_init>
	MPU6050_Init();
     ce0:	0e 94 21 03 	call	0x642	; 0x642 <MPU6050_Init>
	LCD_Clear();
     ce4:	0e 94 b8 01 	call	0x370	; 0x370 <LCD_Clear>
	float Xa,Ya,Za; // for gyroscope
	while (1){
		//flame detection
		if(pinRead(PINC,flame)==0x10){
     ce8:	9c 9b       	sbis	0x13, 4	; 19
     cea:	20 c0       	rjmp	.+64     	; 0xd2c <main+0xb6>
			ringAlarm();
     cec:	0e 94 e8 05 	call	0xbd0	; 0xbd0 <ringAlarm>
			onHazardLight();
     cf0:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <onHazardLight>
     cf4:	8f ef       	ldi	r24, 0xFF	; 255
     cf6:	99 e6       	ldi	r25, 0x69	; 105
     cf8:	28 e1       	ldi	r18, 0x18	; 24
     cfa:	81 50       	subi	r24, 0x01	; 1
     cfc:	90 40       	sbci	r25, 0x00	; 0
     cfe:	20 40       	sbci	r18, 0x00	; 0
     d00:	e1 f7       	brne	.-8      	; 0xcfa <main+0x84>
     d02:	00 c0       	rjmp	.+0      	; 0xd04 <main+0x8e>
     d04:	00 00       	nop
			_delay_ms(1000);
			stopAlarm();
     d06:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <stopAlarm>
			offHazardLight();
     d0a:	0e 94 f4 05 	call	0xbe8	; 0xbe8 <offHazardLight>
			LCD_String("Flame Detected !");
     d0e:	82 ed       	ldi	r24, 0xD2	; 210
     d10:	90 e0       	ldi	r25, 0x00	; 0
     d12:	0e 94 8a 01 	call	0x314	; 0x314 <LCD_String>
			getAllValuesGps();
     d16:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <getAllValuesGps>
			sendMessage("Flame Detected",longtitude,latitude);
     d1a:	4b ef       	ldi	r20, 0xFB	; 251
     d1c:	51 e0       	ldi	r21, 0x01	; 1
     d1e:	6c e1       	ldi	r22, 0x1C	; 28
     d20:	72 e0       	ldi	r23, 0x02	; 2
     d22:	83 ee       	ldi	r24, 0xE3	; 227
     d24:	90 e0       	ldi	r25, 0x00	; 0
     d26:	0e 94 a4 04 	call	0x948	; 0x948 <sendMessage>
     d2a:	de cf       	rjmp	.-68     	; 0xce8 <main+0x72>
		}
		else{
			//set wheel speed vehicle
			int val=ADC_Read(0);
     d2c:	80 e0       	ldi	r24, 0x00	; 0
     d2e:	0e 94 c4 01 	call	0x388	; 0x388 <ADC_Read>
			float speed=(val/1024.0)*255.0;
     d32:	bc 01       	movw	r22, r24
     d34:	99 0f       	add	r25, r25
     d36:	88 0b       	sbc	r24, r24
     d38:	99 0b       	sbc	r25, r25
     d3a:	0e 94 a0 08 	call	0x1140	; 0x1140 <__floatsisf>
     d3e:	20 e0       	ldi	r18, 0x00	; 0
     d40:	30 e0       	ldi	r19, 0x00	; 0
     d42:	40 e8       	ldi	r20, 0x80	; 128
     d44:	5a e3       	ldi	r21, 0x3A	; 58
     d46:	0e 94 55 09 	call	0x12aa	; 0x12aa <__mulsf3>
     d4a:	20 e0       	ldi	r18, 0x00	; 0
     d4c:	30 e0       	ldi	r19, 0x00	; 0
     d4e:	4f e7       	ldi	r20, 0x7F	; 127
     d50:	53 e4       	ldi	r21, 0x43	; 67
     d52:	0e 94 55 09 	call	0x12aa	; 0x12aa <__mulsf3>
			OCR0=(int)speed;
     d56:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__fixsfsi>
     d5a:	c6 2e       	mov	r12, r22
     d5c:	d7 2e       	mov	r13, r23
     d5e:	6c bf       	out	0x3c, r22	; 60
			//get pressure
			int value = ADC_Read(1);
     d60:	81 e0       	ldi	r24, 0x01	; 1
     d62:	0e 94 c4 01 	call	0x388	; 0x388 <ADC_Read>
			if (value > 107){// if value gt 107 vehicle is moving
     d66:	8c 36       	cpi	r24, 0x6C	; 108
     d68:	91 05       	cpc	r25, r1
     d6a:	0c f4       	brge	.+2      	; 0xd6e <main+0xf8>
     d6c:	bd cf       	rjmp	.-134    	; 0xce8 <main+0x72>
				if(pinRead(PINC,alcohol)==0x20){
     d6e:	9d 9b       	sbis	0x13, 5	; 19
     d70:	1e c0       	rjmp	.+60     	; 0xdae <main+0x138>
					LCD_Clear();
     d72:	0e 94 b8 01 	call	0x370	; 0x370 <LCD_Clear>
					LCD_String("Alcohol Detected"); 
     d76:	82 ef       	ldi	r24, 0xF2	; 242
     d78:	90 e0       	ldi	r25, 0x00	; 0
     d7a:	0e 94 8a 01 	call	0x314	; 0x314 <LCD_String>
					ringAlarm();
     d7e:	0e 94 e8 05 	call	0xbd0	; 0xbd0 <ringAlarm>
     d82:	3f ef       	ldi	r19, 0xFF	; 255
     d84:	49 e6       	ldi	r20, 0x69	; 105
     d86:	88 e1       	ldi	r24, 0x18	; 24
     d88:	31 50       	subi	r19, 0x01	; 1
     d8a:	40 40       	sbci	r20, 0x00	; 0
     d8c:	80 40       	sbci	r24, 0x00	; 0
     d8e:	e1 f7       	brne	.-8      	; 0xd88 <main+0x112>
     d90:	00 c0       	rjmp	.+0      	; 0xd92 <main+0x11c>
     d92:	00 00       	nop
					_delay_ms(1000);
					stopAlarm();
     d94:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <stopAlarm>
					getAllValuesGps();
     d98:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <getAllValuesGps>
					sendMessage("Alcohol Detected",longtitude,latitude);
     d9c:	4b ef       	ldi	r20, 0xFB	; 251
     d9e:	51 e0       	ldi	r21, 0x01	; 1
     da0:	6c e1       	ldi	r22, 0x1C	; 28
     da2:	72 e0       	ldi	r23, 0x02	; 2
     da4:	82 ef       	ldi	r24, 0xF2	; 242
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	0e 94 a4 04 	call	0x948	; 0x948 <sendMessage>
     dac:	9d cf       	rjmp	.-198    	; 0xce8 <main+0x72>
				}
				else{
					Read_RawValue();
     dae:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <Read_RawValue>
					Xa = (Acc_x/16384.0)*9.8066;
     db2:	20 e0       	ldi	r18, 0x00	; 0
     db4:	30 e0       	ldi	r19, 0x00	; 0
     db6:	40 e8       	ldi	r20, 0x80	; 128
     db8:	58 e3       	ldi	r21, 0x38	; 56
     dba:	60 91 f3 01 	lds	r22, 0x01F3	; 0x8001f3 <Acc_x>
     dbe:	70 91 f4 01 	lds	r23, 0x01F4	; 0x8001f4 <Acc_x+0x1>
     dc2:	80 91 f5 01 	lds	r24, 0x01F5	; 0x8001f5 <Acc_x+0x2>
     dc6:	90 91 f6 01 	lds	r25, 0x01F6	; 0x8001f6 <Acc_x+0x3>
     dca:	0e 94 55 09 	call	0x12aa	; 0x12aa <__mulsf3>
     dce:	25 ed       	ldi	r18, 0xD5	; 213
     dd0:	37 ee       	ldi	r19, 0xE7	; 231
     dd2:	4c e1       	ldi	r20, 0x1C	; 28
     dd4:	51 e4       	ldi	r21, 0x41	; 65
     dd6:	0e 94 55 09 	call	0x12aa	; 0x12aa <__mulsf3>
     dda:	4b 01       	movw	r8, r22
     ddc:	5c 01       	movw	r10, r24
					Ya = (Acc_y/16384.0)*9.8066;
     dde:	20 e0       	ldi	r18, 0x00	; 0
     de0:	30 e0       	ldi	r19, 0x00	; 0
     de2:	40 e8       	ldi	r20, 0x80	; 128
     de4:	58 e3       	ldi	r21, 0x38	; 56
     de6:	60 91 b9 01 	lds	r22, 0x01B9	; 0x8001b9 <Acc_y>
     dea:	70 91 ba 01 	lds	r23, 0x01BA	; 0x8001ba <Acc_y+0x1>
     dee:	80 91 bb 01 	lds	r24, 0x01BB	; 0x8001bb <Acc_y+0x2>
     df2:	90 91 bc 01 	lds	r25, 0x01BC	; 0x8001bc <Acc_y+0x3>
     df6:	0e 94 55 09 	call	0x12aa	; 0x12aa <__mulsf3>
     dfa:	25 ed       	ldi	r18, 0xD5	; 213
     dfc:	37 ee       	ldi	r19, 0xE7	; 231
     dfe:	4c e1       	ldi	r20, 0x1C	; 28
     e00:	51 e4       	ldi	r21, 0x41	; 65
     e02:	0e 94 55 09 	call	0x12aa	; 0x12aa <__mulsf3>
     e06:	2b 01       	movw	r4, r22
     e08:	3c 01       	movw	r6, r24
					Za = (Acc_z/16384.0)*9.8066;
     e0a:	20 e0       	ldi	r18, 0x00	; 0
     e0c:	30 e0       	ldi	r19, 0x00	; 0
     e0e:	40 e8       	ldi	r20, 0x80	; 128
     e10:	58 e3       	ldi	r21, 0x38	; 56
     e12:	60 91 17 01 	lds	r22, 0x0117	; 0x800117 <Acc_z>
     e16:	70 91 18 01 	lds	r23, 0x0118	; 0x800118 <Acc_z+0x1>
     e1a:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <Acc_z+0x2>
     e1e:	90 91 1a 01 	lds	r25, 0x011A	; 0x80011a <Acc_z+0x3>
     e22:	0e 94 55 09 	call	0x12aa	; 0x12aa <__mulsf3>
     e26:	25 ed       	ldi	r18, 0xD5	; 213
     e28:	37 ee       	ldi	r19, 0xE7	; 231
     e2a:	4c e1       	ldi	r20, 0x1C	; 28
     e2c:	51 e4       	ldi	r21, 0x41	; 65
     e2e:	0e 94 55 09 	call	0x12aa	; 0x12aa <__mulsf3>
     e32:	6e 83       	std	Y+6, r22	; 0x06
     e34:	7f 83       	std	Y+7, r23	; 0x07
     e36:	88 87       	std	Y+8, r24	; 0x08
     e38:	99 87       	std	Y+9, r25	; 0x09
					if(isDriverSleepingIR() && isDriverSleepingGyro(Xa,Ya,Za)){
     e3a:	0e 94 19 06 	call	0xc32	; 0xc32 <isDriverSleepingIR>
     e3e:	89 2b       	or	r24, r25
     e40:	09 f4       	brne	.+2      	; 0xe44 <main+0x1ce>
     e42:	52 cf       	rjmp	.-348    	; 0xce8 <main+0x72>
     e44:	ee 80       	ldd	r14, Y+6	; 0x06
     e46:	ff 80       	ldd	r15, Y+7	; 0x07
     e48:	08 85       	ldd	r16, Y+8	; 0x08
     e4a:	19 85       	ldd	r17, Y+9	; 0x09
     e4c:	a3 01       	movw	r20, r6
     e4e:	92 01       	movw	r18, r4
     e50:	c5 01       	movw	r24, r10
     e52:	b4 01       	movw	r22, r8
     e54:	0e 94 1d 04 	call	0x83a	; 0x83a <isDriverSleepingGyro>
     e58:	89 2b       	or	r24, r25
     e5a:	09 f4       	brne	.+2      	; 0xe5e <main+0x1e8>
     e5c:	45 cf       	rjmp	.-374    	; 0xce8 <main+0x72>
						ringAlarm();
     e5e:	0e 94 e8 05 	call	0xbd0	; 0xbd0 <ringAlarm>
						onHazardLight();
     e62:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <onHazardLight>
						for(int i=1;i<=20;i++){
     e66:	81 e0       	ldi	r24, 0x01	; 1
     e68:	90 e0       	ldi	r25, 0x00	; 0
     e6a:	11 c0       	rjmp	.+34     	; 0xe8e <main+0x218>
							if(pinRead(PINC,3)==0x08){
     e6c:	9b 9b       	sbis	0x13, 3	; 19
     e6e:	05 c0       	rjmp	.+10     	; 0xe7a <main+0x204>
								stopAlarm();
     e70:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <stopAlarm>
								offHazardLight();
     e74:	0e 94 f4 05 	call	0xbe8	; 0xbe8 <offHazardLight>
								goto start;
     e78:	08 cf       	rjmp	.-496    	; 0xc8a <main+0x14>
     e7a:	2f e7       	ldi	r18, 0x7F	; 127
     e7c:	3a e1       	ldi	r19, 0x1A	; 26
     e7e:	46 e0       	ldi	r20, 0x06	; 6
     e80:	21 50       	subi	r18, 0x01	; 1
     e82:	30 40       	sbci	r19, 0x00	; 0
     e84:	40 40       	sbci	r20, 0x00	; 0
     e86:	e1 f7       	brne	.-8      	; 0xe80 <main+0x20a>
     e88:	00 c0       	rjmp	.+0      	; 0xe8a <main+0x214>
     e8a:	00 00       	nop
					Ya = (Acc_y/16384.0)*9.8066;
					Za = (Acc_z/16384.0)*9.8066;
					if(isDriverSleepingIR() && isDriverSleepingGyro(Xa,Ya,Za)){
						ringAlarm();
						onHazardLight();
						for(int i=1;i<=20;i++){
     e8c:	01 96       	adiw	r24, 0x01	; 1
     e8e:	85 31       	cpi	r24, 0x15	; 21
     e90:	91 05       	cpc	r25, r1
     e92:	64 f3       	brlt	.-40     	; 0xe6c <main+0x1f6>
								offHazardLight();
								goto start;
							}
							_delay_ms(250);
						}
						LCD_String("Sleeping");
     e94:	8d e0       	ldi	r24, 0x0D	; 13
     e96:	91 e0       	ldi	r25, 0x01	; 1
     e98:	0e 94 8a 01 	call	0x314	; 0x314 <LCD_String>
						getAllValuesGps();
     e9c:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <getAllValuesGps>
						sendMessage("Driver is Sleeping",longtitude,latitude);
     ea0:	4b ef       	ldi	r20, 0xFB	; 251
     ea2:	51 e0       	ldi	r21, 0x01	; 1
     ea4:	6c e1       	ldi	r22, 0x1C	; 28
     ea6:	72 e0       	ldi	r23, 0x02	; 2
     ea8:	83 e0       	ldi	r24, 0x03	; 3
     eaa:	91 e0       	ldi	r25, 0x01	; 1
     eac:	0e 94 a4 04 	call	0x948	; 0x948 <sendMessage>
						playRadio();
     eb0:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <playRadio>
						//reduce speed of the vehicle
						for(int i=(int)speed;i>=20;i--){
     eb4:	1a c0       	rjmp	.+52     	; 0xeea <main+0x274>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     eb6:	4a e0       	ldi	r20, 0x0A	; 10
     eb8:	be 01       	movw	r22, r28
     eba:	6f 5f       	subi	r22, 0xFF	; 255
     ebc:	7f 4f       	sbci	r23, 0xFF	; 255
     ebe:	c6 01       	movw	r24, r12
     ec0:	0e 94 41 0a 	call	0x1482	; 0x1482 <__itoa_ncheck>
							char c[5];
							itoa(i,c,10);
							LCD_String(c);
     ec4:	ce 01       	movw	r24, r28
     ec6:	01 96       	adiw	r24, 0x01	; 1
     ec8:	0e 94 8a 01 	call	0x314	; 0x314 <LCD_String>
							OCR0=i;
     ecc:	cc be       	out	0x3c, r12	; 60
     ece:	8f ef       	ldi	r24, 0xFF	; 255
     ed0:	90 e7       	ldi	r25, 0x70	; 112
     ed2:	22 e0       	ldi	r18, 0x02	; 2
     ed4:	81 50       	subi	r24, 0x01	; 1
     ed6:	90 40       	sbci	r25, 0x00	; 0
     ed8:	20 40       	sbci	r18, 0x00	; 0
     eda:	e1 f7       	brne	.-8      	; 0xed4 <main+0x25e>
     edc:	00 c0       	rjmp	.+0      	; 0xede <main+0x268>
     ede:	00 00       	nop
							_delay_ms(100);
							LCD_Clear();
     ee0:	0e 94 b8 01 	call	0x370	; 0x370 <LCD_Clear>
						LCD_String("Sleeping");
						getAllValuesGps();
						sendMessage("Driver is Sleeping",longtitude,latitude);
						playRadio();
						//reduce speed of the vehicle
						for(int i=(int)speed;i>=20;i--){
     ee4:	31 e0       	ldi	r19, 0x01	; 1
     ee6:	c3 1a       	sub	r12, r19
     ee8:	d1 08       	sbc	r13, r1
     eea:	44 e1       	ldi	r20, 0x14	; 20
     eec:	c4 16       	cp	r12, r20
     eee:	d1 04       	cpc	r13, r1
     ef0:	14 f7       	brge	.-60     	; 0xeb6 <main+0x240>
     ef2:	ff cf       	rjmp	.-2      	; 0xef2 <main+0x27c>

00000ef4 <USART_Init>:

#include "USART_Interrupt.h"

void USART_Init(unsigned long BAUDRATE)				/* USART initialize function */
{
	UCSRB |= (1 << RXEN) | (1 << TXEN) | (1 << RXCIE);				/* Enable USART transmitter and receiver */
     ef4:	8a b1       	in	r24, 0x0a	; 10
     ef6:	88 69       	ori	r24, 0x98	; 152
     ef8:	8a b9       	out	0x0a, r24	; 10
	UCSRC |= (1 << URSEL)| (1 << UCSZ0) | (1 << UCSZ1);	/* Write USCRC for 8 bit data and 1 stop bit */
     efa:	80 b5       	in	r24, 0x20	; 32
     efc:	86 68       	ori	r24, 0x86	; 134
     efe:	80 bd       	out	0x20, r24	; 32
	UBRRL = BAUD_PRESCALE;							/* Load UBRRL with lower 8 bit of prescale value */
     f00:	83 e3       	ldi	r24, 0x33	; 51
     f02:	89 b9       	out	0x09, r24	; 9
	UBRRH = (BAUD_PRESCALE >> 8);					/* Load UBRRH with upper 8 bit of prescale value */
     f04:	10 bc       	out	0x20, r1	; 32
     f06:	08 95       	ret

00000f08 <__subsf3>:
     f08:	50 58       	subi	r21, 0x80	; 128

00000f0a <__addsf3>:
     f0a:	bb 27       	eor	r27, r27
     f0c:	aa 27       	eor	r26, r26
     f0e:	0e 94 9c 07 	call	0xf38	; 0xf38 <__addsf3x>
     f12:	0c 94 16 09 	jmp	0x122c	; 0x122c <__fp_round>
     f16:	0e 94 08 09 	call	0x1210	; 0x1210 <__fp_pscA>
     f1a:	38 f0       	brcs	.+14     	; 0xf2a <__addsf3+0x20>
     f1c:	0e 94 0f 09 	call	0x121e	; 0x121e <__fp_pscB>
     f20:	20 f0       	brcs	.+8      	; 0xf2a <__addsf3+0x20>
     f22:	39 f4       	brne	.+14     	; 0xf32 <__addsf3+0x28>
     f24:	9f 3f       	cpi	r25, 0xFF	; 255
     f26:	19 f4       	brne	.+6      	; 0xf2e <__addsf3+0x24>
     f28:	26 f4       	brtc	.+8      	; 0xf32 <__addsf3+0x28>
     f2a:	0c 94 05 09 	jmp	0x120a	; 0x120a <__fp_nan>
     f2e:	0e f4       	brtc	.+2      	; 0xf32 <__addsf3+0x28>
     f30:	e0 95       	com	r30
     f32:	e7 fb       	bst	r30, 7
     f34:	0c 94 ff 08 	jmp	0x11fe	; 0x11fe <__fp_inf>

00000f38 <__addsf3x>:
     f38:	e9 2f       	mov	r30, r25
     f3a:	0e 94 27 09 	call	0x124e	; 0x124e <__fp_split3>
     f3e:	58 f3       	brcs	.-42     	; 0xf16 <__addsf3+0xc>
     f40:	ba 17       	cp	r27, r26
     f42:	62 07       	cpc	r22, r18
     f44:	73 07       	cpc	r23, r19
     f46:	84 07       	cpc	r24, r20
     f48:	95 07       	cpc	r25, r21
     f4a:	20 f0       	brcs	.+8      	; 0xf54 <__addsf3x+0x1c>
     f4c:	79 f4       	brne	.+30     	; 0xf6c <__addsf3x+0x34>
     f4e:	a6 f5       	brtc	.+104    	; 0xfb8 <__addsf3x+0x80>
     f50:	0c 94 49 09 	jmp	0x1292	; 0x1292 <__fp_zero>
     f54:	0e f4       	brtc	.+2      	; 0xf58 <__addsf3x+0x20>
     f56:	e0 95       	com	r30
     f58:	0b 2e       	mov	r0, r27
     f5a:	ba 2f       	mov	r27, r26
     f5c:	a0 2d       	mov	r26, r0
     f5e:	0b 01       	movw	r0, r22
     f60:	b9 01       	movw	r22, r18
     f62:	90 01       	movw	r18, r0
     f64:	0c 01       	movw	r0, r24
     f66:	ca 01       	movw	r24, r20
     f68:	a0 01       	movw	r20, r0
     f6a:	11 24       	eor	r1, r1
     f6c:	ff 27       	eor	r31, r31
     f6e:	59 1b       	sub	r21, r25
     f70:	99 f0       	breq	.+38     	; 0xf98 <__addsf3x+0x60>
     f72:	59 3f       	cpi	r21, 0xF9	; 249
     f74:	50 f4       	brcc	.+20     	; 0xf8a <__addsf3x+0x52>
     f76:	50 3e       	cpi	r21, 0xE0	; 224
     f78:	68 f1       	brcs	.+90     	; 0xfd4 <__addsf3x+0x9c>
     f7a:	1a 16       	cp	r1, r26
     f7c:	f0 40       	sbci	r31, 0x00	; 0
     f7e:	a2 2f       	mov	r26, r18
     f80:	23 2f       	mov	r18, r19
     f82:	34 2f       	mov	r19, r20
     f84:	44 27       	eor	r20, r20
     f86:	58 5f       	subi	r21, 0xF8	; 248
     f88:	f3 cf       	rjmp	.-26     	; 0xf70 <__addsf3x+0x38>
     f8a:	46 95       	lsr	r20
     f8c:	37 95       	ror	r19
     f8e:	27 95       	ror	r18
     f90:	a7 95       	ror	r26
     f92:	f0 40       	sbci	r31, 0x00	; 0
     f94:	53 95       	inc	r21
     f96:	c9 f7       	brne	.-14     	; 0xf8a <__addsf3x+0x52>
     f98:	7e f4       	brtc	.+30     	; 0xfb8 <__addsf3x+0x80>
     f9a:	1f 16       	cp	r1, r31
     f9c:	ba 0b       	sbc	r27, r26
     f9e:	62 0b       	sbc	r22, r18
     fa0:	73 0b       	sbc	r23, r19
     fa2:	84 0b       	sbc	r24, r20
     fa4:	ba f0       	brmi	.+46     	; 0xfd4 <__addsf3x+0x9c>
     fa6:	91 50       	subi	r25, 0x01	; 1
     fa8:	a1 f0       	breq	.+40     	; 0xfd2 <__addsf3x+0x9a>
     faa:	ff 0f       	add	r31, r31
     fac:	bb 1f       	adc	r27, r27
     fae:	66 1f       	adc	r22, r22
     fb0:	77 1f       	adc	r23, r23
     fb2:	88 1f       	adc	r24, r24
     fb4:	c2 f7       	brpl	.-16     	; 0xfa6 <__addsf3x+0x6e>
     fb6:	0e c0       	rjmp	.+28     	; 0xfd4 <__addsf3x+0x9c>
     fb8:	ba 0f       	add	r27, r26
     fba:	62 1f       	adc	r22, r18
     fbc:	73 1f       	adc	r23, r19
     fbe:	84 1f       	adc	r24, r20
     fc0:	48 f4       	brcc	.+18     	; 0xfd4 <__addsf3x+0x9c>
     fc2:	87 95       	ror	r24
     fc4:	77 95       	ror	r23
     fc6:	67 95       	ror	r22
     fc8:	b7 95       	ror	r27
     fca:	f7 95       	ror	r31
     fcc:	9e 3f       	cpi	r25, 0xFE	; 254
     fce:	08 f0       	brcs	.+2      	; 0xfd2 <__addsf3x+0x9a>
     fd0:	b0 cf       	rjmp	.-160    	; 0xf32 <__addsf3+0x28>
     fd2:	93 95       	inc	r25
     fd4:	88 0f       	add	r24, r24
     fd6:	08 f0       	brcs	.+2      	; 0xfda <__addsf3x+0xa2>
     fd8:	99 27       	eor	r25, r25
     fda:	ee 0f       	add	r30, r30
     fdc:	97 95       	ror	r25
     fde:	87 95       	ror	r24
     fe0:	08 95       	ret

00000fe2 <__cmpsf2>:
     fe2:	0e 94 db 08 	call	0x11b6	; 0x11b6 <__fp_cmp>
     fe6:	08 f4       	brcc	.+2      	; 0xfea <__cmpsf2+0x8>
     fe8:	81 e0       	ldi	r24, 0x01	; 1
     fea:	08 95       	ret

00000fec <__divsf3>:
     fec:	0e 94 0a 08 	call	0x1014	; 0x1014 <__divsf3x>
     ff0:	0c 94 16 09 	jmp	0x122c	; 0x122c <__fp_round>
     ff4:	0e 94 0f 09 	call	0x121e	; 0x121e <__fp_pscB>
     ff8:	58 f0       	brcs	.+22     	; 0x1010 <__divsf3+0x24>
     ffa:	0e 94 08 09 	call	0x1210	; 0x1210 <__fp_pscA>
     ffe:	40 f0       	brcs	.+16     	; 0x1010 <__divsf3+0x24>
    1000:	29 f4       	brne	.+10     	; 0x100c <__divsf3+0x20>
    1002:	5f 3f       	cpi	r21, 0xFF	; 255
    1004:	29 f0       	breq	.+10     	; 0x1010 <__divsf3+0x24>
    1006:	0c 94 ff 08 	jmp	0x11fe	; 0x11fe <__fp_inf>
    100a:	51 11       	cpse	r21, r1
    100c:	0c 94 4a 09 	jmp	0x1294	; 0x1294 <__fp_szero>
    1010:	0c 94 05 09 	jmp	0x120a	; 0x120a <__fp_nan>

00001014 <__divsf3x>:
    1014:	0e 94 27 09 	call	0x124e	; 0x124e <__fp_split3>
    1018:	68 f3       	brcs	.-38     	; 0xff4 <__divsf3+0x8>

0000101a <__divsf3_pse>:
    101a:	99 23       	and	r25, r25
    101c:	b1 f3       	breq	.-20     	; 0x100a <__divsf3+0x1e>
    101e:	55 23       	and	r21, r21
    1020:	91 f3       	breq	.-28     	; 0x1006 <__divsf3+0x1a>
    1022:	95 1b       	sub	r25, r21
    1024:	55 0b       	sbc	r21, r21
    1026:	bb 27       	eor	r27, r27
    1028:	aa 27       	eor	r26, r26
    102a:	62 17       	cp	r22, r18
    102c:	73 07       	cpc	r23, r19
    102e:	84 07       	cpc	r24, r20
    1030:	38 f0       	brcs	.+14     	; 0x1040 <__divsf3_pse+0x26>
    1032:	9f 5f       	subi	r25, 0xFF	; 255
    1034:	5f 4f       	sbci	r21, 0xFF	; 255
    1036:	22 0f       	add	r18, r18
    1038:	33 1f       	adc	r19, r19
    103a:	44 1f       	adc	r20, r20
    103c:	aa 1f       	adc	r26, r26
    103e:	a9 f3       	breq	.-22     	; 0x102a <__divsf3_pse+0x10>
    1040:	35 d0       	rcall	.+106    	; 0x10ac <__divsf3_pse+0x92>
    1042:	0e 2e       	mov	r0, r30
    1044:	3a f0       	brmi	.+14     	; 0x1054 <__divsf3_pse+0x3a>
    1046:	e0 e8       	ldi	r30, 0x80	; 128
    1048:	32 d0       	rcall	.+100    	; 0x10ae <__divsf3_pse+0x94>
    104a:	91 50       	subi	r25, 0x01	; 1
    104c:	50 40       	sbci	r21, 0x00	; 0
    104e:	e6 95       	lsr	r30
    1050:	00 1c       	adc	r0, r0
    1052:	ca f7       	brpl	.-14     	; 0x1046 <__divsf3_pse+0x2c>
    1054:	2b d0       	rcall	.+86     	; 0x10ac <__divsf3_pse+0x92>
    1056:	fe 2f       	mov	r31, r30
    1058:	29 d0       	rcall	.+82     	; 0x10ac <__divsf3_pse+0x92>
    105a:	66 0f       	add	r22, r22
    105c:	77 1f       	adc	r23, r23
    105e:	88 1f       	adc	r24, r24
    1060:	bb 1f       	adc	r27, r27
    1062:	26 17       	cp	r18, r22
    1064:	37 07       	cpc	r19, r23
    1066:	48 07       	cpc	r20, r24
    1068:	ab 07       	cpc	r26, r27
    106a:	b0 e8       	ldi	r27, 0x80	; 128
    106c:	09 f0       	breq	.+2      	; 0x1070 <__divsf3_pse+0x56>
    106e:	bb 0b       	sbc	r27, r27
    1070:	80 2d       	mov	r24, r0
    1072:	bf 01       	movw	r22, r30
    1074:	ff 27       	eor	r31, r31
    1076:	93 58       	subi	r25, 0x83	; 131
    1078:	5f 4f       	sbci	r21, 0xFF	; 255
    107a:	3a f0       	brmi	.+14     	; 0x108a <__divsf3_pse+0x70>
    107c:	9e 3f       	cpi	r25, 0xFE	; 254
    107e:	51 05       	cpc	r21, r1
    1080:	78 f0       	brcs	.+30     	; 0x10a0 <__divsf3_pse+0x86>
    1082:	0c 94 ff 08 	jmp	0x11fe	; 0x11fe <__fp_inf>
    1086:	0c 94 4a 09 	jmp	0x1294	; 0x1294 <__fp_szero>
    108a:	5f 3f       	cpi	r21, 0xFF	; 255
    108c:	e4 f3       	brlt	.-8      	; 0x1086 <__divsf3_pse+0x6c>
    108e:	98 3e       	cpi	r25, 0xE8	; 232
    1090:	d4 f3       	brlt	.-12     	; 0x1086 <__divsf3_pse+0x6c>
    1092:	86 95       	lsr	r24
    1094:	77 95       	ror	r23
    1096:	67 95       	ror	r22
    1098:	b7 95       	ror	r27
    109a:	f7 95       	ror	r31
    109c:	9f 5f       	subi	r25, 0xFF	; 255
    109e:	c9 f7       	brne	.-14     	; 0x1092 <__divsf3_pse+0x78>
    10a0:	88 0f       	add	r24, r24
    10a2:	91 1d       	adc	r25, r1
    10a4:	96 95       	lsr	r25
    10a6:	87 95       	ror	r24
    10a8:	97 f9       	bld	r25, 7
    10aa:	08 95       	ret
    10ac:	e1 e0       	ldi	r30, 0x01	; 1
    10ae:	66 0f       	add	r22, r22
    10b0:	77 1f       	adc	r23, r23
    10b2:	88 1f       	adc	r24, r24
    10b4:	bb 1f       	adc	r27, r27
    10b6:	62 17       	cp	r22, r18
    10b8:	73 07       	cpc	r23, r19
    10ba:	84 07       	cpc	r24, r20
    10bc:	ba 07       	cpc	r27, r26
    10be:	20 f0       	brcs	.+8      	; 0x10c8 <__divsf3_pse+0xae>
    10c0:	62 1b       	sub	r22, r18
    10c2:	73 0b       	sbc	r23, r19
    10c4:	84 0b       	sbc	r24, r20
    10c6:	ba 0b       	sbc	r27, r26
    10c8:	ee 1f       	adc	r30, r30
    10ca:	88 f7       	brcc	.-30     	; 0x10ae <__divsf3_pse+0x94>
    10cc:	e0 95       	com	r30
    10ce:	08 95       	ret

000010d0 <__fixsfsi>:
    10d0:	0e 94 6f 08 	call	0x10de	; 0x10de <__fixunssfsi>
    10d4:	68 94       	set
    10d6:	b1 11       	cpse	r27, r1
    10d8:	0c 94 4a 09 	jmp	0x1294	; 0x1294 <__fp_szero>
    10dc:	08 95       	ret

000010de <__fixunssfsi>:
    10de:	0e 94 2f 09 	call	0x125e	; 0x125e <__fp_splitA>
    10e2:	88 f0       	brcs	.+34     	; 0x1106 <__fixunssfsi+0x28>
    10e4:	9f 57       	subi	r25, 0x7F	; 127
    10e6:	98 f0       	brcs	.+38     	; 0x110e <__fixunssfsi+0x30>
    10e8:	b9 2f       	mov	r27, r25
    10ea:	99 27       	eor	r25, r25
    10ec:	b7 51       	subi	r27, 0x17	; 23
    10ee:	b0 f0       	brcs	.+44     	; 0x111c <__fixunssfsi+0x3e>
    10f0:	e1 f0       	breq	.+56     	; 0x112a <__fixunssfsi+0x4c>
    10f2:	66 0f       	add	r22, r22
    10f4:	77 1f       	adc	r23, r23
    10f6:	88 1f       	adc	r24, r24
    10f8:	99 1f       	adc	r25, r25
    10fa:	1a f0       	brmi	.+6      	; 0x1102 <__fixunssfsi+0x24>
    10fc:	ba 95       	dec	r27
    10fe:	c9 f7       	brne	.-14     	; 0x10f2 <__fixunssfsi+0x14>
    1100:	14 c0       	rjmp	.+40     	; 0x112a <__fixunssfsi+0x4c>
    1102:	b1 30       	cpi	r27, 0x01	; 1
    1104:	91 f0       	breq	.+36     	; 0x112a <__fixunssfsi+0x4c>
    1106:	0e 94 49 09 	call	0x1292	; 0x1292 <__fp_zero>
    110a:	b1 e0       	ldi	r27, 0x01	; 1
    110c:	08 95       	ret
    110e:	0c 94 49 09 	jmp	0x1292	; 0x1292 <__fp_zero>
    1112:	67 2f       	mov	r22, r23
    1114:	78 2f       	mov	r23, r24
    1116:	88 27       	eor	r24, r24
    1118:	b8 5f       	subi	r27, 0xF8	; 248
    111a:	39 f0       	breq	.+14     	; 0x112a <__fixunssfsi+0x4c>
    111c:	b9 3f       	cpi	r27, 0xF9	; 249
    111e:	cc f3       	brlt	.-14     	; 0x1112 <__fixunssfsi+0x34>
    1120:	86 95       	lsr	r24
    1122:	77 95       	ror	r23
    1124:	67 95       	ror	r22
    1126:	b3 95       	inc	r27
    1128:	d9 f7       	brne	.-10     	; 0x1120 <__fixunssfsi+0x42>
    112a:	3e f4       	brtc	.+14     	; 0x113a <__fixunssfsi+0x5c>
    112c:	90 95       	com	r25
    112e:	80 95       	com	r24
    1130:	70 95       	com	r23
    1132:	61 95       	neg	r22
    1134:	7f 4f       	sbci	r23, 0xFF	; 255
    1136:	8f 4f       	sbci	r24, 0xFF	; 255
    1138:	9f 4f       	sbci	r25, 0xFF	; 255
    113a:	08 95       	ret

0000113c <__floatunsisf>:
    113c:	e8 94       	clt
    113e:	09 c0       	rjmp	.+18     	; 0x1152 <__floatsisf+0x12>

00001140 <__floatsisf>:
    1140:	97 fb       	bst	r25, 7
    1142:	3e f4       	brtc	.+14     	; 0x1152 <__floatsisf+0x12>
    1144:	90 95       	com	r25
    1146:	80 95       	com	r24
    1148:	70 95       	com	r23
    114a:	61 95       	neg	r22
    114c:	7f 4f       	sbci	r23, 0xFF	; 255
    114e:	8f 4f       	sbci	r24, 0xFF	; 255
    1150:	9f 4f       	sbci	r25, 0xFF	; 255
    1152:	99 23       	and	r25, r25
    1154:	a9 f0       	breq	.+42     	; 0x1180 <__floatsisf+0x40>
    1156:	f9 2f       	mov	r31, r25
    1158:	96 e9       	ldi	r25, 0x96	; 150
    115a:	bb 27       	eor	r27, r27
    115c:	93 95       	inc	r25
    115e:	f6 95       	lsr	r31
    1160:	87 95       	ror	r24
    1162:	77 95       	ror	r23
    1164:	67 95       	ror	r22
    1166:	b7 95       	ror	r27
    1168:	f1 11       	cpse	r31, r1
    116a:	f8 cf       	rjmp	.-16     	; 0x115c <__floatsisf+0x1c>
    116c:	fa f4       	brpl	.+62     	; 0x11ac <__floatsisf+0x6c>
    116e:	bb 0f       	add	r27, r27
    1170:	11 f4       	brne	.+4      	; 0x1176 <__floatsisf+0x36>
    1172:	60 ff       	sbrs	r22, 0
    1174:	1b c0       	rjmp	.+54     	; 0x11ac <__floatsisf+0x6c>
    1176:	6f 5f       	subi	r22, 0xFF	; 255
    1178:	7f 4f       	sbci	r23, 0xFF	; 255
    117a:	8f 4f       	sbci	r24, 0xFF	; 255
    117c:	9f 4f       	sbci	r25, 0xFF	; 255
    117e:	16 c0       	rjmp	.+44     	; 0x11ac <__floatsisf+0x6c>
    1180:	88 23       	and	r24, r24
    1182:	11 f0       	breq	.+4      	; 0x1188 <__floatsisf+0x48>
    1184:	96 e9       	ldi	r25, 0x96	; 150
    1186:	11 c0       	rjmp	.+34     	; 0x11aa <__floatsisf+0x6a>
    1188:	77 23       	and	r23, r23
    118a:	21 f0       	breq	.+8      	; 0x1194 <__floatsisf+0x54>
    118c:	9e e8       	ldi	r25, 0x8E	; 142
    118e:	87 2f       	mov	r24, r23
    1190:	76 2f       	mov	r23, r22
    1192:	05 c0       	rjmp	.+10     	; 0x119e <__floatsisf+0x5e>
    1194:	66 23       	and	r22, r22
    1196:	71 f0       	breq	.+28     	; 0x11b4 <__floatsisf+0x74>
    1198:	96 e8       	ldi	r25, 0x86	; 134
    119a:	86 2f       	mov	r24, r22
    119c:	70 e0       	ldi	r23, 0x00	; 0
    119e:	60 e0       	ldi	r22, 0x00	; 0
    11a0:	2a f0       	brmi	.+10     	; 0x11ac <__floatsisf+0x6c>
    11a2:	9a 95       	dec	r25
    11a4:	66 0f       	add	r22, r22
    11a6:	77 1f       	adc	r23, r23
    11a8:	88 1f       	adc	r24, r24
    11aa:	da f7       	brpl	.-10     	; 0x11a2 <__floatsisf+0x62>
    11ac:	88 0f       	add	r24, r24
    11ae:	96 95       	lsr	r25
    11b0:	87 95       	ror	r24
    11b2:	97 f9       	bld	r25, 7
    11b4:	08 95       	ret

000011b6 <__fp_cmp>:
    11b6:	99 0f       	add	r25, r25
    11b8:	00 08       	sbc	r0, r0
    11ba:	55 0f       	add	r21, r21
    11bc:	aa 0b       	sbc	r26, r26
    11be:	e0 e8       	ldi	r30, 0x80	; 128
    11c0:	fe ef       	ldi	r31, 0xFE	; 254
    11c2:	16 16       	cp	r1, r22
    11c4:	17 06       	cpc	r1, r23
    11c6:	e8 07       	cpc	r30, r24
    11c8:	f9 07       	cpc	r31, r25
    11ca:	c0 f0       	brcs	.+48     	; 0x11fc <__fp_cmp+0x46>
    11cc:	12 16       	cp	r1, r18
    11ce:	13 06       	cpc	r1, r19
    11d0:	e4 07       	cpc	r30, r20
    11d2:	f5 07       	cpc	r31, r21
    11d4:	98 f0       	brcs	.+38     	; 0x11fc <__fp_cmp+0x46>
    11d6:	62 1b       	sub	r22, r18
    11d8:	73 0b       	sbc	r23, r19
    11da:	84 0b       	sbc	r24, r20
    11dc:	95 0b       	sbc	r25, r21
    11de:	39 f4       	brne	.+14     	; 0x11ee <__fp_cmp+0x38>
    11e0:	0a 26       	eor	r0, r26
    11e2:	61 f0       	breq	.+24     	; 0x11fc <__fp_cmp+0x46>
    11e4:	23 2b       	or	r18, r19
    11e6:	24 2b       	or	r18, r20
    11e8:	25 2b       	or	r18, r21
    11ea:	21 f4       	brne	.+8      	; 0x11f4 <__fp_cmp+0x3e>
    11ec:	08 95       	ret
    11ee:	0a 26       	eor	r0, r26
    11f0:	09 f4       	brne	.+2      	; 0x11f4 <__fp_cmp+0x3e>
    11f2:	a1 40       	sbci	r26, 0x01	; 1
    11f4:	a6 95       	lsr	r26
    11f6:	8f ef       	ldi	r24, 0xFF	; 255
    11f8:	81 1d       	adc	r24, r1
    11fa:	81 1d       	adc	r24, r1
    11fc:	08 95       	ret

000011fe <__fp_inf>:
    11fe:	97 f9       	bld	r25, 7
    1200:	9f 67       	ori	r25, 0x7F	; 127
    1202:	80 e8       	ldi	r24, 0x80	; 128
    1204:	70 e0       	ldi	r23, 0x00	; 0
    1206:	60 e0       	ldi	r22, 0x00	; 0
    1208:	08 95       	ret

0000120a <__fp_nan>:
    120a:	9f ef       	ldi	r25, 0xFF	; 255
    120c:	80 ec       	ldi	r24, 0xC0	; 192
    120e:	08 95       	ret

00001210 <__fp_pscA>:
    1210:	00 24       	eor	r0, r0
    1212:	0a 94       	dec	r0
    1214:	16 16       	cp	r1, r22
    1216:	17 06       	cpc	r1, r23
    1218:	18 06       	cpc	r1, r24
    121a:	09 06       	cpc	r0, r25
    121c:	08 95       	ret

0000121e <__fp_pscB>:
    121e:	00 24       	eor	r0, r0
    1220:	0a 94       	dec	r0
    1222:	12 16       	cp	r1, r18
    1224:	13 06       	cpc	r1, r19
    1226:	14 06       	cpc	r1, r20
    1228:	05 06       	cpc	r0, r21
    122a:	08 95       	ret

0000122c <__fp_round>:
    122c:	09 2e       	mov	r0, r25
    122e:	03 94       	inc	r0
    1230:	00 0c       	add	r0, r0
    1232:	11 f4       	brne	.+4      	; 0x1238 <__fp_round+0xc>
    1234:	88 23       	and	r24, r24
    1236:	52 f0       	brmi	.+20     	; 0x124c <__fp_round+0x20>
    1238:	bb 0f       	add	r27, r27
    123a:	40 f4       	brcc	.+16     	; 0x124c <__fp_round+0x20>
    123c:	bf 2b       	or	r27, r31
    123e:	11 f4       	brne	.+4      	; 0x1244 <__fp_round+0x18>
    1240:	60 ff       	sbrs	r22, 0
    1242:	04 c0       	rjmp	.+8      	; 0x124c <__fp_round+0x20>
    1244:	6f 5f       	subi	r22, 0xFF	; 255
    1246:	7f 4f       	sbci	r23, 0xFF	; 255
    1248:	8f 4f       	sbci	r24, 0xFF	; 255
    124a:	9f 4f       	sbci	r25, 0xFF	; 255
    124c:	08 95       	ret

0000124e <__fp_split3>:
    124e:	57 fd       	sbrc	r21, 7
    1250:	90 58       	subi	r25, 0x80	; 128
    1252:	44 0f       	add	r20, r20
    1254:	55 1f       	adc	r21, r21
    1256:	59 f0       	breq	.+22     	; 0x126e <__fp_splitA+0x10>
    1258:	5f 3f       	cpi	r21, 0xFF	; 255
    125a:	71 f0       	breq	.+28     	; 0x1278 <__fp_splitA+0x1a>
    125c:	47 95       	ror	r20

0000125e <__fp_splitA>:
    125e:	88 0f       	add	r24, r24
    1260:	97 fb       	bst	r25, 7
    1262:	99 1f       	adc	r25, r25
    1264:	61 f0       	breq	.+24     	; 0x127e <__fp_splitA+0x20>
    1266:	9f 3f       	cpi	r25, 0xFF	; 255
    1268:	79 f0       	breq	.+30     	; 0x1288 <__fp_splitA+0x2a>
    126a:	87 95       	ror	r24
    126c:	08 95       	ret
    126e:	12 16       	cp	r1, r18
    1270:	13 06       	cpc	r1, r19
    1272:	14 06       	cpc	r1, r20
    1274:	55 1f       	adc	r21, r21
    1276:	f2 cf       	rjmp	.-28     	; 0x125c <__fp_split3+0xe>
    1278:	46 95       	lsr	r20
    127a:	f1 df       	rcall	.-30     	; 0x125e <__fp_splitA>
    127c:	08 c0       	rjmp	.+16     	; 0x128e <__fp_splitA+0x30>
    127e:	16 16       	cp	r1, r22
    1280:	17 06       	cpc	r1, r23
    1282:	18 06       	cpc	r1, r24
    1284:	99 1f       	adc	r25, r25
    1286:	f1 cf       	rjmp	.-30     	; 0x126a <__fp_splitA+0xc>
    1288:	86 95       	lsr	r24
    128a:	71 05       	cpc	r23, r1
    128c:	61 05       	cpc	r22, r1
    128e:	08 94       	sec
    1290:	08 95       	ret

00001292 <__fp_zero>:
    1292:	e8 94       	clt

00001294 <__fp_szero>:
    1294:	bb 27       	eor	r27, r27
    1296:	66 27       	eor	r22, r22
    1298:	77 27       	eor	r23, r23
    129a:	cb 01       	movw	r24, r22
    129c:	97 f9       	bld	r25, 7
    129e:	08 95       	ret

000012a0 <__gesf2>:
    12a0:	0e 94 db 08 	call	0x11b6	; 0x11b6 <__fp_cmp>
    12a4:	08 f4       	brcc	.+2      	; 0x12a8 <__gesf2+0x8>
    12a6:	8f ef       	ldi	r24, 0xFF	; 255
    12a8:	08 95       	ret

000012aa <__mulsf3>:
    12aa:	0e 94 68 09 	call	0x12d0	; 0x12d0 <__mulsf3x>
    12ae:	0c 94 16 09 	jmp	0x122c	; 0x122c <__fp_round>
    12b2:	0e 94 08 09 	call	0x1210	; 0x1210 <__fp_pscA>
    12b6:	38 f0       	brcs	.+14     	; 0x12c6 <__mulsf3+0x1c>
    12b8:	0e 94 0f 09 	call	0x121e	; 0x121e <__fp_pscB>
    12bc:	20 f0       	brcs	.+8      	; 0x12c6 <__mulsf3+0x1c>
    12be:	95 23       	and	r25, r21
    12c0:	11 f0       	breq	.+4      	; 0x12c6 <__mulsf3+0x1c>
    12c2:	0c 94 ff 08 	jmp	0x11fe	; 0x11fe <__fp_inf>
    12c6:	0c 94 05 09 	jmp	0x120a	; 0x120a <__fp_nan>
    12ca:	11 24       	eor	r1, r1
    12cc:	0c 94 4a 09 	jmp	0x1294	; 0x1294 <__fp_szero>

000012d0 <__mulsf3x>:
    12d0:	0e 94 27 09 	call	0x124e	; 0x124e <__fp_split3>
    12d4:	70 f3       	brcs	.-36     	; 0x12b2 <__mulsf3+0x8>

000012d6 <__mulsf3_pse>:
    12d6:	95 9f       	mul	r25, r21
    12d8:	c1 f3       	breq	.-16     	; 0x12ca <__mulsf3+0x20>
    12da:	95 0f       	add	r25, r21
    12dc:	50 e0       	ldi	r21, 0x00	; 0
    12de:	55 1f       	adc	r21, r21
    12e0:	62 9f       	mul	r22, r18
    12e2:	f0 01       	movw	r30, r0
    12e4:	72 9f       	mul	r23, r18
    12e6:	bb 27       	eor	r27, r27
    12e8:	f0 0d       	add	r31, r0
    12ea:	b1 1d       	adc	r27, r1
    12ec:	63 9f       	mul	r22, r19
    12ee:	aa 27       	eor	r26, r26
    12f0:	f0 0d       	add	r31, r0
    12f2:	b1 1d       	adc	r27, r1
    12f4:	aa 1f       	adc	r26, r26
    12f6:	64 9f       	mul	r22, r20
    12f8:	66 27       	eor	r22, r22
    12fa:	b0 0d       	add	r27, r0
    12fc:	a1 1d       	adc	r26, r1
    12fe:	66 1f       	adc	r22, r22
    1300:	82 9f       	mul	r24, r18
    1302:	22 27       	eor	r18, r18
    1304:	b0 0d       	add	r27, r0
    1306:	a1 1d       	adc	r26, r1
    1308:	62 1f       	adc	r22, r18
    130a:	73 9f       	mul	r23, r19
    130c:	b0 0d       	add	r27, r0
    130e:	a1 1d       	adc	r26, r1
    1310:	62 1f       	adc	r22, r18
    1312:	83 9f       	mul	r24, r19
    1314:	a0 0d       	add	r26, r0
    1316:	61 1d       	adc	r22, r1
    1318:	22 1f       	adc	r18, r18
    131a:	74 9f       	mul	r23, r20
    131c:	33 27       	eor	r19, r19
    131e:	a0 0d       	add	r26, r0
    1320:	61 1d       	adc	r22, r1
    1322:	23 1f       	adc	r18, r19
    1324:	84 9f       	mul	r24, r20
    1326:	60 0d       	add	r22, r0
    1328:	21 1d       	adc	r18, r1
    132a:	82 2f       	mov	r24, r18
    132c:	76 2f       	mov	r23, r22
    132e:	6a 2f       	mov	r22, r26
    1330:	11 24       	eor	r1, r1
    1332:	9f 57       	subi	r25, 0x7F	; 127
    1334:	50 40       	sbci	r21, 0x00	; 0
    1336:	9a f0       	brmi	.+38     	; 0x135e <__mulsf3_pse+0x88>
    1338:	f1 f0       	breq	.+60     	; 0x1376 <__mulsf3_pse+0xa0>
    133a:	88 23       	and	r24, r24
    133c:	4a f0       	brmi	.+18     	; 0x1350 <__mulsf3_pse+0x7a>
    133e:	ee 0f       	add	r30, r30
    1340:	ff 1f       	adc	r31, r31
    1342:	bb 1f       	adc	r27, r27
    1344:	66 1f       	adc	r22, r22
    1346:	77 1f       	adc	r23, r23
    1348:	88 1f       	adc	r24, r24
    134a:	91 50       	subi	r25, 0x01	; 1
    134c:	50 40       	sbci	r21, 0x00	; 0
    134e:	a9 f7       	brne	.-22     	; 0x133a <__mulsf3_pse+0x64>
    1350:	9e 3f       	cpi	r25, 0xFE	; 254
    1352:	51 05       	cpc	r21, r1
    1354:	80 f0       	brcs	.+32     	; 0x1376 <__mulsf3_pse+0xa0>
    1356:	0c 94 ff 08 	jmp	0x11fe	; 0x11fe <__fp_inf>
    135a:	0c 94 4a 09 	jmp	0x1294	; 0x1294 <__fp_szero>
    135e:	5f 3f       	cpi	r21, 0xFF	; 255
    1360:	e4 f3       	brlt	.-8      	; 0x135a <__mulsf3_pse+0x84>
    1362:	98 3e       	cpi	r25, 0xE8	; 232
    1364:	d4 f3       	brlt	.-12     	; 0x135a <__mulsf3_pse+0x84>
    1366:	86 95       	lsr	r24
    1368:	77 95       	ror	r23
    136a:	67 95       	ror	r22
    136c:	b7 95       	ror	r27
    136e:	f7 95       	ror	r31
    1370:	e7 95       	ror	r30
    1372:	9f 5f       	subi	r25, 0xFF	; 255
    1374:	c1 f7       	brne	.-16     	; 0x1366 <__mulsf3_pse+0x90>
    1376:	fe 2b       	or	r31, r30
    1378:	88 0f       	add	r24, r24
    137a:	91 1d       	adc	r25, r1
    137c:	96 95       	lsr	r25
    137e:	87 95       	ror	r24
    1380:	97 f9       	bld	r25, 7
    1382:	08 95       	ret

00001384 <__udivmodsi4>:
    1384:	a1 e2       	ldi	r26, 0x21	; 33
    1386:	1a 2e       	mov	r1, r26
    1388:	aa 1b       	sub	r26, r26
    138a:	bb 1b       	sub	r27, r27
    138c:	fd 01       	movw	r30, r26
    138e:	0d c0       	rjmp	.+26     	; 0x13aa <__udivmodsi4_ep>

00001390 <__udivmodsi4_loop>:
    1390:	aa 1f       	adc	r26, r26
    1392:	bb 1f       	adc	r27, r27
    1394:	ee 1f       	adc	r30, r30
    1396:	ff 1f       	adc	r31, r31
    1398:	a2 17       	cp	r26, r18
    139a:	b3 07       	cpc	r27, r19
    139c:	e4 07       	cpc	r30, r20
    139e:	f5 07       	cpc	r31, r21
    13a0:	20 f0       	brcs	.+8      	; 0x13aa <__udivmodsi4_ep>
    13a2:	a2 1b       	sub	r26, r18
    13a4:	b3 0b       	sbc	r27, r19
    13a6:	e4 0b       	sbc	r30, r20
    13a8:	f5 0b       	sbc	r31, r21

000013aa <__udivmodsi4_ep>:
    13aa:	66 1f       	adc	r22, r22
    13ac:	77 1f       	adc	r23, r23
    13ae:	88 1f       	adc	r24, r24
    13b0:	99 1f       	adc	r25, r25
    13b2:	1a 94       	dec	r1
    13b4:	69 f7       	brne	.-38     	; 0x1390 <__udivmodsi4_loop>
    13b6:	60 95       	com	r22
    13b8:	70 95       	com	r23
    13ba:	80 95       	com	r24
    13bc:	90 95       	com	r25
    13be:	9b 01       	movw	r18, r22
    13c0:	ac 01       	movw	r20, r24
    13c2:	bd 01       	movw	r22, r26
    13c4:	cf 01       	movw	r24, r30
    13c6:	08 95       	ret

000013c8 <dtostrf>:
    13c8:	ef 92       	push	r14
    13ca:	0f 93       	push	r16
    13cc:	1f 93       	push	r17
    13ce:	cf 93       	push	r28
    13d0:	df 93       	push	r29
    13d2:	e8 01       	movw	r28, r16
    13d4:	47 fd       	sbrc	r20, 7
    13d6:	02 c0       	rjmp	.+4      	; 0x13dc <dtostrf+0x14>
    13d8:	34 e0       	ldi	r19, 0x04	; 4
    13da:	01 c0       	rjmp	.+2      	; 0x13de <dtostrf+0x16>
    13dc:	34 e1       	ldi	r19, 0x14	; 20
    13de:	04 2e       	mov	r0, r20
    13e0:	00 0c       	add	r0, r0
    13e2:	55 0b       	sbc	r21, r21
    13e4:	57 ff       	sbrs	r21, 7
    13e6:	03 c0       	rjmp	.+6      	; 0x13ee <dtostrf+0x26>
    13e8:	51 95       	neg	r21
    13ea:	41 95       	neg	r20
    13ec:	51 09       	sbc	r21, r1
    13ee:	e3 2e       	mov	r14, r19
    13f0:	02 2f       	mov	r16, r18
    13f2:	24 2f       	mov	r18, r20
    13f4:	ae 01       	movw	r20, r28
    13f6:	0e 94 7e 0c 	call	0x18fc	; 0x18fc <dtoa_prf>
    13fa:	ce 01       	movw	r24, r28
    13fc:	df 91       	pop	r29
    13fe:	cf 91       	pop	r28
    1400:	1f 91       	pop	r17
    1402:	0f 91       	pop	r16
    1404:	ef 90       	pop	r14
    1406:	08 95       	ret

00001408 <atof>:
    1408:	66 27       	eor	r22, r22
    140a:	77 27       	eor	r23, r23
    140c:	0c 94 d8 0d 	jmp	0x1bb0	; 0x1bb0 <strtod>

00001410 <atol>:
    1410:	1f 93       	push	r17
    1412:	fc 01       	movw	r30, r24
    1414:	99 27       	eor	r25, r25
    1416:	88 27       	eor	r24, r24
    1418:	bc 01       	movw	r22, r24
    141a:	e8 94       	clt
    141c:	11 91       	ld	r17, Z+
    141e:	10 32       	cpi	r17, 0x20	; 32
    1420:	e9 f3       	breq	.-6      	; 0x141c <atol+0xc>
    1422:	19 30       	cpi	r17, 0x09	; 9
    1424:	10 f0       	brcs	.+4      	; 0x142a <atol+0x1a>
    1426:	1e 30       	cpi	r17, 0x0E	; 14
    1428:	c8 f3       	brcs	.-14     	; 0x141c <atol+0xc>
    142a:	1b 32       	cpi	r17, 0x2B	; 43
    142c:	51 f0       	breq	.+20     	; 0x1442 <atol+0x32>
    142e:	1d 32       	cpi	r17, 0x2D	; 45
    1430:	49 f4       	brne	.+18     	; 0x1444 <atol+0x34>
    1432:	68 94       	set
    1434:	06 c0       	rjmp	.+12     	; 0x1442 <atol+0x32>
    1436:	0e 94 4c 0a 	call	0x1498	; 0x1498 <__mulsi_const_10>
    143a:	61 0f       	add	r22, r17
    143c:	71 1d       	adc	r23, r1
    143e:	81 1d       	adc	r24, r1
    1440:	91 1d       	adc	r25, r1
    1442:	11 91       	ld	r17, Z+
    1444:	10 53       	subi	r17, 0x30	; 48
    1446:	1a 30       	cpi	r17, 0x0A	; 10
    1448:	b0 f3       	brcs	.-20     	; 0x1436 <atol+0x26>
    144a:	3e f4       	brtc	.+14     	; 0x145a <atol+0x4a>
    144c:	90 95       	com	r25
    144e:	80 95       	com	r24
    1450:	70 95       	com	r23
    1452:	61 95       	neg	r22
    1454:	7f 4f       	sbci	r23, 0xFF	; 255
    1456:	8f 4f       	sbci	r24, 0xFF	; 255
    1458:	9f 4f       	sbci	r25, 0xFF	; 255
    145a:	1f 91       	pop	r17
    145c:	08 95       	ret

0000145e <strcat>:
    145e:	fb 01       	movw	r30, r22
    1460:	dc 01       	movw	r26, r24
    1462:	0d 90       	ld	r0, X+
    1464:	00 20       	and	r0, r0
    1466:	e9 f7       	brne	.-6      	; 0x1462 <strcat+0x4>
    1468:	11 97       	sbiw	r26, 0x01	; 1
    146a:	01 90       	ld	r0, Z+
    146c:	0d 92       	st	X+, r0
    146e:	00 20       	and	r0, r0
    1470:	e1 f7       	brne	.-8      	; 0x146a <strcat+0xc>
    1472:	08 95       	ret

00001474 <strcpy>:
    1474:	fb 01       	movw	r30, r22
    1476:	dc 01       	movw	r26, r24
    1478:	01 90       	ld	r0, Z+
    147a:	0d 92       	st	X+, r0
    147c:	00 20       	and	r0, r0
    147e:	e1 f7       	brne	.-8      	; 0x1478 <strcpy+0x4>
    1480:	08 95       	ret

00001482 <__itoa_ncheck>:
    1482:	bb 27       	eor	r27, r27
    1484:	4a 30       	cpi	r20, 0x0A	; 10
    1486:	31 f4       	brne	.+12     	; 0x1494 <__itoa_ncheck+0x12>
    1488:	99 23       	and	r25, r25
    148a:	22 f4       	brpl	.+8      	; 0x1494 <__itoa_ncheck+0x12>
    148c:	bd e2       	ldi	r27, 0x2D	; 45
    148e:	90 95       	com	r25
    1490:	81 95       	neg	r24
    1492:	9f 4f       	sbci	r25, 0xFF	; 255
    1494:	0c 94 62 0a 	jmp	0x14c4	; 0x14c4 <__utoa_common>

00001498 <__mulsi_const_10>:
    1498:	59 2f       	mov	r21, r25
    149a:	48 2f       	mov	r20, r24
    149c:	37 2f       	mov	r19, r23
    149e:	26 2f       	mov	r18, r22
    14a0:	66 0f       	add	r22, r22
    14a2:	77 1f       	adc	r23, r23
    14a4:	88 1f       	adc	r24, r24
    14a6:	99 1f       	adc	r25, r25
    14a8:	66 0f       	add	r22, r22
    14aa:	77 1f       	adc	r23, r23
    14ac:	88 1f       	adc	r24, r24
    14ae:	99 1f       	adc	r25, r25
    14b0:	62 0f       	add	r22, r18
    14b2:	73 1f       	adc	r23, r19
    14b4:	84 1f       	adc	r24, r20
    14b6:	95 1f       	adc	r25, r21
    14b8:	66 0f       	add	r22, r22
    14ba:	77 1f       	adc	r23, r23
    14bc:	88 1f       	adc	r24, r24
    14be:	99 1f       	adc	r25, r25
    14c0:	08 95       	ret

000014c2 <__utoa_ncheck>:
    14c2:	bb 27       	eor	r27, r27

000014c4 <__utoa_common>:
    14c4:	fb 01       	movw	r30, r22
    14c6:	55 27       	eor	r21, r21
    14c8:	aa 27       	eor	r26, r26
    14ca:	88 0f       	add	r24, r24
    14cc:	99 1f       	adc	r25, r25
    14ce:	aa 1f       	adc	r26, r26
    14d0:	a4 17       	cp	r26, r20
    14d2:	10 f0       	brcs	.+4      	; 0x14d8 <__utoa_common+0x14>
    14d4:	a4 1b       	sub	r26, r20
    14d6:	83 95       	inc	r24
    14d8:	50 51       	subi	r21, 0x10	; 16
    14da:	b9 f7       	brne	.-18     	; 0x14ca <__utoa_common+0x6>
    14dc:	a0 5d       	subi	r26, 0xD0	; 208
    14de:	aa 33       	cpi	r26, 0x3A	; 58
    14e0:	08 f0       	brcs	.+2      	; 0x14e4 <__utoa_common+0x20>
    14e2:	a9 5d       	subi	r26, 0xD9	; 217
    14e4:	a1 93       	st	Z+, r26
    14e6:	00 97       	sbiw	r24, 0x00	; 0
    14e8:	79 f7       	brne	.-34     	; 0x14c8 <__utoa_common+0x4>
    14ea:	b1 11       	cpse	r27, r1
    14ec:	b1 93       	st	Z+, r27
    14ee:	11 92       	st	Z+, r1
    14f0:	cb 01       	movw	r24, r22
    14f2:	0c 94 35 10 	jmp	0x206a	; 0x206a <strrev>

000014f6 <sprintf>:
    14f6:	ae e0       	ldi	r26, 0x0E	; 14
    14f8:	b0 e0       	ldi	r27, 0x00	; 0
    14fa:	e1 e8       	ldi	r30, 0x81	; 129
    14fc:	fa e0       	ldi	r31, 0x0A	; 10
    14fe:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <__prologue_saves__+0x1c>
    1502:	0d 89       	ldd	r16, Y+21	; 0x15
    1504:	1e 89       	ldd	r17, Y+22	; 0x16
    1506:	86 e0       	ldi	r24, 0x06	; 6
    1508:	8c 83       	std	Y+4, r24	; 0x04
    150a:	1a 83       	std	Y+2, r17	; 0x02
    150c:	09 83       	std	Y+1, r16	; 0x01
    150e:	8f ef       	ldi	r24, 0xFF	; 255
    1510:	9f e7       	ldi	r25, 0x7F	; 127
    1512:	9e 83       	std	Y+6, r25	; 0x06
    1514:	8d 83       	std	Y+5, r24	; 0x05
    1516:	ae 01       	movw	r20, r28
    1518:	47 5e       	subi	r20, 0xE7	; 231
    151a:	5f 4f       	sbci	r21, 0xFF	; 255
    151c:	6f 89       	ldd	r22, Y+23	; 0x17
    151e:	78 8d       	ldd	r23, Y+24	; 0x18
    1520:	ce 01       	movw	r24, r28
    1522:	01 96       	adiw	r24, 0x01	; 1
    1524:	0e 94 9d 0a 	call	0x153a	; 0x153a <vfprintf>
    1528:	ef 81       	ldd	r30, Y+7	; 0x07
    152a:	f8 85       	ldd	r31, Y+8	; 0x08
    152c:	e0 0f       	add	r30, r16
    152e:	f1 1f       	adc	r31, r17
    1530:	10 82       	st	Z, r1
    1532:	2e 96       	adiw	r28, 0x0e	; 14
    1534:	e4 e0       	ldi	r30, 0x04	; 4
    1536:	0c 94 17 11 	jmp	0x222e	; 0x222e <__epilogue_restores__+0x1c>

0000153a <vfprintf>:
    153a:	ab e0       	ldi	r26, 0x0B	; 11
    153c:	b0 e0       	ldi	r27, 0x00	; 0
    153e:	e3 ea       	ldi	r30, 0xA3	; 163
    1540:	fa e0       	ldi	r31, 0x0A	; 10
    1542:	0c 94 ed 10 	jmp	0x21da	; 0x21da <__prologue_saves__>
    1546:	6c 01       	movw	r12, r24
    1548:	7b 01       	movw	r14, r22
    154a:	8a 01       	movw	r16, r20
    154c:	fc 01       	movw	r30, r24
    154e:	17 82       	std	Z+7, r1	; 0x07
    1550:	16 82       	std	Z+6, r1	; 0x06
    1552:	83 81       	ldd	r24, Z+3	; 0x03
    1554:	81 ff       	sbrs	r24, 1
    1556:	cc c1       	rjmp	.+920    	; 0x18f0 <vfprintf+0x3b6>
    1558:	ce 01       	movw	r24, r28
    155a:	01 96       	adiw	r24, 0x01	; 1
    155c:	3c 01       	movw	r6, r24
    155e:	f6 01       	movw	r30, r12
    1560:	93 81       	ldd	r25, Z+3	; 0x03
    1562:	f7 01       	movw	r30, r14
    1564:	93 fd       	sbrc	r25, 3
    1566:	85 91       	lpm	r24, Z+
    1568:	93 ff       	sbrs	r25, 3
    156a:	81 91       	ld	r24, Z+
    156c:	7f 01       	movw	r14, r30
    156e:	88 23       	and	r24, r24
    1570:	09 f4       	brne	.+2      	; 0x1574 <vfprintf+0x3a>
    1572:	ba c1       	rjmp	.+884    	; 0x18e8 <vfprintf+0x3ae>
    1574:	85 32       	cpi	r24, 0x25	; 37
    1576:	39 f4       	brne	.+14     	; 0x1586 <vfprintf+0x4c>
    1578:	93 fd       	sbrc	r25, 3
    157a:	85 91       	lpm	r24, Z+
    157c:	93 ff       	sbrs	r25, 3
    157e:	81 91       	ld	r24, Z+
    1580:	7f 01       	movw	r14, r30
    1582:	85 32       	cpi	r24, 0x25	; 37
    1584:	29 f4       	brne	.+10     	; 0x1590 <vfprintf+0x56>
    1586:	b6 01       	movw	r22, r12
    1588:	90 e0       	ldi	r25, 0x00	; 0
    158a:	0e 94 45 10 	call	0x208a	; 0x208a <fputc>
    158e:	e7 cf       	rjmp	.-50     	; 0x155e <vfprintf+0x24>
    1590:	91 2c       	mov	r9, r1
    1592:	21 2c       	mov	r2, r1
    1594:	31 2c       	mov	r3, r1
    1596:	ff e1       	ldi	r31, 0x1F	; 31
    1598:	f3 15       	cp	r31, r3
    159a:	d8 f0       	brcs	.+54     	; 0x15d2 <vfprintf+0x98>
    159c:	8b 32       	cpi	r24, 0x2B	; 43
    159e:	79 f0       	breq	.+30     	; 0x15be <vfprintf+0x84>
    15a0:	38 f4       	brcc	.+14     	; 0x15b0 <vfprintf+0x76>
    15a2:	80 32       	cpi	r24, 0x20	; 32
    15a4:	79 f0       	breq	.+30     	; 0x15c4 <vfprintf+0x8a>
    15a6:	83 32       	cpi	r24, 0x23	; 35
    15a8:	a1 f4       	brne	.+40     	; 0x15d2 <vfprintf+0x98>
    15aa:	23 2d       	mov	r18, r3
    15ac:	20 61       	ori	r18, 0x10	; 16
    15ae:	1d c0       	rjmp	.+58     	; 0x15ea <vfprintf+0xb0>
    15b0:	8d 32       	cpi	r24, 0x2D	; 45
    15b2:	61 f0       	breq	.+24     	; 0x15cc <vfprintf+0x92>
    15b4:	80 33       	cpi	r24, 0x30	; 48
    15b6:	69 f4       	brne	.+26     	; 0x15d2 <vfprintf+0x98>
    15b8:	23 2d       	mov	r18, r3
    15ba:	21 60       	ori	r18, 0x01	; 1
    15bc:	16 c0       	rjmp	.+44     	; 0x15ea <vfprintf+0xb0>
    15be:	83 2d       	mov	r24, r3
    15c0:	82 60       	ori	r24, 0x02	; 2
    15c2:	38 2e       	mov	r3, r24
    15c4:	e3 2d       	mov	r30, r3
    15c6:	e4 60       	ori	r30, 0x04	; 4
    15c8:	3e 2e       	mov	r3, r30
    15ca:	2a c0       	rjmp	.+84     	; 0x1620 <vfprintf+0xe6>
    15cc:	f3 2d       	mov	r31, r3
    15ce:	f8 60       	ori	r31, 0x08	; 8
    15d0:	1d c0       	rjmp	.+58     	; 0x160c <vfprintf+0xd2>
    15d2:	37 fc       	sbrc	r3, 7
    15d4:	2d c0       	rjmp	.+90     	; 0x1630 <vfprintf+0xf6>
    15d6:	20 ed       	ldi	r18, 0xD0	; 208
    15d8:	28 0f       	add	r18, r24
    15da:	2a 30       	cpi	r18, 0x0A	; 10
    15dc:	40 f0       	brcs	.+16     	; 0x15ee <vfprintf+0xb4>
    15de:	8e 32       	cpi	r24, 0x2E	; 46
    15e0:	b9 f4       	brne	.+46     	; 0x1610 <vfprintf+0xd6>
    15e2:	36 fc       	sbrc	r3, 6
    15e4:	81 c1       	rjmp	.+770    	; 0x18e8 <vfprintf+0x3ae>
    15e6:	23 2d       	mov	r18, r3
    15e8:	20 64       	ori	r18, 0x40	; 64
    15ea:	32 2e       	mov	r3, r18
    15ec:	19 c0       	rjmp	.+50     	; 0x1620 <vfprintf+0xe6>
    15ee:	36 fe       	sbrs	r3, 6
    15f0:	06 c0       	rjmp	.+12     	; 0x15fe <vfprintf+0xc4>
    15f2:	8a e0       	ldi	r24, 0x0A	; 10
    15f4:	98 9e       	mul	r9, r24
    15f6:	20 0d       	add	r18, r0
    15f8:	11 24       	eor	r1, r1
    15fa:	92 2e       	mov	r9, r18
    15fc:	11 c0       	rjmp	.+34     	; 0x1620 <vfprintf+0xe6>
    15fe:	ea e0       	ldi	r30, 0x0A	; 10
    1600:	2e 9e       	mul	r2, r30
    1602:	20 0d       	add	r18, r0
    1604:	11 24       	eor	r1, r1
    1606:	22 2e       	mov	r2, r18
    1608:	f3 2d       	mov	r31, r3
    160a:	f0 62       	ori	r31, 0x20	; 32
    160c:	3f 2e       	mov	r3, r31
    160e:	08 c0       	rjmp	.+16     	; 0x1620 <vfprintf+0xe6>
    1610:	8c 36       	cpi	r24, 0x6C	; 108
    1612:	21 f4       	brne	.+8      	; 0x161c <vfprintf+0xe2>
    1614:	83 2d       	mov	r24, r3
    1616:	80 68       	ori	r24, 0x80	; 128
    1618:	38 2e       	mov	r3, r24
    161a:	02 c0       	rjmp	.+4      	; 0x1620 <vfprintf+0xe6>
    161c:	88 36       	cpi	r24, 0x68	; 104
    161e:	41 f4       	brne	.+16     	; 0x1630 <vfprintf+0xf6>
    1620:	f7 01       	movw	r30, r14
    1622:	93 fd       	sbrc	r25, 3
    1624:	85 91       	lpm	r24, Z+
    1626:	93 ff       	sbrs	r25, 3
    1628:	81 91       	ld	r24, Z+
    162a:	7f 01       	movw	r14, r30
    162c:	81 11       	cpse	r24, r1
    162e:	b3 cf       	rjmp	.-154    	; 0x1596 <vfprintf+0x5c>
    1630:	98 2f       	mov	r25, r24
    1632:	9f 7d       	andi	r25, 0xDF	; 223
    1634:	95 54       	subi	r25, 0x45	; 69
    1636:	93 30       	cpi	r25, 0x03	; 3
    1638:	28 f4       	brcc	.+10     	; 0x1644 <vfprintf+0x10a>
    163a:	0c 5f       	subi	r16, 0xFC	; 252
    163c:	1f 4f       	sbci	r17, 0xFF	; 255
    163e:	9f e3       	ldi	r25, 0x3F	; 63
    1640:	99 83       	std	Y+1, r25	; 0x01
    1642:	0d c0       	rjmp	.+26     	; 0x165e <vfprintf+0x124>
    1644:	83 36       	cpi	r24, 0x63	; 99
    1646:	31 f0       	breq	.+12     	; 0x1654 <vfprintf+0x11a>
    1648:	83 37       	cpi	r24, 0x73	; 115
    164a:	71 f0       	breq	.+28     	; 0x1668 <vfprintf+0x12e>
    164c:	83 35       	cpi	r24, 0x53	; 83
    164e:	09 f0       	breq	.+2      	; 0x1652 <vfprintf+0x118>
    1650:	59 c0       	rjmp	.+178    	; 0x1704 <vfprintf+0x1ca>
    1652:	21 c0       	rjmp	.+66     	; 0x1696 <vfprintf+0x15c>
    1654:	f8 01       	movw	r30, r16
    1656:	80 81       	ld	r24, Z
    1658:	89 83       	std	Y+1, r24	; 0x01
    165a:	0e 5f       	subi	r16, 0xFE	; 254
    165c:	1f 4f       	sbci	r17, 0xFF	; 255
    165e:	88 24       	eor	r8, r8
    1660:	83 94       	inc	r8
    1662:	91 2c       	mov	r9, r1
    1664:	53 01       	movw	r10, r6
    1666:	13 c0       	rjmp	.+38     	; 0x168e <vfprintf+0x154>
    1668:	28 01       	movw	r4, r16
    166a:	f2 e0       	ldi	r31, 0x02	; 2
    166c:	4f 0e       	add	r4, r31
    166e:	51 1c       	adc	r5, r1
    1670:	f8 01       	movw	r30, r16
    1672:	a0 80       	ld	r10, Z
    1674:	b1 80       	ldd	r11, Z+1	; 0x01
    1676:	36 fe       	sbrs	r3, 6
    1678:	03 c0       	rjmp	.+6      	; 0x1680 <vfprintf+0x146>
    167a:	69 2d       	mov	r22, r9
    167c:	70 e0       	ldi	r23, 0x00	; 0
    167e:	02 c0       	rjmp	.+4      	; 0x1684 <vfprintf+0x14a>
    1680:	6f ef       	ldi	r22, 0xFF	; 255
    1682:	7f ef       	ldi	r23, 0xFF	; 255
    1684:	c5 01       	movw	r24, r10
    1686:	0e 94 2a 10 	call	0x2054	; 0x2054 <strnlen>
    168a:	4c 01       	movw	r8, r24
    168c:	82 01       	movw	r16, r4
    168e:	f3 2d       	mov	r31, r3
    1690:	ff 77       	andi	r31, 0x7F	; 127
    1692:	3f 2e       	mov	r3, r31
    1694:	16 c0       	rjmp	.+44     	; 0x16c2 <vfprintf+0x188>
    1696:	28 01       	movw	r4, r16
    1698:	22 e0       	ldi	r18, 0x02	; 2
    169a:	42 0e       	add	r4, r18
    169c:	51 1c       	adc	r5, r1
    169e:	f8 01       	movw	r30, r16
    16a0:	a0 80       	ld	r10, Z
    16a2:	b1 80       	ldd	r11, Z+1	; 0x01
    16a4:	36 fe       	sbrs	r3, 6
    16a6:	03 c0       	rjmp	.+6      	; 0x16ae <vfprintf+0x174>
    16a8:	69 2d       	mov	r22, r9
    16aa:	70 e0       	ldi	r23, 0x00	; 0
    16ac:	02 c0       	rjmp	.+4      	; 0x16b2 <vfprintf+0x178>
    16ae:	6f ef       	ldi	r22, 0xFF	; 255
    16b0:	7f ef       	ldi	r23, 0xFF	; 255
    16b2:	c5 01       	movw	r24, r10
    16b4:	0e 94 1f 10 	call	0x203e	; 0x203e <strnlen_P>
    16b8:	4c 01       	movw	r8, r24
    16ba:	f3 2d       	mov	r31, r3
    16bc:	f0 68       	ori	r31, 0x80	; 128
    16be:	3f 2e       	mov	r3, r31
    16c0:	82 01       	movw	r16, r4
    16c2:	33 fc       	sbrc	r3, 3
    16c4:	1b c0       	rjmp	.+54     	; 0x16fc <vfprintf+0x1c2>
    16c6:	82 2d       	mov	r24, r2
    16c8:	90 e0       	ldi	r25, 0x00	; 0
    16ca:	88 16       	cp	r8, r24
    16cc:	99 06       	cpc	r9, r25
    16ce:	b0 f4       	brcc	.+44     	; 0x16fc <vfprintf+0x1c2>
    16d0:	b6 01       	movw	r22, r12
    16d2:	80 e2       	ldi	r24, 0x20	; 32
    16d4:	90 e0       	ldi	r25, 0x00	; 0
    16d6:	0e 94 45 10 	call	0x208a	; 0x208a <fputc>
    16da:	2a 94       	dec	r2
    16dc:	f4 cf       	rjmp	.-24     	; 0x16c6 <vfprintf+0x18c>
    16de:	f5 01       	movw	r30, r10
    16e0:	37 fc       	sbrc	r3, 7
    16e2:	85 91       	lpm	r24, Z+
    16e4:	37 fe       	sbrs	r3, 7
    16e6:	81 91       	ld	r24, Z+
    16e8:	5f 01       	movw	r10, r30
    16ea:	b6 01       	movw	r22, r12
    16ec:	90 e0       	ldi	r25, 0x00	; 0
    16ee:	0e 94 45 10 	call	0x208a	; 0x208a <fputc>
    16f2:	21 10       	cpse	r2, r1
    16f4:	2a 94       	dec	r2
    16f6:	21 e0       	ldi	r18, 0x01	; 1
    16f8:	82 1a       	sub	r8, r18
    16fa:	91 08       	sbc	r9, r1
    16fc:	81 14       	cp	r8, r1
    16fe:	91 04       	cpc	r9, r1
    1700:	71 f7       	brne	.-36     	; 0x16de <vfprintf+0x1a4>
    1702:	e8 c0       	rjmp	.+464    	; 0x18d4 <vfprintf+0x39a>
    1704:	84 36       	cpi	r24, 0x64	; 100
    1706:	11 f0       	breq	.+4      	; 0x170c <vfprintf+0x1d2>
    1708:	89 36       	cpi	r24, 0x69	; 105
    170a:	41 f5       	brne	.+80     	; 0x175c <vfprintf+0x222>
    170c:	f8 01       	movw	r30, r16
    170e:	37 fe       	sbrs	r3, 7
    1710:	07 c0       	rjmp	.+14     	; 0x1720 <vfprintf+0x1e6>
    1712:	60 81       	ld	r22, Z
    1714:	71 81       	ldd	r23, Z+1	; 0x01
    1716:	82 81       	ldd	r24, Z+2	; 0x02
    1718:	93 81       	ldd	r25, Z+3	; 0x03
    171a:	0c 5f       	subi	r16, 0xFC	; 252
    171c:	1f 4f       	sbci	r17, 0xFF	; 255
    171e:	08 c0       	rjmp	.+16     	; 0x1730 <vfprintf+0x1f6>
    1720:	60 81       	ld	r22, Z
    1722:	71 81       	ldd	r23, Z+1	; 0x01
    1724:	07 2e       	mov	r0, r23
    1726:	00 0c       	add	r0, r0
    1728:	88 0b       	sbc	r24, r24
    172a:	99 0b       	sbc	r25, r25
    172c:	0e 5f       	subi	r16, 0xFE	; 254
    172e:	1f 4f       	sbci	r17, 0xFF	; 255
    1730:	f3 2d       	mov	r31, r3
    1732:	ff 76       	andi	r31, 0x6F	; 111
    1734:	3f 2e       	mov	r3, r31
    1736:	97 ff       	sbrs	r25, 7
    1738:	09 c0       	rjmp	.+18     	; 0x174c <vfprintf+0x212>
    173a:	90 95       	com	r25
    173c:	80 95       	com	r24
    173e:	70 95       	com	r23
    1740:	61 95       	neg	r22
    1742:	7f 4f       	sbci	r23, 0xFF	; 255
    1744:	8f 4f       	sbci	r24, 0xFF	; 255
    1746:	9f 4f       	sbci	r25, 0xFF	; 255
    1748:	f0 68       	ori	r31, 0x80	; 128
    174a:	3f 2e       	mov	r3, r31
    174c:	2a e0       	ldi	r18, 0x0A	; 10
    174e:	30 e0       	ldi	r19, 0x00	; 0
    1750:	a3 01       	movw	r20, r6
    1752:	0e 94 81 10 	call	0x2102	; 0x2102 <__ultoa_invert>
    1756:	88 2e       	mov	r8, r24
    1758:	86 18       	sub	r8, r6
    175a:	45 c0       	rjmp	.+138    	; 0x17e6 <vfprintf+0x2ac>
    175c:	85 37       	cpi	r24, 0x75	; 117
    175e:	31 f4       	brne	.+12     	; 0x176c <vfprintf+0x232>
    1760:	23 2d       	mov	r18, r3
    1762:	2f 7e       	andi	r18, 0xEF	; 239
    1764:	b2 2e       	mov	r11, r18
    1766:	2a e0       	ldi	r18, 0x0A	; 10
    1768:	30 e0       	ldi	r19, 0x00	; 0
    176a:	25 c0       	rjmp	.+74     	; 0x17b6 <vfprintf+0x27c>
    176c:	93 2d       	mov	r25, r3
    176e:	99 7f       	andi	r25, 0xF9	; 249
    1770:	b9 2e       	mov	r11, r25
    1772:	8f 36       	cpi	r24, 0x6F	; 111
    1774:	c1 f0       	breq	.+48     	; 0x17a6 <vfprintf+0x26c>
    1776:	18 f4       	brcc	.+6      	; 0x177e <vfprintf+0x244>
    1778:	88 35       	cpi	r24, 0x58	; 88
    177a:	79 f0       	breq	.+30     	; 0x179a <vfprintf+0x260>
    177c:	b5 c0       	rjmp	.+362    	; 0x18e8 <vfprintf+0x3ae>
    177e:	80 37       	cpi	r24, 0x70	; 112
    1780:	19 f0       	breq	.+6      	; 0x1788 <vfprintf+0x24e>
    1782:	88 37       	cpi	r24, 0x78	; 120
    1784:	21 f0       	breq	.+8      	; 0x178e <vfprintf+0x254>
    1786:	b0 c0       	rjmp	.+352    	; 0x18e8 <vfprintf+0x3ae>
    1788:	e9 2f       	mov	r30, r25
    178a:	e0 61       	ori	r30, 0x10	; 16
    178c:	be 2e       	mov	r11, r30
    178e:	b4 fe       	sbrs	r11, 4
    1790:	0d c0       	rjmp	.+26     	; 0x17ac <vfprintf+0x272>
    1792:	fb 2d       	mov	r31, r11
    1794:	f4 60       	ori	r31, 0x04	; 4
    1796:	bf 2e       	mov	r11, r31
    1798:	09 c0       	rjmp	.+18     	; 0x17ac <vfprintf+0x272>
    179a:	34 fe       	sbrs	r3, 4
    179c:	0a c0       	rjmp	.+20     	; 0x17b2 <vfprintf+0x278>
    179e:	29 2f       	mov	r18, r25
    17a0:	26 60       	ori	r18, 0x06	; 6
    17a2:	b2 2e       	mov	r11, r18
    17a4:	06 c0       	rjmp	.+12     	; 0x17b2 <vfprintf+0x278>
    17a6:	28 e0       	ldi	r18, 0x08	; 8
    17a8:	30 e0       	ldi	r19, 0x00	; 0
    17aa:	05 c0       	rjmp	.+10     	; 0x17b6 <vfprintf+0x27c>
    17ac:	20 e1       	ldi	r18, 0x10	; 16
    17ae:	30 e0       	ldi	r19, 0x00	; 0
    17b0:	02 c0       	rjmp	.+4      	; 0x17b6 <vfprintf+0x27c>
    17b2:	20 e1       	ldi	r18, 0x10	; 16
    17b4:	32 e0       	ldi	r19, 0x02	; 2
    17b6:	f8 01       	movw	r30, r16
    17b8:	b7 fe       	sbrs	r11, 7
    17ba:	07 c0       	rjmp	.+14     	; 0x17ca <vfprintf+0x290>
    17bc:	60 81       	ld	r22, Z
    17be:	71 81       	ldd	r23, Z+1	; 0x01
    17c0:	82 81       	ldd	r24, Z+2	; 0x02
    17c2:	93 81       	ldd	r25, Z+3	; 0x03
    17c4:	0c 5f       	subi	r16, 0xFC	; 252
    17c6:	1f 4f       	sbci	r17, 0xFF	; 255
    17c8:	06 c0       	rjmp	.+12     	; 0x17d6 <vfprintf+0x29c>
    17ca:	60 81       	ld	r22, Z
    17cc:	71 81       	ldd	r23, Z+1	; 0x01
    17ce:	80 e0       	ldi	r24, 0x00	; 0
    17d0:	90 e0       	ldi	r25, 0x00	; 0
    17d2:	0e 5f       	subi	r16, 0xFE	; 254
    17d4:	1f 4f       	sbci	r17, 0xFF	; 255
    17d6:	a3 01       	movw	r20, r6
    17d8:	0e 94 81 10 	call	0x2102	; 0x2102 <__ultoa_invert>
    17dc:	88 2e       	mov	r8, r24
    17de:	86 18       	sub	r8, r6
    17e0:	fb 2d       	mov	r31, r11
    17e2:	ff 77       	andi	r31, 0x7F	; 127
    17e4:	3f 2e       	mov	r3, r31
    17e6:	36 fe       	sbrs	r3, 6
    17e8:	0d c0       	rjmp	.+26     	; 0x1804 <vfprintf+0x2ca>
    17ea:	23 2d       	mov	r18, r3
    17ec:	2e 7f       	andi	r18, 0xFE	; 254
    17ee:	a2 2e       	mov	r10, r18
    17f0:	89 14       	cp	r8, r9
    17f2:	58 f4       	brcc	.+22     	; 0x180a <vfprintf+0x2d0>
    17f4:	34 fe       	sbrs	r3, 4
    17f6:	0b c0       	rjmp	.+22     	; 0x180e <vfprintf+0x2d4>
    17f8:	32 fc       	sbrc	r3, 2
    17fa:	09 c0       	rjmp	.+18     	; 0x180e <vfprintf+0x2d4>
    17fc:	83 2d       	mov	r24, r3
    17fe:	8e 7e       	andi	r24, 0xEE	; 238
    1800:	a8 2e       	mov	r10, r24
    1802:	05 c0       	rjmp	.+10     	; 0x180e <vfprintf+0x2d4>
    1804:	b8 2c       	mov	r11, r8
    1806:	a3 2c       	mov	r10, r3
    1808:	03 c0       	rjmp	.+6      	; 0x1810 <vfprintf+0x2d6>
    180a:	b8 2c       	mov	r11, r8
    180c:	01 c0       	rjmp	.+2      	; 0x1810 <vfprintf+0x2d6>
    180e:	b9 2c       	mov	r11, r9
    1810:	a4 fe       	sbrs	r10, 4
    1812:	0f c0       	rjmp	.+30     	; 0x1832 <vfprintf+0x2f8>
    1814:	fe 01       	movw	r30, r28
    1816:	e8 0d       	add	r30, r8
    1818:	f1 1d       	adc	r31, r1
    181a:	80 81       	ld	r24, Z
    181c:	80 33       	cpi	r24, 0x30	; 48
    181e:	21 f4       	brne	.+8      	; 0x1828 <vfprintf+0x2ee>
    1820:	9a 2d       	mov	r25, r10
    1822:	99 7e       	andi	r25, 0xE9	; 233
    1824:	a9 2e       	mov	r10, r25
    1826:	09 c0       	rjmp	.+18     	; 0x183a <vfprintf+0x300>
    1828:	a2 fe       	sbrs	r10, 2
    182a:	06 c0       	rjmp	.+12     	; 0x1838 <vfprintf+0x2fe>
    182c:	b3 94       	inc	r11
    182e:	b3 94       	inc	r11
    1830:	04 c0       	rjmp	.+8      	; 0x183a <vfprintf+0x300>
    1832:	8a 2d       	mov	r24, r10
    1834:	86 78       	andi	r24, 0x86	; 134
    1836:	09 f0       	breq	.+2      	; 0x183a <vfprintf+0x300>
    1838:	b3 94       	inc	r11
    183a:	a3 fc       	sbrc	r10, 3
    183c:	11 c0       	rjmp	.+34     	; 0x1860 <vfprintf+0x326>
    183e:	a0 fe       	sbrs	r10, 0
    1840:	06 c0       	rjmp	.+12     	; 0x184e <vfprintf+0x314>
    1842:	b2 14       	cp	r11, r2
    1844:	88 f4       	brcc	.+34     	; 0x1868 <vfprintf+0x32e>
    1846:	28 0c       	add	r2, r8
    1848:	92 2c       	mov	r9, r2
    184a:	9b 18       	sub	r9, r11
    184c:	0e c0       	rjmp	.+28     	; 0x186a <vfprintf+0x330>
    184e:	b2 14       	cp	r11, r2
    1850:	60 f4       	brcc	.+24     	; 0x186a <vfprintf+0x330>
    1852:	b6 01       	movw	r22, r12
    1854:	80 e2       	ldi	r24, 0x20	; 32
    1856:	90 e0       	ldi	r25, 0x00	; 0
    1858:	0e 94 45 10 	call	0x208a	; 0x208a <fputc>
    185c:	b3 94       	inc	r11
    185e:	f7 cf       	rjmp	.-18     	; 0x184e <vfprintf+0x314>
    1860:	b2 14       	cp	r11, r2
    1862:	18 f4       	brcc	.+6      	; 0x186a <vfprintf+0x330>
    1864:	2b 18       	sub	r2, r11
    1866:	02 c0       	rjmp	.+4      	; 0x186c <vfprintf+0x332>
    1868:	98 2c       	mov	r9, r8
    186a:	21 2c       	mov	r2, r1
    186c:	a4 fe       	sbrs	r10, 4
    186e:	10 c0       	rjmp	.+32     	; 0x1890 <vfprintf+0x356>
    1870:	b6 01       	movw	r22, r12
    1872:	80 e3       	ldi	r24, 0x30	; 48
    1874:	90 e0       	ldi	r25, 0x00	; 0
    1876:	0e 94 45 10 	call	0x208a	; 0x208a <fputc>
    187a:	a2 fe       	sbrs	r10, 2
    187c:	17 c0       	rjmp	.+46     	; 0x18ac <vfprintf+0x372>
    187e:	a1 fc       	sbrc	r10, 1
    1880:	03 c0       	rjmp	.+6      	; 0x1888 <vfprintf+0x34e>
    1882:	88 e7       	ldi	r24, 0x78	; 120
    1884:	90 e0       	ldi	r25, 0x00	; 0
    1886:	02 c0       	rjmp	.+4      	; 0x188c <vfprintf+0x352>
    1888:	88 e5       	ldi	r24, 0x58	; 88
    188a:	90 e0       	ldi	r25, 0x00	; 0
    188c:	b6 01       	movw	r22, r12
    188e:	0c c0       	rjmp	.+24     	; 0x18a8 <vfprintf+0x36e>
    1890:	8a 2d       	mov	r24, r10
    1892:	86 78       	andi	r24, 0x86	; 134
    1894:	59 f0       	breq	.+22     	; 0x18ac <vfprintf+0x372>
    1896:	a1 fe       	sbrs	r10, 1
    1898:	02 c0       	rjmp	.+4      	; 0x189e <vfprintf+0x364>
    189a:	8b e2       	ldi	r24, 0x2B	; 43
    189c:	01 c0       	rjmp	.+2      	; 0x18a0 <vfprintf+0x366>
    189e:	80 e2       	ldi	r24, 0x20	; 32
    18a0:	a7 fc       	sbrc	r10, 7
    18a2:	8d e2       	ldi	r24, 0x2D	; 45
    18a4:	b6 01       	movw	r22, r12
    18a6:	90 e0       	ldi	r25, 0x00	; 0
    18a8:	0e 94 45 10 	call	0x208a	; 0x208a <fputc>
    18ac:	89 14       	cp	r8, r9
    18ae:	38 f4       	brcc	.+14     	; 0x18be <vfprintf+0x384>
    18b0:	b6 01       	movw	r22, r12
    18b2:	80 e3       	ldi	r24, 0x30	; 48
    18b4:	90 e0       	ldi	r25, 0x00	; 0
    18b6:	0e 94 45 10 	call	0x208a	; 0x208a <fputc>
    18ba:	9a 94       	dec	r9
    18bc:	f7 cf       	rjmp	.-18     	; 0x18ac <vfprintf+0x372>
    18be:	8a 94       	dec	r8
    18c0:	f3 01       	movw	r30, r6
    18c2:	e8 0d       	add	r30, r8
    18c4:	f1 1d       	adc	r31, r1
    18c6:	80 81       	ld	r24, Z
    18c8:	b6 01       	movw	r22, r12
    18ca:	90 e0       	ldi	r25, 0x00	; 0
    18cc:	0e 94 45 10 	call	0x208a	; 0x208a <fputc>
    18d0:	81 10       	cpse	r8, r1
    18d2:	f5 cf       	rjmp	.-22     	; 0x18be <vfprintf+0x384>
    18d4:	22 20       	and	r2, r2
    18d6:	09 f4       	brne	.+2      	; 0x18da <vfprintf+0x3a0>
    18d8:	42 ce       	rjmp	.-892    	; 0x155e <vfprintf+0x24>
    18da:	b6 01       	movw	r22, r12
    18dc:	80 e2       	ldi	r24, 0x20	; 32
    18de:	90 e0       	ldi	r25, 0x00	; 0
    18e0:	0e 94 45 10 	call	0x208a	; 0x208a <fputc>
    18e4:	2a 94       	dec	r2
    18e6:	f6 cf       	rjmp	.-20     	; 0x18d4 <vfprintf+0x39a>
    18e8:	f6 01       	movw	r30, r12
    18ea:	86 81       	ldd	r24, Z+6	; 0x06
    18ec:	97 81       	ldd	r25, Z+7	; 0x07
    18ee:	02 c0       	rjmp	.+4      	; 0x18f4 <vfprintf+0x3ba>
    18f0:	8f ef       	ldi	r24, 0xFF	; 255
    18f2:	9f ef       	ldi	r25, 0xFF	; 255
    18f4:	2b 96       	adiw	r28, 0x0b	; 11
    18f6:	e2 e1       	ldi	r30, 0x12	; 18
    18f8:	0c 94 09 11 	jmp	0x2212	; 0x2212 <__epilogue_restores__>

000018fc <dtoa_prf>:
    18fc:	a9 e0       	ldi	r26, 0x09	; 9
    18fe:	b0 e0       	ldi	r27, 0x00	; 0
    1900:	e4 e8       	ldi	r30, 0x84	; 132
    1902:	fc e0       	ldi	r31, 0x0C	; 12
    1904:	0c 94 f3 10 	jmp	0x21e6	; 0x21e6 <__prologue_saves__+0xc>
    1908:	6a 01       	movw	r12, r20
    190a:	12 2f       	mov	r17, r18
    190c:	b0 2e       	mov	r11, r16
    190e:	2b e3       	ldi	r18, 0x3B	; 59
    1910:	20 17       	cp	r18, r16
    1912:	20 f0       	brcs	.+8      	; 0x191c <dtoa_prf+0x20>
    1914:	ff 24       	eor	r15, r15
    1916:	f3 94       	inc	r15
    1918:	f0 0e       	add	r15, r16
    191a:	02 c0       	rjmp	.+4      	; 0x1920 <dtoa_prf+0x24>
    191c:	2c e3       	ldi	r18, 0x3C	; 60
    191e:	f2 2e       	mov	r15, r18
    1920:	0f 2d       	mov	r16, r15
    1922:	27 e0       	ldi	r18, 0x07	; 7
    1924:	ae 01       	movw	r20, r28
    1926:	4f 5f       	subi	r20, 0xFF	; 255
    1928:	5f 4f       	sbci	r21, 0xFF	; 255
    192a:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <__ftoa_engine>
    192e:	bc 01       	movw	r22, r24
    1930:	49 81       	ldd	r20, Y+1	; 0x01
    1932:	84 2f       	mov	r24, r20
    1934:	89 70       	andi	r24, 0x09	; 9
    1936:	81 30       	cpi	r24, 0x01	; 1
    1938:	31 f0       	breq	.+12     	; 0x1946 <dtoa_prf+0x4a>
    193a:	e1 fc       	sbrc	r14, 1
    193c:	06 c0       	rjmp	.+12     	; 0x194a <dtoa_prf+0x4e>
    193e:	e0 fe       	sbrs	r14, 0
    1940:	06 c0       	rjmp	.+12     	; 0x194e <dtoa_prf+0x52>
    1942:	90 e2       	ldi	r25, 0x20	; 32
    1944:	05 c0       	rjmp	.+10     	; 0x1950 <dtoa_prf+0x54>
    1946:	9d e2       	ldi	r25, 0x2D	; 45
    1948:	03 c0       	rjmp	.+6      	; 0x1950 <dtoa_prf+0x54>
    194a:	9b e2       	ldi	r25, 0x2B	; 43
    194c:	01 c0       	rjmp	.+2      	; 0x1950 <dtoa_prf+0x54>
    194e:	90 e0       	ldi	r25, 0x00	; 0
    1950:	5e 2d       	mov	r21, r14
    1952:	50 71       	andi	r21, 0x10	; 16
    1954:	43 ff       	sbrs	r20, 3
    1956:	3c c0       	rjmp	.+120    	; 0x19d0 <dtoa_prf+0xd4>
    1958:	91 11       	cpse	r25, r1
    195a:	02 c0       	rjmp	.+4      	; 0x1960 <dtoa_prf+0x64>
    195c:	83 e0       	ldi	r24, 0x03	; 3
    195e:	01 c0       	rjmp	.+2      	; 0x1962 <dtoa_prf+0x66>
    1960:	84 e0       	ldi	r24, 0x04	; 4
    1962:	81 17       	cp	r24, r17
    1964:	18 f4       	brcc	.+6      	; 0x196c <dtoa_prf+0x70>
    1966:	21 2f       	mov	r18, r17
    1968:	28 1b       	sub	r18, r24
    196a:	01 c0       	rjmp	.+2      	; 0x196e <dtoa_prf+0x72>
    196c:	20 e0       	ldi	r18, 0x00	; 0
    196e:	51 11       	cpse	r21, r1
    1970:	0b c0       	rjmp	.+22     	; 0x1988 <dtoa_prf+0x8c>
    1972:	f6 01       	movw	r30, r12
    1974:	82 2f       	mov	r24, r18
    1976:	30 e2       	ldi	r19, 0x20	; 32
    1978:	88 23       	and	r24, r24
    197a:	19 f0       	breq	.+6      	; 0x1982 <dtoa_prf+0x86>
    197c:	31 93       	st	Z+, r19
    197e:	81 50       	subi	r24, 0x01	; 1
    1980:	fb cf       	rjmp	.-10     	; 0x1978 <dtoa_prf+0x7c>
    1982:	c2 0e       	add	r12, r18
    1984:	d1 1c       	adc	r13, r1
    1986:	20 e0       	ldi	r18, 0x00	; 0
    1988:	99 23       	and	r25, r25
    198a:	29 f0       	breq	.+10     	; 0x1996 <dtoa_prf+0x9a>
    198c:	d6 01       	movw	r26, r12
    198e:	9c 93       	st	X, r25
    1990:	f6 01       	movw	r30, r12
    1992:	31 96       	adiw	r30, 0x01	; 1
    1994:	6f 01       	movw	r12, r30
    1996:	c6 01       	movw	r24, r12
    1998:	03 96       	adiw	r24, 0x03	; 3
    199a:	e2 fe       	sbrs	r14, 2
    199c:	0a c0       	rjmp	.+20     	; 0x19b2 <dtoa_prf+0xb6>
    199e:	3e e4       	ldi	r19, 0x4E	; 78
    19a0:	d6 01       	movw	r26, r12
    19a2:	3c 93       	st	X, r19
    19a4:	41 e4       	ldi	r20, 0x41	; 65
    19a6:	11 96       	adiw	r26, 0x01	; 1
    19a8:	4c 93       	st	X, r20
    19aa:	11 97       	sbiw	r26, 0x01	; 1
    19ac:	12 96       	adiw	r26, 0x02	; 2
    19ae:	3c 93       	st	X, r19
    19b0:	06 c0       	rjmp	.+12     	; 0x19be <dtoa_prf+0xc2>
    19b2:	3e e6       	ldi	r19, 0x6E	; 110
    19b4:	f6 01       	movw	r30, r12
    19b6:	30 83       	st	Z, r19
    19b8:	41 e6       	ldi	r20, 0x61	; 97
    19ba:	41 83       	std	Z+1, r20	; 0x01
    19bc:	32 83       	std	Z+2, r19	; 0x02
    19be:	fc 01       	movw	r30, r24
    19c0:	32 2f       	mov	r19, r18
    19c2:	40 e2       	ldi	r20, 0x20	; 32
    19c4:	33 23       	and	r19, r19
    19c6:	09 f4       	brne	.+2      	; 0x19ca <dtoa_prf+0xce>
    19c8:	42 c0       	rjmp	.+132    	; 0x1a4e <dtoa_prf+0x152>
    19ca:	41 93       	st	Z+, r20
    19cc:	31 50       	subi	r19, 0x01	; 1
    19ce:	fa cf       	rjmp	.-12     	; 0x19c4 <dtoa_prf+0xc8>
    19d0:	42 ff       	sbrs	r20, 2
    19d2:	44 c0       	rjmp	.+136    	; 0x1a5c <dtoa_prf+0x160>
    19d4:	91 11       	cpse	r25, r1
    19d6:	02 c0       	rjmp	.+4      	; 0x19dc <dtoa_prf+0xe0>
    19d8:	83 e0       	ldi	r24, 0x03	; 3
    19da:	01 c0       	rjmp	.+2      	; 0x19de <dtoa_prf+0xe2>
    19dc:	84 e0       	ldi	r24, 0x04	; 4
    19de:	81 17       	cp	r24, r17
    19e0:	18 f4       	brcc	.+6      	; 0x19e8 <dtoa_prf+0xec>
    19e2:	21 2f       	mov	r18, r17
    19e4:	28 1b       	sub	r18, r24
    19e6:	01 c0       	rjmp	.+2      	; 0x19ea <dtoa_prf+0xee>
    19e8:	20 e0       	ldi	r18, 0x00	; 0
    19ea:	51 11       	cpse	r21, r1
    19ec:	0b c0       	rjmp	.+22     	; 0x1a04 <dtoa_prf+0x108>
    19ee:	f6 01       	movw	r30, r12
    19f0:	82 2f       	mov	r24, r18
    19f2:	30 e2       	ldi	r19, 0x20	; 32
    19f4:	88 23       	and	r24, r24
    19f6:	19 f0       	breq	.+6      	; 0x19fe <dtoa_prf+0x102>
    19f8:	31 93       	st	Z+, r19
    19fa:	81 50       	subi	r24, 0x01	; 1
    19fc:	fb cf       	rjmp	.-10     	; 0x19f4 <dtoa_prf+0xf8>
    19fe:	c2 0e       	add	r12, r18
    1a00:	d1 1c       	adc	r13, r1
    1a02:	20 e0       	ldi	r18, 0x00	; 0
    1a04:	99 23       	and	r25, r25
    1a06:	29 f0       	breq	.+10     	; 0x1a12 <dtoa_prf+0x116>
    1a08:	d6 01       	movw	r26, r12
    1a0a:	9c 93       	st	X, r25
    1a0c:	f6 01       	movw	r30, r12
    1a0e:	31 96       	adiw	r30, 0x01	; 1
    1a10:	6f 01       	movw	r12, r30
    1a12:	c6 01       	movw	r24, r12
    1a14:	03 96       	adiw	r24, 0x03	; 3
    1a16:	e2 fe       	sbrs	r14, 2
    1a18:	0b c0       	rjmp	.+22     	; 0x1a30 <dtoa_prf+0x134>
    1a1a:	39 e4       	ldi	r19, 0x49	; 73
    1a1c:	d6 01       	movw	r26, r12
    1a1e:	3c 93       	st	X, r19
    1a20:	3e e4       	ldi	r19, 0x4E	; 78
    1a22:	11 96       	adiw	r26, 0x01	; 1
    1a24:	3c 93       	st	X, r19
    1a26:	11 97       	sbiw	r26, 0x01	; 1
    1a28:	36 e4       	ldi	r19, 0x46	; 70
    1a2a:	12 96       	adiw	r26, 0x02	; 2
    1a2c:	3c 93       	st	X, r19
    1a2e:	07 c0       	rjmp	.+14     	; 0x1a3e <dtoa_prf+0x142>
    1a30:	39 e6       	ldi	r19, 0x69	; 105
    1a32:	f6 01       	movw	r30, r12
    1a34:	30 83       	st	Z, r19
    1a36:	3e e6       	ldi	r19, 0x6E	; 110
    1a38:	31 83       	std	Z+1, r19	; 0x01
    1a3a:	36 e6       	ldi	r19, 0x66	; 102
    1a3c:	32 83       	std	Z+2, r19	; 0x02
    1a3e:	fc 01       	movw	r30, r24
    1a40:	32 2f       	mov	r19, r18
    1a42:	40 e2       	ldi	r20, 0x20	; 32
    1a44:	33 23       	and	r19, r19
    1a46:	19 f0       	breq	.+6      	; 0x1a4e <dtoa_prf+0x152>
    1a48:	41 93       	st	Z+, r20
    1a4a:	31 50       	subi	r19, 0x01	; 1
    1a4c:	fb cf       	rjmp	.-10     	; 0x1a44 <dtoa_prf+0x148>
    1a4e:	fc 01       	movw	r30, r24
    1a50:	e2 0f       	add	r30, r18
    1a52:	f1 1d       	adc	r31, r1
    1a54:	10 82       	st	Z, r1
    1a56:	8e ef       	ldi	r24, 0xFE	; 254
    1a58:	9f ef       	ldi	r25, 0xFF	; 255
    1a5a:	a6 c0       	rjmp	.+332    	; 0x1ba8 <dtoa_prf+0x2ac>
    1a5c:	21 e0       	ldi	r18, 0x01	; 1
    1a5e:	30 e0       	ldi	r19, 0x00	; 0
    1a60:	91 11       	cpse	r25, r1
    1a62:	02 c0       	rjmp	.+4      	; 0x1a68 <dtoa_prf+0x16c>
    1a64:	20 e0       	ldi	r18, 0x00	; 0
    1a66:	30 e0       	ldi	r19, 0x00	; 0
    1a68:	16 16       	cp	r1, r22
    1a6a:	17 06       	cpc	r1, r23
    1a6c:	1c f4       	brge	.+6      	; 0x1a74 <dtoa_prf+0x178>
    1a6e:	fb 01       	movw	r30, r22
    1a70:	31 96       	adiw	r30, 0x01	; 1
    1a72:	02 c0       	rjmp	.+4      	; 0x1a78 <dtoa_prf+0x17c>
    1a74:	e1 e0       	ldi	r30, 0x01	; 1
    1a76:	f0 e0       	ldi	r31, 0x00	; 0
    1a78:	2e 0f       	add	r18, r30
    1a7a:	3f 1f       	adc	r19, r31
    1a7c:	bb 20       	and	r11, r11
    1a7e:	21 f0       	breq	.+8      	; 0x1a88 <dtoa_prf+0x18c>
    1a80:	eb 2d       	mov	r30, r11
    1a82:	f0 e0       	ldi	r31, 0x00	; 0
    1a84:	31 96       	adiw	r30, 0x01	; 1
    1a86:	02 c0       	rjmp	.+4      	; 0x1a8c <dtoa_prf+0x190>
    1a88:	e0 e0       	ldi	r30, 0x00	; 0
    1a8a:	f0 e0       	ldi	r31, 0x00	; 0
    1a8c:	2e 0f       	add	r18, r30
    1a8e:	3f 1f       	adc	r19, r31
    1a90:	e1 2f       	mov	r30, r17
    1a92:	f0 e0       	ldi	r31, 0x00	; 0
    1a94:	2e 17       	cp	r18, r30
    1a96:	3f 07       	cpc	r19, r31
    1a98:	1c f4       	brge	.+6      	; 0x1aa0 <dtoa_prf+0x1a4>
    1a9a:	12 1b       	sub	r17, r18
    1a9c:	21 2f       	mov	r18, r17
    1a9e:	01 c0       	rjmp	.+2      	; 0x1aa2 <dtoa_prf+0x1a6>
    1aa0:	20 e0       	ldi	r18, 0x00	; 0
    1aa2:	8e 2d       	mov	r24, r14
    1aa4:	88 71       	andi	r24, 0x18	; 24
    1aa6:	59 f4       	brne	.+22     	; 0x1abe <dtoa_prf+0x1c2>
    1aa8:	f6 01       	movw	r30, r12
    1aaa:	82 2f       	mov	r24, r18
    1aac:	30 e2       	ldi	r19, 0x20	; 32
    1aae:	88 23       	and	r24, r24
    1ab0:	19 f0       	breq	.+6      	; 0x1ab8 <dtoa_prf+0x1bc>
    1ab2:	31 93       	st	Z+, r19
    1ab4:	81 50       	subi	r24, 0x01	; 1
    1ab6:	fb cf       	rjmp	.-10     	; 0x1aae <dtoa_prf+0x1b2>
    1ab8:	c2 0e       	add	r12, r18
    1aba:	d1 1c       	adc	r13, r1
    1abc:	20 e0       	ldi	r18, 0x00	; 0
    1abe:	99 23       	and	r25, r25
    1ac0:	29 f0       	breq	.+10     	; 0x1acc <dtoa_prf+0x1d0>
    1ac2:	d6 01       	movw	r26, r12
    1ac4:	9c 93       	st	X, r25
    1ac6:	f6 01       	movw	r30, r12
    1ac8:	31 96       	adiw	r30, 0x01	; 1
    1aca:	6f 01       	movw	r12, r30
    1acc:	51 11       	cpse	r21, r1
    1ace:	0b c0       	rjmp	.+22     	; 0x1ae6 <dtoa_prf+0x1ea>
    1ad0:	f6 01       	movw	r30, r12
    1ad2:	82 2f       	mov	r24, r18
    1ad4:	90 e3       	ldi	r25, 0x30	; 48
    1ad6:	88 23       	and	r24, r24
    1ad8:	19 f0       	breq	.+6      	; 0x1ae0 <dtoa_prf+0x1e4>
    1ada:	91 93       	st	Z+, r25
    1adc:	81 50       	subi	r24, 0x01	; 1
    1ade:	fb cf       	rjmp	.-10     	; 0x1ad6 <dtoa_prf+0x1da>
    1ae0:	c2 0e       	add	r12, r18
    1ae2:	d1 1c       	adc	r13, r1
    1ae4:	20 e0       	ldi	r18, 0x00	; 0
    1ae6:	0f 2d       	mov	r16, r15
    1ae8:	06 0f       	add	r16, r22
    1aea:	9a 81       	ldd	r25, Y+2	; 0x02
    1aec:	34 2f       	mov	r19, r20
    1aee:	30 71       	andi	r19, 0x10	; 16
    1af0:	44 ff       	sbrs	r20, 4
    1af2:	03 c0       	rjmp	.+6      	; 0x1afa <dtoa_prf+0x1fe>
    1af4:	91 33       	cpi	r25, 0x31	; 49
    1af6:	09 f4       	brne	.+2      	; 0x1afa <dtoa_prf+0x1fe>
    1af8:	01 50       	subi	r16, 0x01	; 1
    1afa:	10 16       	cp	r1, r16
    1afc:	24 f4       	brge	.+8      	; 0x1b06 <dtoa_prf+0x20a>
    1afe:	09 30       	cpi	r16, 0x09	; 9
    1b00:	18 f0       	brcs	.+6      	; 0x1b08 <dtoa_prf+0x20c>
    1b02:	08 e0       	ldi	r16, 0x08	; 8
    1b04:	01 c0       	rjmp	.+2      	; 0x1b08 <dtoa_prf+0x20c>
    1b06:	01 e0       	ldi	r16, 0x01	; 1
    1b08:	ab 01       	movw	r20, r22
    1b0a:	77 ff       	sbrs	r23, 7
    1b0c:	02 c0       	rjmp	.+4      	; 0x1b12 <dtoa_prf+0x216>
    1b0e:	40 e0       	ldi	r20, 0x00	; 0
    1b10:	50 e0       	ldi	r21, 0x00	; 0
    1b12:	fb 01       	movw	r30, r22
    1b14:	e4 1b       	sub	r30, r20
    1b16:	f5 0b       	sbc	r31, r21
    1b18:	a1 e0       	ldi	r26, 0x01	; 1
    1b1a:	b0 e0       	ldi	r27, 0x00	; 0
    1b1c:	ac 0f       	add	r26, r28
    1b1e:	bd 1f       	adc	r27, r29
    1b20:	ea 0f       	add	r30, r26
    1b22:	fb 1f       	adc	r31, r27
    1b24:	8e e2       	ldi	r24, 0x2E	; 46
    1b26:	a8 2e       	mov	r10, r24
    1b28:	4b 01       	movw	r8, r22
    1b2a:	80 1a       	sub	r8, r16
    1b2c:	91 08       	sbc	r9, r1
    1b2e:	0b 2d       	mov	r16, r11
    1b30:	10 e0       	ldi	r17, 0x00	; 0
    1b32:	11 95       	neg	r17
    1b34:	01 95       	neg	r16
    1b36:	11 09       	sbc	r17, r1
    1b38:	4f 3f       	cpi	r20, 0xFF	; 255
    1b3a:	bf ef       	ldi	r27, 0xFF	; 255
    1b3c:	5b 07       	cpc	r21, r27
    1b3e:	21 f4       	brne	.+8      	; 0x1b48 <dtoa_prf+0x24c>
    1b40:	d6 01       	movw	r26, r12
    1b42:	ac 92       	st	X, r10
    1b44:	11 96       	adiw	r26, 0x01	; 1
    1b46:	6d 01       	movw	r12, r26
    1b48:	64 17       	cp	r22, r20
    1b4a:	75 07       	cpc	r23, r21
    1b4c:	2c f0       	brlt	.+10     	; 0x1b58 <dtoa_prf+0x25c>
    1b4e:	84 16       	cp	r8, r20
    1b50:	95 06       	cpc	r9, r21
    1b52:	14 f4       	brge	.+4      	; 0x1b58 <dtoa_prf+0x25c>
    1b54:	81 81       	ldd	r24, Z+1	; 0x01
    1b56:	01 c0       	rjmp	.+2      	; 0x1b5a <dtoa_prf+0x25e>
    1b58:	80 e3       	ldi	r24, 0x30	; 48
    1b5a:	41 50       	subi	r20, 0x01	; 1
    1b5c:	51 09       	sbc	r21, r1
    1b5e:	31 96       	adiw	r30, 0x01	; 1
    1b60:	d6 01       	movw	r26, r12
    1b62:	11 96       	adiw	r26, 0x01	; 1
    1b64:	7d 01       	movw	r14, r26
    1b66:	40 17       	cp	r20, r16
    1b68:	51 07       	cpc	r21, r17
    1b6a:	24 f0       	brlt	.+8      	; 0x1b74 <dtoa_prf+0x278>
    1b6c:	d6 01       	movw	r26, r12
    1b6e:	8c 93       	st	X, r24
    1b70:	67 01       	movw	r12, r14
    1b72:	e2 cf       	rjmp	.-60     	; 0x1b38 <dtoa_prf+0x23c>
    1b74:	64 17       	cp	r22, r20
    1b76:	75 07       	cpc	r23, r21
    1b78:	39 f4       	brne	.+14     	; 0x1b88 <dtoa_prf+0x28c>
    1b7a:	96 33       	cpi	r25, 0x36	; 54
    1b7c:	20 f4       	brcc	.+8      	; 0x1b86 <dtoa_prf+0x28a>
    1b7e:	95 33       	cpi	r25, 0x35	; 53
    1b80:	19 f4       	brne	.+6      	; 0x1b88 <dtoa_prf+0x28c>
    1b82:	31 11       	cpse	r19, r1
    1b84:	01 c0       	rjmp	.+2      	; 0x1b88 <dtoa_prf+0x28c>
    1b86:	81 e3       	ldi	r24, 0x31	; 49
    1b88:	f6 01       	movw	r30, r12
    1b8a:	80 83       	st	Z, r24
    1b8c:	f7 01       	movw	r30, r14
    1b8e:	82 2f       	mov	r24, r18
    1b90:	90 e2       	ldi	r25, 0x20	; 32
    1b92:	88 23       	and	r24, r24
    1b94:	19 f0       	breq	.+6      	; 0x1b9c <dtoa_prf+0x2a0>
    1b96:	91 93       	st	Z+, r25
    1b98:	81 50       	subi	r24, 0x01	; 1
    1b9a:	fb cf       	rjmp	.-10     	; 0x1b92 <dtoa_prf+0x296>
    1b9c:	f7 01       	movw	r30, r14
    1b9e:	e2 0f       	add	r30, r18
    1ba0:	f1 1d       	adc	r31, r1
    1ba2:	10 82       	st	Z, r1
    1ba4:	80 e0       	ldi	r24, 0x00	; 0
    1ba6:	90 e0       	ldi	r25, 0x00	; 0
    1ba8:	29 96       	adiw	r28, 0x09	; 9
    1baa:	ec e0       	ldi	r30, 0x0C	; 12
    1bac:	0c 94 0f 11 	jmp	0x221e	; 0x221e <__epilogue_restores__+0xc>

00001bb0 <strtod>:
    1bb0:	a0 e0       	ldi	r26, 0x00	; 0
    1bb2:	b0 e0       	ldi	r27, 0x00	; 0
    1bb4:	ee ed       	ldi	r30, 0xDE	; 222
    1bb6:	fd e0       	ldi	r31, 0x0D	; 13
    1bb8:	0c 94 f3 10 	jmp	0x21e6	; 0x21e6 <__prologue_saves__+0xc>
    1bbc:	ec 01       	movw	r28, r24
    1bbe:	6b 01       	movw	r12, r22
    1bc0:	61 15       	cp	r22, r1
    1bc2:	71 05       	cpc	r23, r1
    1bc4:	19 f0       	breq	.+6      	; 0x1bcc <strtod+0x1c>
    1bc6:	fb 01       	movw	r30, r22
    1bc8:	91 83       	std	Z+1, r25	; 0x01
    1bca:	80 83       	st	Z, r24
    1bcc:	7e 01       	movw	r14, r28
    1bce:	ff ef       	ldi	r31, 0xFF	; 255
    1bd0:	ef 1a       	sub	r14, r31
    1bd2:	ff 0a       	sbc	r15, r31
    1bd4:	08 81       	ld	r16, Y
    1bd6:	80 2f       	mov	r24, r16
    1bd8:	90 e0       	ldi	r25, 0x00	; 0
    1bda:	0e 94 fe 0f 	call	0x1ffc	; 0x1ffc <isspace>
    1bde:	89 2b       	or	r24, r25
    1be0:	11 f0       	breq	.+4      	; 0x1be6 <strtod+0x36>
    1be2:	e7 01       	movw	r28, r14
    1be4:	f3 cf       	rjmp	.-26     	; 0x1bcc <strtod+0x1c>
    1be6:	0d 32       	cpi	r16, 0x2D	; 45
    1be8:	39 f4       	brne	.+14     	; 0x1bf8 <strtod+0x48>
    1bea:	7e 01       	movw	r14, r28
    1bec:	82 e0       	ldi	r24, 0x02	; 2
    1bee:	e8 0e       	add	r14, r24
    1bf0:	f1 1c       	adc	r15, r1
    1bf2:	09 81       	ldd	r16, Y+1	; 0x01
    1bf4:	11 e0       	ldi	r17, 0x01	; 1
    1bf6:	08 c0       	rjmp	.+16     	; 0x1c08 <strtod+0x58>
    1bf8:	0b 32       	cpi	r16, 0x2B	; 43
    1bfa:	29 f4       	brne	.+10     	; 0x1c06 <strtod+0x56>
    1bfc:	7e 01       	movw	r14, r28
    1bfe:	92 e0       	ldi	r25, 0x02	; 2
    1c00:	e9 0e       	add	r14, r25
    1c02:	f1 1c       	adc	r15, r1
    1c04:	09 81       	ldd	r16, Y+1	; 0x01
    1c06:	10 e0       	ldi	r17, 0x00	; 0
    1c08:	e7 01       	movw	r28, r14
    1c0a:	21 97       	sbiw	r28, 0x01	; 1
    1c0c:	43 e0       	ldi	r20, 0x03	; 3
    1c0e:	50 e0       	ldi	r21, 0x00	; 0
    1c10:	6c e5       	ldi	r22, 0x5C	; 92
    1c12:	70 e0       	ldi	r23, 0x00	; 0
    1c14:	ce 01       	movw	r24, r28
    1c16:	0e 94 07 10 	call	0x200e	; 0x200e <strncasecmp_P>
    1c1a:	89 2b       	or	r24, r25
    1c1c:	c1 f4       	brne	.+48     	; 0x1c4e <strtod+0x9e>
    1c1e:	23 96       	adiw	r28, 0x03	; 3
    1c20:	45 e0       	ldi	r20, 0x05	; 5
    1c22:	50 e0       	ldi	r21, 0x00	; 0
    1c24:	67 e5       	ldi	r22, 0x57	; 87
    1c26:	70 e0       	ldi	r23, 0x00	; 0
    1c28:	ce 01       	movw	r24, r28
    1c2a:	0e 94 07 10 	call	0x200e	; 0x200e <strncasecmp_P>
    1c2e:	89 2b       	or	r24, r25
    1c30:	09 f4       	brne	.+2      	; 0x1c34 <strtod+0x84>
    1c32:	25 96       	adiw	r28, 0x05	; 5
    1c34:	c1 14       	cp	r12, r1
    1c36:	d1 04       	cpc	r13, r1
    1c38:	19 f0       	breq	.+6      	; 0x1c40 <strtod+0x90>
    1c3a:	f6 01       	movw	r30, r12
    1c3c:	d1 83       	std	Z+1, r29	; 0x01
    1c3e:	c0 83       	st	Z, r28
    1c40:	11 11       	cpse	r17, r1
    1c42:	f6 c0       	rjmp	.+492    	; 0x1e30 <strtod+0x280>
    1c44:	60 e0       	ldi	r22, 0x00	; 0
    1c46:	70 e0       	ldi	r23, 0x00	; 0
    1c48:	80 e8       	ldi	r24, 0x80	; 128
    1c4a:	9f e7       	ldi	r25, 0x7F	; 127
    1c4c:	fa c0       	rjmp	.+500    	; 0x1e42 <strtod+0x292>
    1c4e:	43 e0       	ldi	r20, 0x03	; 3
    1c50:	50 e0       	ldi	r21, 0x00	; 0
    1c52:	64 e5       	ldi	r22, 0x54	; 84
    1c54:	70 e0       	ldi	r23, 0x00	; 0
    1c56:	ce 01       	movw	r24, r28
    1c58:	0e 94 07 10 	call	0x200e	; 0x200e <strncasecmp_P>
    1c5c:	89 2b       	or	r24, r25
    1c5e:	59 f4       	brne	.+22     	; 0x1c76 <strtod+0xc6>
    1c60:	c1 14       	cp	r12, r1
    1c62:	d1 04       	cpc	r13, r1
    1c64:	09 f4       	brne	.+2      	; 0x1c68 <strtod+0xb8>
    1c66:	e9 c0       	rjmp	.+466    	; 0x1e3a <strtod+0x28a>
    1c68:	f2 e0       	ldi	r31, 0x02	; 2
    1c6a:	ef 0e       	add	r14, r31
    1c6c:	f1 1c       	adc	r15, r1
    1c6e:	f6 01       	movw	r30, r12
    1c70:	f1 82       	std	Z+1, r15	; 0x01
    1c72:	e0 82       	st	Z, r14
    1c74:	e2 c0       	rjmp	.+452    	; 0x1e3a <strtod+0x28a>
    1c76:	20 e0       	ldi	r18, 0x00	; 0
    1c78:	30 e0       	ldi	r19, 0x00	; 0
    1c7a:	a9 01       	movw	r20, r18
    1c7c:	c0 e0       	ldi	r28, 0x00	; 0
    1c7e:	d0 e0       	ldi	r29, 0x00	; 0
    1c80:	f7 01       	movw	r30, r14
    1c82:	80 ed       	ldi	r24, 0xD0	; 208
    1c84:	a8 2e       	mov	r10, r24
    1c86:	a0 0e       	add	r10, r16
    1c88:	89 e0       	ldi	r24, 0x09	; 9
    1c8a:	8a 15       	cp	r24, r10
    1c8c:	30 f1       	brcs	.+76     	; 0x1cda <strtod+0x12a>
    1c8e:	91 2f       	mov	r25, r17
    1c90:	92 60       	ori	r25, 0x02	; 2
    1c92:	b9 2e       	mov	r11, r25
    1c94:	81 2f       	mov	r24, r17
    1c96:	88 70       	andi	r24, 0x08	; 8
    1c98:	12 ff       	sbrs	r17, 2
    1c9a:	04 c0       	rjmp	.+8      	; 0x1ca4 <strtod+0xf4>
    1c9c:	81 11       	cpse	r24, r1
    1c9e:	24 c0       	rjmp	.+72     	; 0x1ce8 <strtod+0x138>
    1ca0:	21 96       	adiw	r28, 0x01	; 1
    1ca2:	22 c0       	rjmp	.+68     	; 0x1ce8 <strtod+0x138>
    1ca4:	81 11       	cpse	r24, r1
    1ca6:	21 97       	sbiw	r28, 0x01	; 1
    1ca8:	a5 e0       	ldi	r26, 0x05	; 5
    1caa:	b0 e0       	ldi	r27, 0x00	; 0
    1cac:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <__muluhisi3>
    1cb0:	dc 01       	movw	r26, r24
    1cb2:	cb 01       	movw	r24, r22
    1cb4:	88 0f       	add	r24, r24
    1cb6:	99 1f       	adc	r25, r25
    1cb8:	aa 1f       	adc	r26, r26
    1cba:	bb 1f       	adc	r27, r27
    1cbc:	9c 01       	movw	r18, r24
    1cbe:	ad 01       	movw	r20, r26
    1cc0:	2a 0d       	add	r18, r10
    1cc2:	31 1d       	adc	r19, r1
    1cc4:	41 1d       	adc	r20, r1
    1cc6:	51 1d       	adc	r21, r1
    1cc8:	28 39       	cpi	r18, 0x98	; 152
    1cca:	89 e9       	ldi	r24, 0x99	; 153
    1ccc:	38 07       	cpc	r19, r24
    1cce:	48 07       	cpc	r20, r24
    1cd0:	89 e1       	ldi	r24, 0x19	; 25
    1cd2:	58 07       	cpc	r21, r24
    1cd4:	48 f0       	brcs	.+18     	; 0x1ce8 <strtod+0x138>
    1cd6:	16 60       	ori	r17, 0x06	; 6
    1cd8:	06 c0       	rjmp	.+12     	; 0x1ce6 <strtod+0x136>
    1cda:	9e ef       	ldi	r25, 0xFE	; 254
    1cdc:	a9 12       	cpse	r10, r25
    1cde:	0a c0       	rjmp	.+20     	; 0x1cf4 <strtod+0x144>
    1ce0:	13 fd       	sbrc	r17, 3
    1ce2:	40 c0       	rjmp	.+128    	; 0x1d64 <strtod+0x1b4>
    1ce4:	18 60       	ori	r17, 0x08	; 8
    1ce6:	b1 2e       	mov	r11, r17
    1ce8:	8f ef       	ldi	r24, 0xFF	; 255
    1cea:	e8 1a       	sub	r14, r24
    1cec:	f8 0a       	sbc	r15, r24
    1cee:	00 81       	ld	r16, Z
    1cf0:	1b 2d       	mov	r17, r11
    1cf2:	c6 cf       	rjmp	.-116    	; 0x1c80 <strtod+0xd0>
    1cf4:	80 2f       	mov	r24, r16
    1cf6:	8f 7d       	andi	r24, 0xDF	; 223
    1cf8:	85 34       	cpi	r24, 0x45	; 69
    1cfa:	a1 f5       	brne	.+104    	; 0x1d64 <strtod+0x1b4>
    1cfc:	80 81       	ld	r24, Z
    1cfe:	8d 32       	cpi	r24, 0x2D	; 45
    1d00:	11 f4       	brne	.+4      	; 0x1d06 <strtod+0x156>
    1d02:	10 61       	ori	r17, 0x10	; 16
    1d04:	06 c0       	rjmp	.+12     	; 0x1d12 <strtod+0x162>
    1d06:	8b 32       	cpi	r24, 0x2B	; 43
    1d08:	21 f0       	breq	.+8      	; 0x1d12 <strtod+0x162>
    1d0a:	31 96       	adiw	r30, 0x01	; 1
    1d0c:	61 e0       	ldi	r22, 0x01	; 1
    1d0e:	70 e0       	ldi	r23, 0x00	; 0
    1d10:	04 c0       	rjmp	.+8      	; 0x1d1a <strtod+0x16a>
    1d12:	81 81       	ldd	r24, Z+1	; 0x01
    1d14:	32 96       	adiw	r30, 0x02	; 2
    1d16:	62 e0       	ldi	r22, 0x02	; 2
    1d18:	70 e0       	ldi	r23, 0x00	; 0
    1d1a:	80 53       	subi	r24, 0x30	; 48
    1d1c:	8a 30       	cpi	r24, 0x0A	; 10
    1d1e:	18 f0       	brcs	.+6      	; 0x1d26 <strtod+0x176>
    1d20:	e6 1b       	sub	r30, r22
    1d22:	f7 0b       	sbc	r31, r23
    1d24:	1f c0       	rjmp	.+62     	; 0x1d64 <strtod+0x1b4>
    1d26:	60 e0       	ldi	r22, 0x00	; 0
    1d28:	70 e0       	ldi	r23, 0x00	; 0
    1d2a:	60 38       	cpi	r22, 0x80	; 128
    1d2c:	9c e0       	ldi	r25, 0x0C	; 12
    1d2e:	79 07       	cpc	r23, r25
    1d30:	5c f4       	brge	.+22     	; 0x1d48 <strtod+0x198>
    1d32:	db 01       	movw	r26, r22
    1d34:	aa 0f       	add	r26, r26
    1d36:	bb 1f       	adc	r27, r27
    1d38:	aa 0f       	add	r26, r26
    1d3a:	bb 1f       	adc	r27, r27
    1d3c:	6a 0f       	add	r22, r26
    1d3e:	7b 1f       	adc	r23, r27
    1d40:	66 0f       	add	r22, r22
    1d42:	77 1f       	adc	r23, r23
    1d44:	68 0f       	add	r22, r24
    1d46:	71 1d       	adc	r23, r1
    1d48:	31 96       	adiw	r30, 0x01	; 1
    1d4a:	df 01       	movw	r26, r30
    1d4c:	11 97       	sbiw	r26, 0x01	; 1
    1d4e:	8c 91       	ld	r24, X
    1d50:	80 53       	subi	r24, 0x30	; 48
    1d52:	8a 30       	cpi	r24, 0x0A	; 10
    1d54:	50 f3       	brcs	.-44     	; 0x1d2a <strtod+0x17a>
    1d56:	14 ff       	sbrs	r17, 4
    1d58:	03 c0       	rjmp	.+6      	; 0x1d60 <strtod+0x1b0>
    1d5a:	71 95       	neg	r23
    1d5c:	61 95       	neg	r22
    1d5e:	71 09       	sbc	r23, r1
    1d60:	c6 0f       	add	r28, r22
    1d62:	d7 1f       	adc	r29, r23
    1d64:	11 ff       	sbrs	r17, 1
    1d66:	08 c0       	rjmp	.+16     	; 0x1d78 <strtod+0x1c8>
    1d68:	c1 14       	cp	r12, r1
    1d6a:	d1 04       	cpc	r13, r1
    1d6c:	29 f0       	breq	.+10     	; 0x1d78 <strtod+0x1c8>
    1d6e:	cf 01       	movw	r24, r30
    1d70:	01 97       	sbiw	r24, 0x01	; 1
    1d72:	f6 01       	movw	r30, r12
    1d74:	91 83       	std	Z+1, r25	; 0x01
    1d76:	80 83       	st	Z, r24
    1d78:	ca 01       	movw	r24, r20
    1d7a:	b9 01       	movw	r22, r18
    1d7c:	0e 94 9e 08 	call	0x113c	; 0x113c <__floatunsisf>
    1d80:	21 2f       	mov	r18, r17
    1d82:	23 70       	andi	r18, 0x03	; 3
    1d84:	23 30       	cpi	r18, 0x03	; 3
    1d86:	19 f0       	breq	.+6      	; 0x1d8e <strtod+0x1de>
    1d88:	4b 01       	movw	r8, r22
    1d8a:	5c 01       	movw	r10, r24
    1d8c:	06 c0       	rjmp	.+12     	; 0x1d9a <strtod+0x1ea>
    1d8e:	4b 01       	movw	r8, r22
    1d90:	5c 01       	movw	r10, r24
    1d92:	b7 fa       	bst	r11, 7
    1d94:	b0 94       	com	r11
    1d96:	b7 f8       	bld	r11, 7
    1d98:	b0 94       	com	r11
    1d9a:	20 e0       	ldi	r18, 0x00	; 0
    1d9c:	30 e0       	ldi	r19, 0x00	; 0
    1d9e:	a9 01       	movw	r20, r18
    1da0:	c5 01       	movw	r24, r10
    1da2:	b4 01       	movw	r22, r8
    1da4:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <__cmpsf2>
    1da8:	88 23       	and	r24, r24
    1daa:	09 f4       	brne	.+2      	; 0x1dae <strtod+0x1fe>
    1dac:	3e c0       	rjmp	.+124    	; 0x1e2a <strtod+0x27a>
    1dae:	d7 ff       	sbrs	r29, 7
    1db0:	06 c0       	rjmp	.+12     	; 0x1dbe <strtod+0x20e>
    1db2:	d1 95       	neg	r29
    1db4:	c1 95       	neg	r28
    1db6:	d1 09       	sbc	r29, r1
    1db8:	03 e7       	ldi	r16, 0x73	; 115
    1dba:	10 e0       	ldi	r17, 0x00	; 0
    1dbc:	02 c0       	rjmp	.+4      	; 0x1dc2 <strtod+0x212>
    1dbe:	0b e8       	ldi	r16, 0x8B	; 139
    1dc0:	10 e0       	ldi	r17, 0x00	; 0
    1dc2:	68 01       	movw	r12, r16
    1dc4:	f8 e1       	ldi	r31, 0x18	; 24
    1dc6:	cf 1a       	sub	r12, r31
    1dc8:	d1 08       	sbc	r13, r1
    1dca:	90 e2       	ldi	r25, 0x20	; 32
    1dcc:	e9 2e       	mov	r14, r25
    1dce:	f1 2c       	mov	r15, r1
    1dd0:	ce 15       	cp	r28, r14
    1dd2:	df 05       	cpc	r29, r15
    1dd4:	74 f0       	brlt	.+28     	; 0x1df2 <strtod+0x242>
    1dd6:	f8 01       	movw	r30, r16
    1dd8:	25 91       	lpm	r18, Z+
    1dda:	35 91       	lpm	r19, Z+
    1ddc:	45 91       	lpm	r20, Z+
    1dde:	54 91       	lpm	r21, Z
    1de0:	c5 01       	movw	r24, r10
    1de2:	b4 01       	movw	r22, r8
    1de4:	0e 94 55 09 	call	0x12aa	; 0x12aa <__mulsf3>
    1de8:	4b 01       	movw	r8, r22
    1dea:	5c 01       	movw	r10, r24
    1dec:	ce 19       	sub	r28, r14
    1dee:	df 09       	sbc	r29, r15
    1df0:	ef cf       	rjmp	.-34     	; 0x1dd0 <strtod+0x220>
    1df2:	04 50       	subi	r16, 0x04	; 4
    1df4:	11 09       	sbc	r17, r1
    1df6:	f5 94       	asr	r15
    1df8:	e7 94       	ror	r14
    1dfa:	0c 15       	cp	r16, r12
    1dfc:	1d 05       	cpc	r17, r13
    1dfe:	41 f7       	brne	.-48     	; 0x1dd0 <strtod+0x220>
    1e00:	8a 2d       	mov	r24, r10
    1e02:	88 0f       	add	r24, r24
    1e04:	8b 2d       	mov	r24, r11
    1e06:	88 1f       	adc	r24, r24
    1e08:	8f 3f       	cpi	r24, 0xFF	; 255
    1e0a:	49 f0       	breq	.+18     	; 0x1e1e <strtod+0x26e>
    1e0c:	20 e0       	ldi	r18, 0x00	; 0
    1e0e:	30 e0       	ldi	r19, 0x00	; 0
    1e10:	a9 01       	movw	r20, r18
    1e12:	c5 01       	movw	r24, r10
    1e14:	b4 01       	movw	r22, r8
    1e16:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <__cmpsf2>
    1e1a:	81 11       	cpse	r24, r1
    1e1c:	06 c0       	rjmp	.+12     	; 0x1e2a <strtod+0x27a>
    1e1e:	82 e2       	ldi	r24, 0x22	; 34
    1e20:	90 e0       	ldi	r25, 0x00	; 0
    1e22:	90 93 4c 02 	sts	0x024C, r25	; 0x80024c <errno+0x1>
    1e26:	80 93 4b 02 	sts	0x024B, r24	; 0x80024b <errno>
    1e2a:	c5 01       	movw	r24, r10
    1e2c:	b4 01       	movw	r22, r8
    1e2e:	09 c0       	rjmp	.+18     	; 0x1e42 <strtod+0x292>
    1e30:	60 e0       	ldi	r22, 0x00	; 0
    1e32:	70 e0       	ldi	r23, 0x00	; 0
    1e34:	80 e8       	ldi	r24, 0x80	; 128
    1e36:	9f ef       	ldi	r25, 0xFF	; 255
    1e38:	04 c0       	rjmp	.+8      	; 0x1e42 <strtod+0x292>
    1e3a:	60 e0       	ldi	r22, 0x00	; 0
    1e3c:	70 e0       	ldi	r23, 0x00	; 0
    1e3e:	80 ec       	ldi	r24, 0xC0	; 192
    1e40:	9f e7       	ldi	r25, 0x7F	; 127
    1e42:	cd b7       	in	r28, 0x3d	; 61
    1e44:	de b7       	in	r29, 0x3e	; 62
    1e46:	ec e0       	ldi	r30, 0x0C	; 12
    1e48:	0c 94 0f 11 	jmp	0x221e	; 0x221e <__epilogue_restores__+0xc>

00001e4c <__ftoa_engine>:
    1e4c:	28 30       	cpi	r18, 0x08	; 8
    1e4e:	08 f0       	brcs	.+2      	; 0x1e52 <__ftoa_engine+0x6>
    1e50:	27 e0       	ldi	r18, 0x07	; 7
    1e52:	33 27       	eor	r19, r19
    1e54:	da 01       	movw	r26, r20
    1e56:	99 0f       	add	r25, r25
    1e58:	31 1d       	adc	r19, r1
    1e5a:	87 fd       	sbrc	r24, 7
    1e5c:	91 60       	ori	r25, 0x01	; 1
    1e5e:	00 96       	adiw	r24, 0x00	; 0
    1e60:	61 05       	cpc	r22, r1
    1e62:	71 05       	cpc	r23, r1
    1e64:	39 f4       	brne	.+14     	; 0x1e74 <__ftoa_engine+0x28>
    1e66:	32 60       	ori	r19, 0x02	; 2
    1e68:	2e 5f       	subi	r18, 0xFE	; 254
    1e6a:	3d 93       	st	X+, r19
    1e6c:	30 e3       	ldi	r19, 0x30	; 48
    1e6e:	2a 95       	dec	r18
    1e70:	e1 f7       	brne	.-8      	; 0x1e6a <__ftoa_engine+0x1e>
    1e72:	08 95       	ret
    1e74:	9f 3f       	cpi	r25, 0xFF	; 255
    1e76:	30 f0       	brcs	.+12     	; 0x1e84 <__ftoa_engine+0x38>
    1e78:	80 38       	cpi	r24, 0x80	; 128
    1e7a:	71 05       	cpc	r23, r1
    1e7c:	61 05       	cpc	r22, r1
    1e7e:	09 f0       	breq	.+2      	; 0x1e82 <__ftoa_engine+0x36>
    1e80:	3c 5f       	subi	r19, 0xFC	; 252
    1e82:	3c 5f       	subi	r19, 0xFC	; 252
    1e84:	3d 93       	st	X+, r19
    1e86:	91 30       	cpi	r25, 0x01	; 1
    1e88:	08 f0       	brcs	.+2      	; 0x1e8c <__ftoa_engine+0x40>
    1e8a:	80 68       	ori	r24, 0x80	; 128
    1e8c:	91 1d       	adc	r25, r1
    1e8e:	df 93       	push	r29
    1e90:	cf 93       	push	r28
    1e92:	1f 93       	push	r17
    1e94:	0f 93       	push	r16
    1e96:	ff 92       	push	r15
    1e98:	ef 92       	push	r14
    1e9a:	19 2f       	mov	r17, r25
    1e9c:	98 7f       	andi	r25, 0xF8	; 248
    1e9e:	96 95       	lsr	r25
    1ea0:	e9 2f       	mov	r30, r25
    1ea2:	96 95       	lsr	r25
    1ea4:	96 95       	lsr	r25
    1ea6:	e9 0f       	add	r30, r25
    1ea8:	ff 27       	eor	r31, r31
    1eaa:	e7 51       	subi	r30, 0x17	; 23
    1eac:	ff 4f       	sbci	r31, 0xFF	; 255
    1eae:	99 27       	eor	r25, r25
    1eb0:	33 27       	eor	r19, r19
    1eb2:	ee 24       	eor	r14, r14
    1eb4:	ff 24       	eor	r15, r15
    1eb6:	a7 01       	movw	r20, r14
    1eb8:	e7 01       	movw	r28, r14
    1eba:	05 90       	lpm	r0, Z+
    1ebc:	08 94       	sec
    1ebe:	07 94       	ror	r0
    1ec0:	28 f4       	brcc	.+10     	; 0x1ecc <__ftoa_engine+0x80>
    1ec2:	36 0f       	add	r19, r22
    1ec4:	e7 1e       	adc	r14, r23
    1ec6:	f8 1e       	adc	r15, r24
    1ec8:	49 1f       	adc	r20, r25
    1eca:	51 1d       	adc	r21, r1
    1ecc:	66 0f       	add	r22, r22
    1ece:	77 1f       	adc	r23, r23
    1ed0:	88 1f       	adc	r24, r24
    1ed2:	99 1f       	adc	r25, r25
    1ed4:	06 94       	lsr	r0
    1ed6:	a1 f7       	brne	.-24     	; 0x1ec0 <__ftoa_engine+0x74>
    1ed8:	05 90       	lpm	r0, Z+
    1eda:	07 94       	ror	r0
    1edc:	28 f4       	brcc	.+10     	; 0x1ee8 <__ftoa_engine+0x9c>
    1ede:	e7 0e       	add	r14, r23
    1ee0:	f8 1e       	adc	r15, r24
    1ee2:	49 1f       	adc	r20, r25
    1ee4:	56 1f       	adc	r21, r22
    1ee6:	c1 1d       	adc	r28, r1
    1ee8:	77 0f       	add	r23, r23
    1eea:	88 1f       	adc	r24, r24
    1eec:	99 1f       	adc	r25, r25
    1eee:	66 1f       	adc	r22, r22
    1ef0:	06 94       	lsr	r0
    1ef2:	a1 f7       	brne	.-24     	; 0x1edc <__ftoa_engine+0x90>
    1ef4:	05 90       	lpm	r0, Z+
    1ef6:	07 94       	ror	r0
    1ef8:	28 f4       	brcc	.+10     	; 0x1f04 <__ftoa_engine+0xb8>
    1efa:	f8 0e       	add	r15, r24
    1efc:	49 1f       	adc	r20, r25
    1efe:	56 1f       	adc	r21, r22
    1f00:	c7 1f       	adc	r28, r23
    1f02:	d1 1d       	adc	r29, r1
    1f04:	88 0f       	add	r24, r24
    1f06:	99 1f       	adc	r25, r25
    1f08:	66 1f       	adc	r22, r22
    1f0a:	77 1f       	adc	r23, r23
    1f0c:	06 94       	lsr	r0
    1f0e:	a1 f7       	brne	.-24     	; 0x1ef8 <__ftoa_engine+0xac>
    1f10:	05 90       	lpm	r0, Z+
    1f12:	07 94       	ror	r0
    1f14:	20 f4       	brcc	.+8      	; 0x1f1e <__ftoa_engine+0xd2>
    1f16:	49 0f       	add	r20, r25
    1f18:	56 1f       	adc	r21, r22
    1f1a:	c7 1f       	adc	r28, r23
    1f1c:	d8 1f       	adc	r29, r24
    1f1e:	99 0f       	add	r25, r25
    1f20:	66 1f       	adc	r22, r22
    1f22:	77 1f       	adc	r23, r23
    1f24:	88 1f       	adc	r24, r24
    1f26:	06 94       	lsr	r0
    1f28:	a9 f7       	brne	.-22     	; 0x1f14 <__ftoa_engine+0xc8>
    1f2a:	84 91       	lpm	r24, Z
    1f2c:	10 95       	com	r17
    1f2e:	17 70       	andi	r17, 0x07	; 7
    1f30:	41 f0       	breq	.+16     	; 0x1f42 <__ftoa_engine+0xf6>
    1f32:	d6 95       	lsr	r29
    1f34:	c7 95       	ror	r28
    1f36:	57 95       	ror	r21
    1f38:	47 95       	ror	r20
    1f3a:	f7 94       	ror	r15
    1f3c:	e7 94       	ror	r14
    1f3e:	1a 95       	dec	r17
    1f40:	c1 f7       	brne	.-16     	; 0x1f32 <__ftoa_engine+0xe6>
    1f42:	ef e8       	ldi	r30, 0x8F	; 143
    1f44:	f0 e0       	ldi	r31, 0x00	; 0
    1f46:	68 94       	set
    1f48:	15 90       	lpm	r1, Z+
    1f4a:	15 91       	lpm	r17, Z+
    1f4c:	35 91       	lpm	r19, Z+
    1f4e:	65 91       	lpm	r22, Z+
    1f50:	95 91       	lpm	r25, Z+
    1f52:	05 90       	lpm	r0, Z+
    1f54:	7f e2       	ldi	r23, 0x2F	; 47
    1f56:	73 95       	inc	r23
    1f58:	e1 18       	sub	r14, r1
    1f5a:	f1 0a       	sbc	r15, r17
    1f5c:	43 0b       	sbc	r20, r19
    1f5e:	56 0b       	sbc	r21, r22
    1f60:	c9 0b       	sbc	r28, r25
    1f62:	d0 09       	sbc	r29, r0
    1f64:	c0 f7       	brcc	.-16     	; 0x1f56 <__ftoa_engine+0x10a>
    1f66:	e1 0c       	add	r14, r1
    1f68:	f1 1e       	adc	r15, r17
    1f6a:	43 1f       	adc	r20, r19
    1f6c:	56 1f       	adc	r21, r22
    1f6e:	c9 1f       	adc	r28, r25
    1f70:	d0 1d       	adc	r29, r0
    1f72:	7e f4       	brtc	.+30     	; 0x1f92 <__ftoa_engine+0x146>
    1f74:	70 33       	cpi	r23, 0x30	; 48
    1f76:	11 f4       	brne	.+4      	; 0x1f7c <__ftoa_engine+0x130>
    1f78:	8a 95       	dec	r24
    1f7a:	e6 cf       	rjmp	.-52     	; 0x1f48 <__ftoa_engine+0xfc>
    1f7c:	e8 94       	clt
    1f7e:	01 50       	subi	r16, 0x01	; 1
    1f80:	30 f0       	brcs	.+12     	; 0x1f8e <__ftoa_engine+0x142>
    1f82:	08 0f       	add	r16, r24
    1f84:	0a f4       	brpl	.+2      	; 0x1f88 <__ftoa_engine+0x13c>
    1f86:	00 27       	eor	r16, r16
    1f88:	02 17       	cp	r16, r18
    1f8a:	08 f4       	brcc	.+2      	; 0x1f8e <__ftoa_engine+0x142>
    1f8c:	20 2f       	mov	r18, r16
    1f8e:	23 95       	inc	r18
    1f90:	02 2f       	mov	r16, r18
    1f92:	7a 33       	cpi	r23, 0x3A	; 58
    1f94:	28 f0       	brcs	.+10     	; 0x1fa0 <__ftoa_engine+0x154>
    1f96:	79 e3       	ldi	r23, 0x39	; 57
    1f98:	7d 93       	st	X+, r23
    1f9a:	2a 95       	dec	r18
    1f9c:	e9 f7       	brne	.-6      	; 0x1f98 <__ftoa_engine+0x14c>
    1f9e:	10 c0       	rjmp	.+32     	; 0x1fc0 <__ftoa_engine+0x174>
    1fa0:	7d 93       	st	X+, r23
    1fa2:	2a 95       	dec	r18
    1fa4:	89 f6       	brne	.-94     	; 0x1f48 <__ftoa_engine+0xfc>
    1fa6:	06 94       	lsr	r0
    1fa8:	97 95       	ror	r25
    1faa:	67 95       	ror	r22
    1fac:	37 95       	ror	r19
    1fae:	17 95       	ror	r17
    1fb0:	17 94       	ror	r1
    1fb2:	e1 18       	sub	r14, r1
    1fb4:	f1 0a       	sbc	r15, r17
    1fb6:	43 0b       	sbc	r20, r19
    1fb8:	56 0b       	sbc	r21, r22
    1fba:	c9 0b       	sbc	r28, r25
    1fbc:	d0 09       	sbc	r29, r0
    1fbe:	98 f0       	brcs	.+38     	; 0x1fe6 <__ftoa_engine+0x19a>
    1fc0:	23 95       	inc	r18
    1fc2:	7e 91       	ld	r23, -X
    1fc4:	73 95       	inc	r23
    1fc6:	7a 33       	cpi	r23, 0x3A	; 58
    1fc8:	08 f0       	brcs	.+2      	; 0x1fcc <__ftoa_engine+0x180>
    1fca:	70 e3       	ldi	r23, 0x30	; 48
    1fcc:	7c 93       	st	X, r23
    1fce:	20 13       	cpse	r18, r16
    1fd0:	b8 f7       	brcc	.-18     	; 0x1fc0 <__ftoa_engine+0x174>
    1fd2:	7e 91       	ld	r23, -X
    1fd4:	70 61       	ori	r23, 0x10	; 16
    1fd6:	7d 93       	st	X+, r23
    1fd8:	30 f0       	brcs	.+12     	; 0x1fe6 <__ftoa_engine+0x19a>
    1fda:	83 95       	inc	r24
    1fdc:	71 e3       	ldi	r23, 0x31	; 49
    1fde:	7d 93       	st	X+, r23
    1fe0:	70 e3       	ldi	r23, 0x30	; 48
    1fe2:	2a 95       	dec	r18
    1fe4:	e1 f7       	brne	.-8      	; 0x1fde <__ftoa_engine+0x192>
    1fe6:	11 24       	eor	r1, r1
    1fe8:	ef 90       	pop	r14
    1fea:	ff 90       	pop	r15
    1fec:	0f 91       	pop	r16
    1fee:	1f 91       	pop	r17
    1ff0:	cf 91       	pop	r28
    1ff2:	df 91       	pop	r29
    1ff4:	99 27       	eor	r25, r25
    1ff6:	87 fd       	sbrc	r24, 7
    1ff8:	90 95       	com	r25
    1ffa:	08 95       	ret

00001ffc <isspace>:
    1ffc:	91 11       	cpse	r25, r1
    1ffe:	0c 94 df 10 	jmp	0x21be	; 0x21be <__ctype_isfalse>
    2002:	80 32       	cpi	r24, 0x20	; 32
    2004:	19 f0       	breq	.+6      	; 0x200c <isspace+0x10>
    2006:	89 50       	subi	r24, 0x09	; 9
    2008:	85 50       	subi	r24, 0x05	; 5
    200a:	c8 f7       	brcc	.-14     	; 0x1ffe <isspace+0x2>
    200c:	08 95       	ret

0000200e <strncasecmp_P>:
    200e:	fb 01       	movw	r30, r22
    2010:	dc 01       	movw	r26, r24
    2012:	41 50       	subi	r20, 0x01	; 1
    2014:	50 40       	sbci	r21, 0x00	; 0
    2016:	88 f0       	brcs	.+34     	; 0x203a <strncasecmp_P+0x2c>
    2018:	8d 91       	ld	r24, X+
    201a:	81 34       	cpi	r24, 0x41	; 65
    201c:	1c f0       	brlt	.+6      	; 0x2024 <strncasecmp_P+0x16>
    201e:	8b 35       	cpi	r24, 0x5B	; 91
    2020:	0c f4       	brge	.+2      	; 0x2024 <strncasecmp_P+0x16>
    2022:	80 5e       	subi	r24, 0xE0	; 224
    2024:	65 91       	lpm	r22, Z+
    2026:	61 34       	cpi	r22, 0x41	; 65
    2028:	1c f0       	brlt	.+6      	; 0x2030 <strncasecmp_P+0x22>
    202a:	6b 35       	cpi	r22, 0x5B	; 91
    202c:	0c f4       	brge	.+2      	; 0x2030 <strncasecmp_P+0x22>
    202e:	60 5e       	subi	r22, 0xE0	; 224
    2030:	86 1b       	sub	r24, r22
    2032:	61 11       	cpse	r22, r1
    2034:	71 f3       	breq	.-36     	; 0x2012 <strncasecmp_P+0x4>
    2036:	99 0b       	sbc	r25, r25
    2038:	08 95       	ret
    203a:	88 1b       	sub	r24, r24
    203c:	fc cf       	rjmp	.-8      	; 0x2036 <strncasecmp_P+0x28>

0000203e <strnlen_P>:
    203e:	fc 01       	movw	r30, r24
    2040:	05 90       	lpm	r0, Z+
    2042:	61 50       	subi	r22, 0x01	; 1
    2044:	70 40       	sbci	r23, 0x00	; 0
    2046:	01 10       	cpse	r0, r1
    2048:	d8 f7       	brcc	.-10     	; 0x2040 <strnlen_P+0x2>
    204a:	80 95       	com	r24
    204c:	90 95       	com	r25
    204e:	8e 0f       	add	r24, r30
    2050:	9f 1f       	adc	r25, r31
    2052:	08 95       	ret

00002054 <strnlen>:
    2054:	fc 01       	movw	r30, r24
    2056:	61 50       	subi	r22, 0x01	; 1
    2058:	70 40       	sbci	r23, 0x00	; 0
    205a:	01 90       	ld	r0, Z+
    205c:	01 10       	cpse	r0, r1
    205e:	d8 f7       	brcc	.-10     	; 0x2056 <strnlen+0x2>
    2060:	80 95       	com	r24
    2062:	90 95       	com	r25
    2064:	8e 0f       	add	r24, r30
    2066:	9f 1f       	adc	r25, r31
    2068:	08 95       	ret

0000206a <strrev>:
    206a:	dc 01       	movw	r26, r24
    206c:	fc 01       	movw	r30, r24
    206e:	67 2f       	mov	r22, r23
    2070:	71 91       	ld	r23, Z+
    2072:	77 23       	and	r23, r23
    2074:	e1 f7       	brne	.-8      	; 0x206e <strrev+0x4>
    2076:	32 97       	sbiw	r30, 0x02	; 2
    2078:	04 c0       	rjmp	.+8      	; 0x2082 <strrev+0x18>
    207a:	7c 91       	ld	r23, X
    207c:	6d 93       	st	X+, r22
    207e:	70 83       	st	Z, r23
    2080:	62 91       	ld	r22, -Z
    2082:	ae 17       	cp	r26, r30
    2084:	bf 07       	cpc	r27, r31
    2086:	c8 f3       	brcs	.-14     	; 0x207a <strrev+0x10>
    2088:	08 95       	ret

0000208a <fputc>:
    208a:	0f 93       	push	r16
    208c:	1f 93       	push	r17
    208e:	cf 93       	push	r28
    2090:	df 93       	push	r29
    2092:	fb 01       	movw	r30, r22
    2094:	23 81       	ldd	r18, Z+3	; 0x03
    2096:	21 fd       	sbrc	r18, 1
    2098:	03 c0       	rjmp	.+6      	; 0x20a0 <fputc+0x16>
    209a:	8f ef       	ldi	r24, 0xFF	; 255
    209c:	9f ef       	ldi	r25, 0xFF	; 255
    209e:	2c c0       	rjmp	.+88     	; 0x20f8 <fputc+0x6e>
    20a0:	22 ff       	sbrs	r18, 2
    20a2:	16 c0       	rjmp	.+44     	; 0x20d0 <fputc+0x46>
    20a4:	46 81       	ldd	r20, Z+6	; 0x06
    20a6:	57 81       	ldd	r21, Z+7	; 0x07
    20a8:	24 81       	ldd	r18, Z+4	; 0x04
    20aa:	35 81       	ldd	r19, Z+5	; 0x05
    20ac:	42 17       	cp	r20, r18
    20ae:	53 07       	cpc	r21, r19
    20b0:	44 f4       	brge	.+16     	; 0x20c2 <fputc+0x38>
    20b2:	a0 81       	ld	r26, Z
    20b4:	b1 81       	ldd	r27, Z+1	; 0x01
    20b6:	9d 01       	movw	r18, r26
    20b8:	2f 5f       	subi	r18, 0xFF	; 255
    20ba:	3f 4f       	sbci	r19, 0xFF	; 255
    20bc:	31 83       	std	Z+1, r19	; 0x01
    20be:	20 83       	st	Z, r18
    20c0:	8c 93       	st	X, r24
    20c2:	26 81       	ldd	r18, Z+6	; 0x06
    20c4:	37 81       	ldd	r19, Z+7	; 0x07
    20c6:	2f 5f       	subi	r18, 0xFF	; 255
    20c8:	3f 4f       	sbci	r19, 0xFF	; 255
    20ca:	37 83       	std	Z+7, r19	; 0x07
    20cc:	26 83       	std	Z+6, r18	; 0x06
    20ce:	14 c0       	rjmp	.+40     	; 0x20f8 <fputc+0x6e>
    20d0:	8b 01       	movw	r16, r22
    20d2:	ec 01       	movw	r28, r24
    20d4:	fb 01       	movw	r30, r22
    20d6:	00 84       	ldd	r0, Z+8	; 0x08
    20d8:	f1 85       	ldd	r31, Z+9	; 0x09
    20da:	e0 2d       	mov	r30, r0
    20dc:	09 95       	icall
    20de:	89 2b       	or	r24, r25
    20e0:	e1 f6       	brne	.-72     	; 0x209a <fputc+0x10>
    20e2:	d8 01       	movw	r26, r16
    20e4:	16 96       	adiw	r26, 0x06	; 6
    20e6:	8d 91       	ld	r24, X+
    20e8:	9c 91       	ld	r25, X
    20ea:	17 97       	sbiw	r26, 0x07	; 7
    20ec:	01 96       	adiw	r24, 0x01	; 1
    20ee:	17 96       	adiw	r26, 0x07	; 7
    20f0:	9c 93       	st	X, r25
    20f2:	8e 93       	st	-X, r24
    20f4:	16 97       	sbiw	r26, 0x06	; 6
    20f6:	ce 01       	movw	r24, r28
    20f8:	df 91       	pop	r29
    20fa:	cf 91       	pop	r28
    20fc:	1f 91       	pop	r17
    20fe:	0f 91       	pop	r16
    2100:	08 95       	ret

00002102 <__ultoa_invert>:
    2102:	fa 01       	movw	r30, r20
    2104:	aa 27       	eor	r26, r26
    2106:	28 30       	cpi	r18, 0x08	; 8
    2108:	51 f1       	breq	.+84     	; 0x215e <__ultoa_invert+0x5c>
    210a:	20 31       	cpi	r18, 0x10	; 16
    210c:	81 f1       	breq	.+96     	; 0x216e <__ultoa_invert+0x6c>
    210e:	e8 94       	clt
    2110:	6f 93       	push	r22
    2112:	6e 7f       	andi	r22, 0xFE	; 254
    2114:	6e 5f       	subi	r22, 0xFE	; 254
    2116:	7f 4f       	sbci	r23, 0xFF	; 255
    2118:	8f 4f       	sbci	r24, 0xFF	; 255
    211a:	9f 4f       	sbci	r25, 0xFF	; 255
    211c:	af 4f       	sbci	r26, 0xFF	; 255
    211e:	b1 e0       	ldi	r27, 0x01	; 1
    2120:	3e d0       	rcall	.+124    	; 0x219e <__ultoa_invert+0x9c>
    2122:	b4 e0       	ldi	r27, 0x04	; 4
    2124:	3c d0       	rcall	.+120    	; 0x219e <__ultoa_invert+0x9c>
    2126:	67 0f       	add	r22, r23
    2128:	78 1f       	adc	r23, r24
    212a:	89 1f       	adc	r24, r25
    212c:	9a 1f       	adc	r25, r26
    212e:	a1 1d       	adc	r26, r1
    2130:	68 0f       	add	r22, r24
    2132:	79 1f       	adc	r23, r25
    2134:	8a 1f       	adc	r24, r26
    2136:	91 1d       	adc	r25, r1
    2138:	a1 1d       	adc	r26, r1
    213a:	6a 0f       	add	r22, r26
    213c:	71 1d       	adc	r23, r1
    213e:	81 1d       	adc	r24, r1
    2140:	91 1d       	adc	r25, r1
    2142:	a1 1d       	adc	r26, r1
    2144:	20 d0       	rcall	.+64     	; 0x2186 <__ultoa_invert+0x84>
    2146:	09 f4       	brne	.+2      	; 0x214a <__ultoa_invert+0x48>
    2148:	68 94       	set
    214a:	3f 91       	pop	r19
    214c:	2a e0       	ldi	r18, 0x0A	; 10
    214e:	26 9f       	mul	r18, r22
    2150:	11 24       	eor	r1, r1
    2152:	30 19       	sub	r19, r0
    2154:	30 5d       	subi	r19, 0xD0	; 208
    2156:	31 93       	st	Z+, r19
    2158:	de f6       	brtc	.-74     	; 0x2110 <__ultoa_invert+0xe>
    215a:	cf 01       	movw	r24, r30
    215c:	08 95       	ret
    215e:	46 2f       	mov	r20, r22
    2160:	47 70       	andi	r20, 0x07	; 7
    2162:	40 5d       	subi	r20, 0xD0	; 208
    2164:	41 93       	st	Z+, r20
    2166:	b3 e0       	ldi	r27, 0x03	; 3
    2168:	0f d0       	rcall	.+30     	; 0x2188 <__ultoa_invert+0x86>
    216a:	c9 f7       	brne	.-14     	; 0x215e <__ultoa_invert+0x5c>
    216c:	f6 cf       	rjmp	.-20     	; 0x215a <__ultoa_invert+0x58>
    216e:	46 2f       	mov	r20, r22
    2170:	4f 70       	andi	r20, 0x0F	; 15
    2172:	40 5d       	subi	r20, 0xD0	; 208
    2174:	4a 33       	cpi	r20, 0x3A	; 58
    2176:	18 f0       	brcs	.+6      	; 0x217e <__ultoa_invert+0x7c>
    2178:	49 5d       	subi	r20, 0xD9	; 217
    217a:	31 fd       	sbrc	r19, 1
    217c:	40 52       	subi	r20, 0x20	; 32
    217e:	41 93       	st	Z+, r20
    2180:	02 d0       	rcall	.+4      	; 0x2186 <__ultoa_invert+0x84>
    2182:	a9 f7       	brne	.-22     	; 0x216e <__ultoa_invert+0x6c>
    2184:	ea cf       	rjmp	.-44     	; 0x215a <__ultoa_invert+0x58>
    2186:	b4 e0       	ldi	r27, 0x04	; 4
    2188:	a6 95       	lsr	r26
    218a:	97 95       	ror	r25
    218c:	87 95       	ror	r24
    218e:	77 95       	ror	r23
    2190:	67 95       	ror	r22
    2192:	ba 95       	dec	r27
    2194:	c9 f7       	brne	.-14     	; 0x2188 <__ultoa_invert+0x86>
    2196:	00 97       	sbiw	r24, 0x00	; 0
    2198:	61 05       	cpc	r22, r1
    219a:	71 05       	cpc	r23, r1
    219c:	08 95       	ret
    219e:	9b 01       	movw	r18, r22
    21a0:	ac 01       	movw	r20, r24
    21a2:	0a 2e       	mov	r0, r26
    21a4:	06 94       	lsr	r0
    21a6:	57 95       	ror	r21
    21a8:	47 95       	ror	r20
    21aa:	37 95       	ror	r19
    21ac:	27 95       	ror	r18
    21ae:	ba 95       	dec	r27
    21b0:	c9 f7       	brne	.-14     	; 0x21a4 <__ultoa_invert+0xa2>
    21b2:	62 0f       	add	r22, r18
    21b4:	73 1f       	adc	r23, r19
    21b6:	84 1f       	adc	r24, r20
    21b8:	95 1f       	adc	r25, r21
    21ba:	a0 1d       	adc	r26, r0
    21bc:	08 95       	ret

000021be <__ctype_isfalse>:
    21be:	99 27       	eor	r25, r25
    21c0:	88 27       	eor	r24, r24

000021c2 <__ctype_istrue>:
    21c2:	08 95       	ret

000021c4 <__muluhisi3>:
    21c4:	0e 94 24 11 	call	0x2248	; 0x2248 <__umulhisi3>
    21c8:	a5 9f       	mul	r26, r21
    21ca:	90 0d       	add	r25, r0
    21cc:	b4 9f       	mul	r27, r20
    21ce:	90 0d       	add	r25, r0
    21d0:	a4 9f       	mul	r26, r20
    21d2:	80 0d       	add	r24, r0
    21d4:	91 1d       	adc	r25, r1
    21d6:	11 24       	eor	r1, r1
    21d8:	08 95       	ret

000021da <__prologue_saves__>:
    21da:	2f 92       	push	r2
    21dc:	3f 92       	push	r3
    21de:	4f 92       	push	r4
    21e0:	5f 92       	push	r5
    21e2:	6f 92       	push	r6
    21e4:	7f 92       	push	r7
    21e6:	8f 92       	push	r8
    21e8:	9f 92       	push	r9
    21ea:	af 92       	push	r10
    21ec:	bf 92       	push	r11
    21ee:	cf 92       	push	r12
    21f0:	df 92       	push	r13
    21f2:	ef 92       	push	r14
    21f4:	ff 92       	push	r15
    21f6:	0f 93       	push	r16
    21f8:	1f 93       	push	r17
    21fa:	cf 93       	push	r28
    21fc:	df 93       	push	r29
    21fe:	cd b7       	in	r28, 0x3d	; 61
    2200:	de b7       	in	r29, 0x3e	; 62
    2202:	ca 1b       	sub	r28, r26
    2204:	db 0b       	sbc	r29, r27
    2206:	0f b6       	in	r0, 0x3f	; 63
    2208:	f8 94       	cli
    220a:	de bf       	out	0x3e, r29	; 62
    220c:	0f be       	out	0x3f, r0	; 63
    220e:	cd bf       	out	0x3d, r28	; 61
    2210:	09 94       	ijmp

00002212 <__epilogue_restores__>:
    2212:	2a 88       	ldd	r2, Y+18	; 0x12
    2214:	39 88       	ldd	r3, Y+17	; 0x11
    2216:	48 88       	ldd	r4, Y+16	; 0x10
    2218:	5f 84       	ldd	r5, Y+15	; 0x0f
    221a:	6e 84       	ldd	r6, Y+14	; 0x0e
    221c:	7d 84       	ldd	r7, Y+13	; 0x0d
    221e:	8c 84       	ldd	r8, Y+12	; 0x0c
    2220:	9b 84       	ldd	r9, Y+11	; 0x0b
    2222:	aa 84       	ldd	r10, Y+10	; 0x0a
    2224:	b9 84       	ldd	r11, Y+9	; 0x09
    2226:	c8 84       	ldd	r12, Y+8	; 0x08
    2228:	df 80       	ldd	r13, Y+7	; 0x07
    222a:	ee 80       	ldd	r14, Y+6	; 0x06
    222c:	fd 80       	ldd	r15, Y+5	; 0x05
    222e:	0c 81       	ldd	r16, Y+4	; 0x04
    2230:	1b 81       	ldd	r17, Y+3	; 0x03
    2232:	aa 81       	ldd	r26, Y+2	; 0x02
    2234:	b9 81       	ldd	r27, Y+1	; 0x01
    2236:	ce 0f       	add	r28, r30
    2238:	d1 1d       	adc	r29, r1
    223a:	0f b6       	in	r0, 0x3f	; 63
    223c:	f8 94       	cli
    223e:	de bf       	out	0x3e, r29	; 62
    2240:	0f be       	out	0x3f, r0	; 63
    2242:	cd bf       	out	0x3d, r28	; 61
    2244:	ed 01       	movw	r28, r26
    2246:	08 95       	ret

00002248 <__umulhisi3>:
    2248:	a2 9f       	mul	r26, r18
    224a:	b0 01       	movw	r22, r0
    224c:	b3 9f       	mul	r27, r19
    224e:	c0 01       	movw	r24, r0
    2250:	a3 9f       	mul	r26, r19
    2252:	70 0d       	add	r23, r0
    2254:	81 1d       	adc	r24, r1
    2256:	11 24       	eor	r1, r1
    2258:	91 1d       	adc	r25, r1
    225a:	b2 9f       	mul	r27, r18
    225c:	70 0d       	add	r23, r0
    225e:	81 1d       	adc	r24, r1
    2260:	11 24       	eor	r1, r1
    2262:	91 1d       	adc	r25, r1
    2264:	08 95       	ret

00002266 <_exit>:
    2266:	f8 94       	cli

00002268 <__stop_program>:
    2268:	ff cf       	rjmp	.-2      	; 0x2268 <__stop_program>
